{"id":"15cd19a864460ea9aaad5491d766c5b2","_format":"hh-sol-build-info-1","solcVersion":"0.8.22","solcLongVersion":"0.8.22+commit.4fc1097e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    function __Pausable_init() internal onlyInitializing {\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1967.sol)\n\npragma solidity >=0.4.11;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                revert(add(returndata, 0x20), mload(returndata))\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/SuperBridgeL2.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.22;\r\n\r\nimport { ECDSA } from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport { MessageHashUtils } from \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\r\nimport { ReentrancyGuardUpgradeable } from \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\r\nimport { Initializable } from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport { UUPSUpgradeable } from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport { OwnableUpgradeable } from \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport { PausableUpgradeable } from \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\r\n\r\n/**\r\n * @title SuperBridgeL2 - L2 to L1 Bridge with Timelock\r\n * @notice Handles native token bridging from L2 to L1 with validator signatures\r\n */\r\ncontract SuperBridgeL2 is \r\n    Initializable, \r\n    UUPSUpgradeable, \r\n    OwnableUpgradeable, \r\n    ReentrancyGuardUpgradeable,\r\n    PausableUpgradeable\r\n{\r\n    // ========== STORAGE LAYOUT ==========\r\n    // NEVER change order of existing variables!\r\n    \r\n    address public feeRecipient;\r\n    uint256 public constant FEE_BPS = 500; // 5%\r\n    uint256 public constant BPS_DENOMINATOR = 10000;\r\n    uint256 public constant REFUND_TIMEOUT = 30 minutes;\r\n    uint256 public constant MIN_SIGNATURES = 1; // 1-of-1 quorum\r\n\r\n    mapping(address => bool) public isFeeExempt;\r\n    mapping(address => uint256) public userNonces;\r\n    \r\n    enum Status { Pending, Completed, Refunded }\r\n    \r\n    struct Transfer {\r\n        address user;\r\n        uint256 originalAmount;\r\n        uint256 bridgedAmount;\r\n        uint256 timestamp;\r\n        Status status;\r\n    }\r\n    \r\n    mapping(bytes32 => Transfer) public transfers;\r\n    mapping(address => bool) public isValidSigner;\r\n    uint256 public numSigners;\r\n\r\n    // Timelock variables\r\n    uint256 public upgradeTimelock;\r\n    mapping(bytes32 => uint256) public pendingUpgrades;\r\n    \r\n    // Emergency features\r\n    mapping(address => bool) public emergencyOperators;\r\n    uint256 public emergencyWithdrawDelay;\r\n    uint256 public emergencyWithdrawTime;\r\n    \r\n    string public version;\r\n\r\n    // ========== EVENTS ==========\r\n    event BridgeInitiated(\r\n        address indexed user,\r\n        uint256 originalAmount,\r\n        uint256 bridgedAmount,\r\n        bytes32 transferId,\r\n        uint256 timestamp\r\n    );\r\n    event BridgeCompleted(bytes32 indexed transferId, address user, uint256 bridgedAmount);\r\n    event Refunded(bytes32 indexed transferId, address user, uint256 amount);\r\n    event FeeExemptUpdated(address indexed user, bool exempt);\r\n    event ValidatorUpdated(address indexed validator, bool isValid);\r\n    event FeeRecipientUpdated(address oldRecipient, address newRecipient);\r\n    event UpgradeScheduled(bytes32 indexed upgradeHash, address newImplementation, uint256 executeTime);\r\n    event UpgradeExecuted(bytes32 indexed upgradeHash, address newImplementation);\r\n    event TimelockUpdated(uint256 oldTimelock, uint256 newTimelock);\r\n\r\n    // ========== ERRORS ==========\r\n    error InvalidAmount();\r\n    error NotAuthorized();\r\n    error AlreadyFinalized();\r\n    error InvalidTransferId();\r\n    error InvalidSigner();\r\n    error NotAuthorizedSigner();\r\n    error DuplicateSigner();\r\n    error NotEnoughSignatures();\r\n    error ForwardFailed();\r\n    error NotRefundable();\r\n    error NotYourTransfer();\r\n    error RefundNotAvailable();\r\n    error RefundFailed();\r\n    error InvalidTimelock();\r\n    error UpgradeNotReady();\r\n    error UpgradeNotScheduled();\r\n\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n\r\n    function initialize(\r\n        address _feeRecipient,\r\n        uint256 _upgradeTimelock\r\n    ) public initializer {\r\n        __Ownable_init(msg.sender);\r\n        __ReentrancyGuard_init();\r\n        __UUPSUpgradeable_init();\r\n        __Pausable_init();\r\n        \r\n        feeRecipient = _feeRecipient;\r\n        upgradeTimelock = _upgradeTimelock; // 5 minutes for testing\r\n        emergencyWithdrawDelay = 24 hours;\r\n        version = \"1.0.0\";\r\n        \r\n        // Set initial fee exempt address\r\n        isFeeExempt[0x17CaBc8001a30800835DD8206CEB0c4bA90B5913] = true;\r\n        \r\n        // Set single validator\r\n        isValidSigner[0x73aF5be3DB46Ce3b7c50Fd833B9C60180f339449] = true;\r\n        numSigners = 1;\r\n\r\n        // Set deployer as emergency operator\r\n        emergencyOperators[msg.sender] = true;\r\n    }\r\n\r\n    // ========== TIMELOCK UPGRADE SYSTEM ==========\r\n    \r\n    function scheduleUpgrade(address newImplementation) external onlyOwner {\r\n        bytes32 upgradeHash = keccak256(abi.encodePacked(newImplementation, block.timestamp));\r\n        uint256 executeTime = block.timestamp + upgradeTimelock;\r\n        \r\n        pendingUpgrades[upgradeHash] = executeTime;\r\n        \r\n        emit UpgradeScheduled(upgradeHash, newImplementation, executeTime);\r\n    }\r\n\r\n    function executeUpgrade(address newImplementation, uint256 scheduleTime) external onlyOwner {\r\n        bytes32 upgradeHash = keccak256(abi.encodePacked(newImplementation, scheduleTime));\r\n        uint256 executeTime = pendingUpgrades[upgradeHash];\r\n        \r\n        if (executeTime == 0) revert UpgradeNotScheduled();\r\n        if (block.timestamp < executeTime) revert UpgradeNotReady();\r\n        \r\n        delete pendingUpgrades[upgradeHash];\r\n       \r\n        \r\n        emit UpgradeExecuted(upgradeHash, newImplementation);\r\n    }\r\n\r\n    function updateTimelock(uint256 newTimelock) external onlyOwner {\r\n        if (newTimelock < 300) revert InvalidTimelock(); // Minimum 5 minutes\r\n        \r\n        uint256 oldTimelock = upgradeTimelock;\r\n        upgradeTimelock = newTimelock;\r\n        \r\n        emit TimelockUpdated(oldTimelock, newTimelock);\r\n    }\r\n\r\n    // ========== ADMIN FUNCTIONS ==========\r\n\r\n    function setFeeExempt(address user, bool exempt) external onlyOwner {\r\n        isFeeExempt[user] = exempt;\r\n        emit FeeExemptUpdated(user, exempt);\r\n    }\r\n\r\n    function setValidator(address validator, bool isValid) external onlyOwner {\r\n        if (isValid && !isValidSigner[validator]) {\r\n            numSigners++;\r\n        } else if (!isValid && isValidSigner[validator]) {\r\n            numSigners--;\r\n        }\r\n        isValidSigner[validator] = isValid;\r\n        emit ValidatorUpdated(validator, isValid);\r\n    }\r\n\r\n    function setFeeRecipient(address _feeRecipient) external onlyOwner {\r\n        address oldRecipient = feeRecipient;\r\n        feeRecipient = _feeRecipient;\r\n        emit FeeRecipientUpdated(oldRecipient, _feeRecipient);\r\n    }\r\n\r\n    function setEmergencyOperator(address operator, bool status) external onlyOwner {\r\n        emergencyOperators[operator] = status;\r\n    }\r\n\r\n    function emergencyPause() external {\r\n        if (!emergencyOperators[msg.sender]) revert NotAuthorized();\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    // ========== BRIDGE FUNCTIONS ==========\r\n\r\n    function bridge() external payable nonReentrant whenNotPaused {\r\n        if (msg.value == 0) revert InvalidAmount();\r\n        \r\n        uint256 fee = 0;\r\n        uint256 bridged = msg.value;\r\n        \r\n        if (!isFeeExempt[msg.sender]) {\r\n            fee = (msg.value * FEE_BPS) / BPS_DENOMINATOR;\r\n            bridged = msg.value - fee;\r\n        }\r\n        \r\n        uint256 nonce = userNonces[msg.sender]++;\r\n        bytes32 transferId = keccak256(abi.encodePacked(\r\n            msg.sender, \r\n            msg.value, \r\n            block.timestamp, \r\n            nonce,\r\n            address(this)\r\n        ));\r\n        \r\n        transfers[transferId] = Transfer({\r\n            user: msg.sender,\r\n            originalAmount: msg.value,\r\n            bridgedAmount: bridged,\r\n            timestamp: block.timestamp,\r\n            status: Status.Pending\r\n        });\r\n        \r\n        emit BridgeInitiated(msg.sender, msg.value, bridged, transferId, block.timestamp);\r\n    }\r\n\r\n    function complete(\r\n        bytes32 transferId,\r\n        bytes[] calldata signatures,\r\n        address[] calldata signers\r\n    ) external nonReentrant whenNotPaused {\r\n        Transfer storage t = transfers[transferId];\r\n        if (t.status != Status.Pending) revert AlreadyFinalized();\r\n        if (t.user == address(0)) revert InvalidTransferId();\r\n        if (signatures.length != signers.length) revert InvalidSigner();\r\n        if (signatures.length < MIN_SIGNATURES) revert NotEnoughSignatures();\r\n\r\n        bytes32 rawHash = keccak256(abi.encodePacked(\r\n            transferId, \r\n            t.user, \r\n            t.bridgedAmount,\r\n            address(this)\r\n        ));\r\n        bytes32 messageHash = MessageHashUtils.toEthSignedMessageHash(rawHash);\r\n\r\n        address[] memory seen = new address[](signers.length);\r\n        \r\n        for (uint256 i = 0; i < signatures.length; i++) {\r\n            address recovered = ECDSA.recover(messageHash, signatures[i]);\r\n            if (recovered != signers[i]) revert InvalidSigner();\r\n            if (!isValidSigner[recovered]) revert NotAuthorizedSigner();\r\n            \r\n            for (uint256 j = 0; j < i; j++) {\r\n                if (seen[j] == recovered) revert DuplicateSigner();\r\n            }\r\n            seen[i] = recovered;\r\n        }\r\n        \r\n        t.status = Status.Completed;\r\n        \r\n        (bool sent, ) = feeRecipient.call{value: t.originalAmount}(\"\");\r\n        if (!sent) revert ForwardFailed();\r\n        \r\n        emit BridgeCompleted(transferId, t.user, t.bridgedAmount);\r\n    }\r\n\r\n    function refund(bytes32 transferId) external nonReentrant {\r\n        Transfer storage t = transfers[transferId];\r\n        if (t.status != Status.Pending) revert NotRefundable();\r\n        if (t.user != msg.sender) revert NotYourTransfer();\r\n        if (block.timestamp <= t.timestamp + REFUND_TIMEOUT) revert RefundNotAvailable();\r\n        \r\n        t.status = Status.Refunded;\r\n        uint256 amount = t.originalAmount;\r\n        \r\n        (bool sent, ) = msg.sender.call{value: amount}(\"\");\r\n        if (!sent) revert RefundFailed();\r\n        \r\n        emit Refunded(transferId, msg.sender, amount);\r\n    }\r\n\r\n    // ========== VIEW FUNCTIONS ==========\r\n\r\n    function getTransfer(bytes32 transferId) external view returns (Transfer memory) {\r\n        return transfers[transferId];\r\n    }\r\n\r\n    function canRefund(bytes32 transferId) external view returns (bool) {\r\n        Transfer memory t = transfers[transferId];\r\n        return t.status == Status.Pending && \r\n               block.timestamp > t.timestamp + REFUND_TIMEOUT;\r\n    }\r\n\r\n    function getRefundTime(bytes32 transferId) external view returns (uint256) {\r\n        Transfer memory t = transfers[transferId];\r\n        return t.timestamp + REFUND_TIMEOUT;\r\n    }\r\n\r\n    function calculateFee(uint256 amount, address user) external view returns (uint256 fee, uint256 bridged) {\r\n        if (isFeeExempt[user]) {\r\n            return (0, amount);\r\n        }\r\n        fee = (amount * FEE_BPS) / BPS_DENOMINATOR;\r\n        bridged = amount - fee;\r\n    }\r\n\r\n    function isUpgradeReady(address implementation, uint256 scheduleTime) external view returns (bool) {\r\n        bytes32 upgradeHash = keccak256(abi.encodePacked(implementation, scheduleTime));\r\n        uint256 executeTime = pendingUpgrades[upgradeHash];\r\n        return executeTime != 0 && block.timestamp >= executeTime;\r\n    }\r\n\r\n    function getVersion() external view returns (string memory) {\r\n        return version;\r\n    }\r\n\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[690],"Initializable":[462],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":691,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":463,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":690,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,690,462],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[462]},"id":463,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":462,"linearizedBaseContracts":[462],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":462,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":462,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1079:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4724:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4744:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4773:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4768:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:1","memberName":"code","nodeType":"MemberAccess","src":"4808:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:1","memberName":"length","nodeType":"MemberAccess","src":"4808:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4854:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4871:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4849:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4885:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4906:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4899:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4949:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4949:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4949:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4981:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4977:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4997:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5011:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5011:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5011:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5053:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5068:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5064:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5084:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5098:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5098:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5098:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5140:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5135:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1102:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6289:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6384:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6355:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6355:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6355:20:1"},"referencedDeclaration":205,"src":"6355:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6388:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6429:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6429:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6448:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6448:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6466:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6425:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6475:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6489:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6539:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6539:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6556:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6539:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6573:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6573:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6573:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6605:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6616:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6616:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6616:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6654:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6649:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5177:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6259:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6280:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6273:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:1"},"src":"6250:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6919:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6929:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6929:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6959:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6687:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6900:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6916:2:1"},"src":"6891:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7134:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7149:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7144:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7168:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7182:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6973:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7109:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7134:0:1"},"scope":462,"src":"7082:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7758:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7853:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7824:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7824:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7824:20:1"},"referencedDeclaration":205,"src":"7824:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7857:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7898:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7894:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7915:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7936:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7929:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7983:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:1","memberName":"max","nodeType":"MemberAccess","src":"8001:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7979:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8019:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8033:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8033:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:1","memberName":"max","nodeType":"MemberAccess","src":"8050:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8033:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:1","memberName":"max","nodeType":"MemberAccess","src":"8097:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8085:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8080:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7229:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7738:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7758:0:1"},"scope":462,"src":"7709:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8306:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8323:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8323:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8316:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8137:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8272:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8298:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:1"},"scope":462,"src":"8241:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8541:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8558:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8558:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8551:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8375:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8509:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:1"},"scope":462,"src":"8485:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8896:45:1","statements":[{"expression":{"id":444,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"8913:21:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":443,"id":445,"nodeType":"Return","src":"8906:28:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8611:203:1","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8853:2:1"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"8887:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:1"},"scope":462,"src":"8819:122:1","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":460,"nodeType":"Block","src":"9161:115:1","statements":[{"assignments":[455],"declarations":[{"constant":false,"id":455,"mutability":"mutable","name":"slot","nameLocation":"9179:4:1","nodeType":"VariableDeclaration","scope":460,"src":"9171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":458,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"9186:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:1"},{"AST":{"nativeSrc":"9232:38:1","nodeType":"YulBlock","src":"9232:38:1","statements":[{"nativeSrc":"9246:14:1","nodeType":"YulAssignment","src":"9246:14:1","value":{"name":"slot","nativeSrc":"9256:4:1","nodeType":"YulIdentifier","src":"9256:4:1"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:1","nodeType":"YulIdentifier","src":"9246:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":452,"isOffset":false,"isSlot":true,"src":"9246:6:1","suffix":"slot","valueSize":1},{"declaration":455,"isOffset":false,"isSlot":false,"src":"9256:4:1","valueSize":1}],"id":459,"nodeType":"InlineAssembly","src":"9223:47:1"}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"8947:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":461,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:1","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"9104:2:1"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"$","nameLocation":"9158:1:1","nodeType":"VariableDeclaration","scope":461,"src":"9129:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"InitializableStorage","nameLocations":["9129:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"9129:20:1"},"referencedDeclaration":205,"src":"9129:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:1"},"scope":462,"src":"9071:205:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":463,"src":"2349:6929:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:9166:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1304],"IERC1822Proxiable":[1010],"Initializable":[462],"UUPSUpgradeable":[644]},"id":645,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":464,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":1011,"src":"141:88:2","symbolAliases":[{"foreign":{"id":465,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":1305,"src":"230:84:2","symbolAliases":[{"foreign":{"id":467,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":645,"sourceUnit":463,"src":"315:50:2","symbolAliases":[{"foreign":{"id":469,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":472,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1023:13:2"},"id":473,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":474,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":1010,"src":"1038:17:2"},"id":475,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":644,"linearizedBaseContracts":[644,1010,462],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":482,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":644,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":480,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}],"id":479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":486,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":644,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":484,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":489,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":488,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":494,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":494,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":501,"nodeType":"Block","src":"2645:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":497,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"2655:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":499,"nodeType":"ExpressionStatement","src":"2655:13:2"},{"id":500,"nodeType":"PlaceholderStatement","src":"2678:1:2"}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"2124:495:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":502,"name":"onlyProxy","nameLocation":"2633:9:2","nodeType":"ModifierDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"2642:2:2"},"src":"2624:62:2","virtual":false,"visibility":"internal"},{"body":{"id":509,"nodeType":"Block","src":"2916:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":505,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"2926:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":507,"nodeType":"ExpressionStatement","src":"2926:20:2"},{"id":508,"nodeType":"PlaceholderStatement","src":"2956:1:2"}]},"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"2692:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":510,"name":"notDelegated","nameLocation":"2901:12:2","nodeType":"ModifierDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"2913:2:2"},"src":"2892:72:2","virtual":false,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"3030:7:2","statements":[]},"id":516,"implemented":true,"kind":"function","modifiers":[{"id":513,"kind":"modifierInvocation","modifierName":{"id":512,"name":"onlyInitializing","nameLocations":["3013:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3013:16:2"},"nodeType":"ModifierInvocation","src":"3013:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:2","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"3001:2:2"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"3030:0:2"},"scope":644,"src":"2970:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":521,"nodeType":"Block","src":"3113:7:2","statements":[]},"id":522,"implemented":true,"kind":"function","modifiers":[{"id":519,"kind":"modifierInvocation","modifierName":{"id":518,"name":"onlyInitializing","nameLocations":["3096:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3096:16:2"},"nodeType":"ModifierInvocation","src":"3096:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:2","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"3084:2:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"3113:0:2"},"scope":644,"src":"3043:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1009],"body":{"id":533,"nodeType":"Block","src":"3786:56:2","statements":[{"expression":{"expression":{"id":530,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"3803:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1304_$","typeString":"type(library ERC1967Utils)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1025,"src":"3803:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":529,"id":532,"nodeType":"Return","src":"3796:39:2"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3125:578:2","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":534,"implemented":true,"kind":"function","modifiers":[{"id":526,"kind":"modifierInvocation","modifierName":{"id":525,"name":"notDelegated","nameLocations":["3755:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":510,"src":"3755:12:2"},"nodeType":"ModifierInvocation","src":"3755:12:2"}],"name":"proxiableUUID","nameLocation":"3717:13:2","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"3730:2:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":534,"src":"3777:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:2"},"scope":644,"src":"3708:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":553,"nodeType":"Block","src":"4266:109:2","statements":[{"expression":{"arguments":[{"id":545,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"4294:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":544,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4276:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":547,"nodeType":"ExpressionStatement","src":"4276:36:2"},{"expression":{"arguments":[{"id":549,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"4344:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4363:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":548,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"4322:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"4322:46:2"}]},"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"3848:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":554,"implemented":true,"kind":"function","modifiers":[{"id":542,"kind":"modifierInvocation","modifierName":{"id":541,"name":"onlyProxy","nameLocations":["4256:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":502,"src":"4256:9:2"},"nodeType":"ModifierInvocation","src":"4256:9:2"}],"name":"upgradeToAndCall","nameLocation":"4170:16:2","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:2","nodeType":"VariableDeclaration","scope":554,"src":"4187:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"data","nameLocation":"4227:4:2","nodeType":"VariableDeclaration","scope":554,"src":"4214:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":538,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4266:0:2"},"scope":644,"src":"4161:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":575,"nodeType":"Block","src":"4623:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":560,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4658:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}],"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4650:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:2","typeDescriptions":{}}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4650:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":562,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4667:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4650:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":564,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"4728:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1304_$","typeString":"type(library ERC1967Utils)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4741:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":1056,"src":"4728:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4728:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":567,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"4764:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4728:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4650:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":574,"nodeType":"IfStatement","src":"4633:251:2","trueBody":{"id":573,"nodeType":"Block","src":"4823:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":570,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"4844:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":572,"nodeType":"RevertStatement","src":"4837:36:2"}]}}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"4381:192:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."},"id":576,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4587:11:2","nodeType":"FunctionDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[],"src":"4598:2:2"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"4623:0:2"},"scope":644,"src":"4578:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":591,"nodeType":"Block","src":"5059:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":582,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5081:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$644","typeString":"contract UUPSUpgradeable"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5073:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:2","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":584,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5090:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5073:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":590,"nodeType":"IfStatement","src":"5069:145:2","trueBody":{"id":589,"nodeType":"Block","src":"5098:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":586,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5174:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5174:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"RevertStatement","src":"5167:36:2"}]}}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"4896:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":592,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5016:18:2","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"5034:2:2"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[],"src":"5059:0:2"},"scope":644,"src":"5007:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"5226:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":598,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5612:17:2","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"newImplementation","nameLocation":"5638:17:2","nodeType":"VariableDeclaration","scope":598,"src":"5630:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"5630:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5629:27:2"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"5673:0:2"},"scope":644,"src":"5603:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":642,"nodeType":"Block","src":"6117:453:2","statements":[{"clauses":[{"block":{"id":631,"nodeType":"Block","src":"6207:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6225:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":615,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"6233:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1304_$","typeString":"type(library ERC1967Utils)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6246:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1025,"src":"6233:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6225:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":623,"nodeType":"IfStatement","src":"6221:120:2","trueBody":{"id":622,"nodeType":"Block","src":"6267:74:2","statements":[{"errorCall":{"arguments":[{"id":619,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6321:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":618,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"6292:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"RevertStatement","src":"6285:41:2"}]}},{"expression":{"arguments":[{"id":627,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"6384:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":628,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"6403:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":624,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"6354:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1304_$","typeString":"type(library ERC1967Utils)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6367:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1119,"src":"6354:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6354:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":630,"nodeType":"ExpressionStatement","src":"6354:54:2"}]},"errorName":"","id":632,"nodeType":"TryCatchClause","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"slot","nameLocation":"6201:4:2","nodeType":"VariableDeclaration","scope":632,"src":"6193:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6193:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6192:14:2"},"src":"6184:235:2"},{"block":{"id":639,"nodeType":"Block","src":"6426:138:2","statements":[{"errorCall":{"arguments":[{"id":636,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"6535:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":633,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"6493:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1304_$","typeString":"type(library ERC1967Utils)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6506:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":1030,"src":"6493:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6493:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":638,"nodeType":"RevertStatement","src":"6486:67:2"}]},"errorName":"","id":640,"nodeType":"TryCatchClause","src":"6420:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":607,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"6149:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":606,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"6131:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$1010_$","typeString":"type(contract IERC1822Proxiable)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$1010","typeString":"contract IERC1822Proxiable"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6168:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1009,"src":"6131:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":641,"nodeType":"TryStatement","src":"6127:437:2"}]},"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"5680:347:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":643,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6041:21:2","nodeType":"FunctionDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"newImplementation","nameLocation":"6071:17:2","nodeType":"VariableDeclaration","scope":643,"src":"6063:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"6063:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"data","nameLocation":"6103:4:2","nodeType":"VariableDeclaration","scope":643,"src":"6090:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":602,"name":"bytes","nodeType":"ElementaryTypeName","src":"6090:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6062:46:2"},"returnParameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"6117:0:2"},"scope":644,"src":"6032:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":645,"src":"986:5586:2","usedErrors":[211,214,489,494,1030,1043,1324,1587],"usedEvents":[219,987]}],"src":"115:6458:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[690],"Initializable":[462]},"id":691,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":646,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":648,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":691,"sourceUnit":463,"src":"126:63:3","symbolAliases":[{"foreign":{"id":647,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":650,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"728:13:3"},"id":651,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":690,"linearizedBaseContracts":[690,462],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":656,"nodeType":"Block","src":"800:7:3","statements":[]},"id":657,"implemented":true,"kind":"function","modifiers":[{"id":654,"kind":"modifierInvocation","modifierName":{"id":653,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":690,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":662,"nodeType":"Block","src":"875:7:3","statements":[]},"id":663,"implemented":true,"kind":"function","modifiers":[{"id":660,"kind":"modifierInvocation","modifierName":{"id":659,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":690,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":668,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":667,"id":670,"nodeType":"Return","src":"959:17:3"}]},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":672,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":690,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":680,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":677,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":676,"id":679,"nodeType":"Return","src":"1066:15:3"}]},"id":681,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":681,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":674,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":690,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":688,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":685,"id":687,"nodeType":"Return","src":"1176:8:3"}]},"id":689,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":689,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":690,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":691,"src":"688:505:3","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[690],"Initializable":[462],"PausableUpgradeable":[850]},"id":851,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":692,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":694,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":851,"sourceUnit":691,"src":"128:67:4","symbolAliases":[{"foreign":{"id":693,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"136:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":696,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":851,"sourceUnit":463,"src":"196:63:4","symbolAliases":[{"foreign":{"id":695,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"204:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":698,"name":"Initializable","nameLocations":["742:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"742:13:4"},"id":699,"nodeType":"InheritanceSpecifier","src":"742:13:4"},{"baseName":{"id":700,"name":"ContextUpgradeable","nameLocations":["757:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":690,"src":"757:18:4"},"id":701,"nodeType":"InheritanceSpecifier","src":"757:18:4"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"261:439:4","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":850,"linearizedBaseContracts":[850,690,462],"name":"PausableUpgradeable","nameLocation":"719:19:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"782:66:4","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":705,"members":[{"constant":false,"id":704,"mutability":"mutable","name":"_paused","nameLocation":"891:7:4","nodeType":"VariableDeclaration","scope":705,"src":"886:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":703,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:4","nodeType":"StructDefinition","scope":850,"src":"853:52:4","visibility":"public"},{"constant":true,"id":708,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:4","nodeType":"VariableDeclaration","scope":850,"src":"1023:117:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:4","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":715,"nodeType":"Block","src":"1227:82:4","statements":[{"AST":{"nativeSrc":"1246:57:4","nodeType":"YulBlock","src":"1246:57:4","statements":[{"nativeSrc":"1260:33:4","nodeType":"YulAssignment","src":"1260:33:4","value":{"name":"PausableStorageLocation","nativeSrc":"1270:23:4","nodeType":"YulIdentifier","src":"1270:23:4"},"variableNames":[{"name":"$.slot","nativeSrc":"1260:6:4","nodeType":"YulIdentifier","src":"1260:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":712,"isOffset":false,"isSlot":true,"src":"1260:6:4","suffix":"slot","valueSize":1},{"declaration":708,"isOffset":false,"isSlot":false,"src":"1270:23:4","valueSize":1}],"id":714,"nodeType":"InlineAssembly","src":"1237:66:4"}]},"id":716,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:4","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[],"src":"1175:2:4"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"$","nameLocation":"1224:1:4","nodeType":"VariableDeclaration","scope":716,"src":"1200:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":711,"nodeType":"UserDefinedTypeName","pathNode":{"id":710,"name":"PausableStorage","nameLocations":["1200:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":705,"src":"1200:15:4"},"referencedDeclaration":705,"src":"1200:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:4"},"scope":850,"src":"1147:162:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"1315:73:4","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":721,"name":"Paused","nameLocation":"1399:6:4","nodeType":"EventDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:4","nodeType":"VariableDeclaration","scope":721,"src":"1406:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:4"},"src":"1393:30:4"},{"anonymous":false,"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"1429:70:4","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":726,"name":"Unpaused","nameLocation":"1510:8:4","nodeType":"EventDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:4","nodeType":"VariableDeclaration","scope":726,"src":"1519:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:4"},"src":"1504:32:4"},{"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"1542:76:4","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":729,"name":"EnforcedPause","nameLocation":"1629:13:4","nodeType":"ErrorDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"1642:2:4"},"src":"1623:22:4"},{"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"1651:80:4","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":732,"name":"ExpectedPause","nameLocation":"1742:13:4","nodeType":"ErrorDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"1755:2:4"},"src":"1736:22:4"},{"body":{"id":739,"nodeType":"Block","src":"1969:47:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":735,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"1979:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1979:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"ExpressionStatement","src":"1979:19:4"},{"id":738,"nodeType":"PlaceholderStatement","src":"2008:1:4"}]},"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"1764:175:4","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":740,"name":"whenNotPaused","nameLocation":"1953:13:4","nodeType":"ModifierDefinition","parameters":{"id":734,"nodeType":"ParameterList","parameters":[],"src":"1966:2:4"},"src":"1944:72:4","virtual":false,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"2216:44:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":743,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"2226:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":745,"nodeType":"ExpressionStatement","src":"2226:16:4"},{"id":746,"nodeType":"PlaceholderStatement","src":"2252:1:4"}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"2022:167:4","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":748,"name":"whenPaused","nameLocation":"2203:10:4","nodeType":"ModifierDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"2213:2:4"},"src":"2194:66:4","virtual":false,"visibility":"internal"},{"body":{"id":753,"nodeType":"Block","src":"2319:7:4","statements":[]},"id":754,"implemented":true,"kind":"function","modifiers":[{"id":751,"kind":"modifierInvocation","modifierName":{"id":750,"name":"onlyInitializing","nameLocations":["2302:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2302:16:4"},"nodeType":"ModifierInvocation","src":"2302:16:4"}],"name":"__Pausable_init","nameLocation":"2275:15:4","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"2290:2:4"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"2319:0:4"},"scope":850,"src":"2266:60:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":759,"nodeType":"Block","src":"2395:7:4","statements":[]},"id":760,"implemented":true,"kind":"function","modifiers":[{"id":757,"kind":"modifierInvocation","modifierName":{"id":756,"name":"onlyInitializing","nameLocations":["2378:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2378:16:4"},"nodeType":"ModifierInvocation","src":"2378:16:4"}],"name":"__Pausable_init_unchained","nameLocation":"2341:25:4","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"2366:2:4"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"2395:0:4"},"scope":850,"src":"2332:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"2549:92:4","statements":[{"assignments":[768],"declarations":[{"constant":false,"id":768,"mutability":"mutable","name":"$","nameLocation":"2583:1:4","nodeType":"VariableDeclaration","scope":775,"src":"2559:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":767,"nodeType":"UserDefinedTypeName","pathNode":{"id":766,"name":"PausableStorage","nameLocations":["2559:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":705,"src":"2559:15:4"},"referencedDeclaration":705,"src":"2559:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":771,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":769,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"2587:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$705_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2559:49:4"},{"expression":{"expression":{"id":772,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"2625:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2627:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":704,"src":"2625:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":765,"id":774,"nodeType":"Return","src":"2618:16:4"}]},"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"2407:84:4","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":776,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2505:6:4","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[],"src":"2511:2:4"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"2543:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":763,"name":"bool","nodeType":"ElementaryTypeName","src":"2543:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2542:6:4"},"scope":850,"src":"2496:145:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":787,"nodeType":"Block","src":"2760:77:4","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":780,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"2774:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2774:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":786,"nodeType":"IfStatement","src":"2770:61:4","trueBody":{"id":785,"nodeType":"Block","src":"2784:47:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":782,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"2805:13:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2805:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":784,"nodeType":"RevertStatement","src":"2798:22:4"}]}}]},"documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"2647:57:4","text":" @dev Throws if the contract is paused."},"id":788,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2718:17:4","nodeType":"FunctionDefinition","parameters":{"id":778,"nodeType":"ParameterList","parameters":[],"src":"2735:2:4"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[],"src":"2760:0:4"},"scope":850,"src":"2709:128:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":800,"nodeType":"Block","src":"2957:78:4","statements":[{"condition":{"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2971:9:4","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":792,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"2972:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":799,"nodeType":"IfStatement","src":"2967:62:4","trueBody":{"id":798,"nodeType":"Block","src":"2982:47:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":795,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"3003:13:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3003:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"RevertStatement","src":"2996:22:4"}]}}]},"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"2843:61:4","text":" @dev Throws if the contract is not paused."},"id":801,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2918:14:4","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[],"src":"2932:2:4"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"2957:0:4"},"scope":850,"src":"2909:126:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":824,"nodeType":"Block","src":"3219:127:4","statements":[{"assignments":[809],"declarations":[{"constant":false,"id":809,"mutability":"mutable","name":"$","nameLocation":"3253:1:4","nodeType":"VariableDeclaration","scope":824,"src":"3229:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":808,"nodeType":"UserDefinedTypeName","pathNode":{"id":807,"name":"PausableStorage","nameLocations":["3229:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":705,"src":"3229:15:4"},"referencedDeclaration":705,"src":"3229:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":812,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":810,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"3257:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$705_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3257:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3229:49:4"},{"expression":{"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":813,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"3288:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3290:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":704,"src":"3288:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3300:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3288:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":818,"nodeType":"ExpressionStatement","src":"3288:16:4"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":820,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"3326:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":819,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"3319:6:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"EmitStatement","src":"3314:25:4"}]},"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"3041:124:4","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":825,"implemented":true,"kind":"function","modifiers":[{"id":805,"kind":"modifierInvocation","modifierName":{"id":804,"name":"whenNotPaused","nameLocations":["3205:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":740,"src":"3205:13:4"},"nodeType":"ModifierInvocation","src":"3205:13:4"}],"name":"_pause","nameLocation":"3179:6:4","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[],"src":"3185:2:4"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[],"src":"3219:0:4"},"scope":850,"src":"3170:176:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":848,"nodeType":"Block","src":"3526:130:4","statements":[{"assignments":[833],"declarations":[{"constant":false,"id":833,"mutability":"mutable","name":"$","nameLocation":"3560:1:4","nodeType":"VariableDeclaration","scope":848,"src":"3536:25:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":832,"nodeType":"UserDefinedTypeName","pathNode":{"id":831,"name":"PausableStorage","nameLocations":["3536:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":705,"src":"3536:15:4"},"referencedDeclaration":705,"src":"3536:15:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":836,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":834,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"3564:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$705_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3536:49:4"},{"expression":{"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":837,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"3595:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$705_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3597:7:4","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":704,"src":"3595:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3607:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3595:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":842,"nodeType":"ExpressionStatement","src":"3595:17:4"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":844,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"3636:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":843,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3627:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3627:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":847,"nodeType":"EmitStatement","src":"3622:27:4"}]},"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"3352:121:4","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":849,"implemented":true,"kind":"function","modifiers":[{"id":829,"kind":"modifierInvocation","modifierName":{"id":828,"name":"whenPaused","nameLocations":["3515:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":748,"src":"3515:10:4"},"nodeType":"ModifierInvocation","src":"3515:10:4"}],"name":"_unpause","nameLocation":"3487:8:4","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[],"src":"3495:2:4"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[],"src":"3526:0:4"},"scope":850,"src":"3478:178:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":851,"src":"701:2957:4","usedErrors":[211,214,729,732],"usedEvents":[219,721,726]}],"src":"102:3557:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[462],"ReentrancyGuardUpgradeable":[979]},"id":980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":852,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":854,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":980,"sourceUnit":463,"src":"134:63:5","symbolAliases":[{"foreign":{"id":853,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"142:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":856,"name":"Initializable","nameLocations":["1142:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1142:13:5"},"id":857,"nodeType":"InheritanceSpecifier","src":"1142:13:5"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"199:894:5","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":979,"linearizedBaseContracts":[979,462],"name":"ReentrancyGuardUpgradeable","nameLocation":"1112:26:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":860,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1935:11:5","nodeType":"VariableDeclaration","scope":979,"src":"1910:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1910:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1949:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":863,"mutability":"constant","name":"ENTERED","nameLocation":"1981:7:5","nodeType":"VariableDeclaration","scope":979,"src":"1956:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1991:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"1999:73:5","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":867,"members":[{"constant":false,"id":866,"mutability":"mutable","name":"_status","nameLocation":"2125:7:5","nodeType":"VariableDeclaration","scope":867,"src":"2117:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"2084:22:5","nodeType":"StructDefinition","scope":979,"src":"2077:62:5","visibility":"public"},{"constant":true,"id":870,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2289:30:5","nodeType":"VariableDeclaration","scope":979,"src":"2264:124:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2264:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2322:66:5","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":877,"nodeType":"Block","src":"2489:89:5","statements":[{"AST":{"nativeSrc":"2508:64:5","nodeType":"YulBlock","src":"2508:64:5","statements":[{"nativeSrc":"2522:40:5","nodeType":"YulAssignment","src":"2522:40:5","value":{"name":"ReentrancyGuardStorageLocation","nativeSrc":"2532:30:5","nodeType":"YulIdentifier","src":"2532:30:5"},"variableNames":[{"name":"$.slot","nativeSrc":"2522:6:5","nodeType":"YulIdentifier","src":"2522:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":874,"isOffset":false,"isSlot":true,"src":"2522:6:5","suffix":"slot","valueSize":1},{"declaration":870,"isOffset":false,"isSlot":false,"src":"2532:30:5","valueSize":1}],"id":876,"nodeType":"InlineAssembly","src":"2499:73:5"}]},"id":878,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2404:26:5","nodeType":"FunctionDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[],"src":"2430:2:5"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"$","nameLocation":"2486:1:5","nodeType":"VariableDeclaration","scope":878,"src":"2455:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":873,"nodeType":"UserDefinedTypeName","pathNode":{"id":872,"name":"ReentrancyGuardStorage","nameLocations":["2455:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":867,"src":"2455:22:5"},"referencedDeclaration":867,"src":"2455:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2454:34:5"},"scope":979,"src":"2395:183:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"2584:52:5","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":881,"name":"ReentrancyGuardReentrantCall","nameLocation":"2647:28:5","nodeType":"ErrorDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[],"src":"2675:2:5"},"src":"2641:37:5"},{"body":{"id":889,"nodeType":"Block","src":"2744:51:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":886,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"2754:32:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":888,"nodeType":"ExpressionStatement","src":"2754:34:5"}]},"id":890,"implemented":true,"kind":"function","modifiers":[{"id":884,"kind":"modifierInvocation","modifierName":{"id":883,"name":"onlyInitializing","nameLocations":["2727:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2727:16:5"},"nodeType":"ModifierInvocation","src":"2727:16:5"}],"name":"__ReentrancyGuard_init","nameLocation":"2693:22:5","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[],"src":"2715:2:5"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"2744:0:5"},"scope":979,"src":"2684:111:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":907,"nodeType":"Block","src":"2871:113:5","statements":[{"assignments":[897],"declarations":[{"constant":false,"id":897,"mutability":"mutable","name":"$","nameLocation":"2912:1:5","nodeType":"VariableDeclaration","scope":907,"src":"2881:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":896,"nodeType":"UserDefinedTypeName","pathNode":{"id":895,"name":"ReentrancyGuardStorage","nameLocations":["2881:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":867,"src":"2881:22:5"},"referencedDeclaration":867,"src":"2881:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":900,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":898,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"2916:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$867_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2916:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2881:63:5"},{"expression":{"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":901,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"2954:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2956:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":866,"src":"2954:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":904,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2966:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2954:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":906,"nodeType":"ExpressionStatement","src":"2954:23:5"}]},"id":908,"implemented":true,"kind":"function","modifiers":[{"id":893,"kind":"modifierInvocation","modifierName":{"id":892,"name":"onlyInitializing","nameLocations":["2854:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2854:16:5"},"nodeType":"ModifierInvocation","src":"2854:16:5"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2810:32:5","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[],"src":"2842:2:5"},"returnParameters":{"id":894,"nodeType":"ParameterList","parameters":[],"src":"2871:0:5"},"scope":979,"src":"2801:183:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":918,"nodeType":"Block","src":"3385:79:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":911,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"3395:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3395:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"ExpressionStatement","src":"3395:21:5"},{"id":914,"nodeType":"PlaceholderStatement","src":"3426:1:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":915,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"3437:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3437:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":917,"nodeType":"ExpressionStatement","src":"3437:20:5"}]},"documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"2990:366:5","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":919,"name":"nonReentrant","nameLocation":"3370:12:5","nodeType":"ModifierDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[],"src":"3382:2:5"},"src":"3361:103:5","virtual":false,"visibility":"internal"},{"body":{"id":943,"nodeType":"Block","src":"3509:345:5","statements":[{"assignments":[924],"declarations":[{"constant":false,"id":924,"mutability":"mutable","name":"$","nameLocation":"3550:1:5","nodeType":"VariableDeclaration","scope":943,"src":"3519:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":923,"nodeType":"UserDefinedTypeName","pathNode":{"id":922,"name":"ReentrancyGuardStorage","nameLocations":["3519:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":867,"src":"3519:22:5"},"referencedDeclaration":867,"src":"3519:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":927,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":925,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"3554:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$867_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3519:63:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":928,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3670:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3672:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":866,"src":"3670:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":930,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"3683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3670:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":936,"nodeType":"IfStatement","src":"3666:88:5","trueBody":{"id":935,"nodeType":"Block","src":"3692:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":932,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"3713:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":934,"nodeType":"RevertStatement","src":"3706:37:5"}]}},{"expression":{"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":937,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"3828:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3830:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":866,"src":"3828:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":940,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"3840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3828:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":942,"nodeType":"ExpressionStatement","src":"3828:19:5"}]},"id":944,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3479:19:5","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[],"src":"3498:2:5"},"returnParameters":{"id":921,"nodeType":"ParameterList","parameters":[],"src":"3509:0:5"},"scope":979,"src":"3470:384:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":959,"nodeType":"Block","src":"3898:245:5","statements":[{"assignments":[949],"declarations":[{"constant":false,"id":949,"mutability":"mutable","name":"$","nameLocation":"3939:1:5","nodeType":"VariableDeclaration","scope":959,"src":"3908:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":948,"nodeType":"UserDefinedTypeName","pathNode":{"id":947,"name":"ReentrancyGuardStorage","nameLocations":["3908:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":867,"src":"3908:22:5"},"referencedDeclaration":867,"src":"3908:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":952,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":950,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"3943:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$867_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3908:63:5"},{"expression":{"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":953,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4113:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4115:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":866,"src":"4113:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":956,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"4125:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4113:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":958,"nodeType":"ExpressionStatement","src":"4113:23:5"}]},"id":960,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3869:18:5","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[],"src":"3887:2:5"},"returnParameters":{"id":946,"nodeType":"ParameterList","parameters":[],"src":"3898:0:5"},"scope":979,"src":"3860:283:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":977,"nodeType":"Block","src":"4386:117:5","statements":[{"assignments":[968],"declarations":[{"constant":false,"id":968,"mutability":"mutable","name":"$","nameLocation":"4427:1:5","nodeType":"VariableDeclaration","scope":977,"src":"4396:32:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":967,"nodeType":"UserDefinedTypeName","pathNode":{"id":966,"name":"ReentrancyGuardStorage","nameLocations":["4396:22:5"],"nodeType":"IdentifierPath","referencedDeclaration":867,"src":"4396:22:5"},"referencedDeclaration":867,"src":"4396:22:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":971,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":969,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"4431:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$867_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4431:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4396:63:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":972,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"4476:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$867_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4478:7:5","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":866,"src":"4476:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":974,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"4489:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4476:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":965,"id":976,"nodeType":"Return","src":"4469:27:5"}]},"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"4149:168:5","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":978,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4331:23:5","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[],"src":"4354:2:5"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":978,"src":"4380:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":963,"name":"bool","nodeType":"ElementaryTypeName","src":"4380:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4379:6:5"},"scope":979,"src":"4322:181:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":980,"src":"1094:3411:5","usedErrors":[211,214,881],"usedEvents":[219]}],"src":"109:4397:5"},"id":5},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[1000]},"id":1001,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":981,"literals":["solidity",">=","0.4",".11"],"nodeType":"PragmaDirective","src":"107:25:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"134:101:6","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":1000,"linearizedBaseContracts":[1000],"name":"IERC1967","nameLocation":"246:8:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"261:68:6","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":987,"name":"Upgraded","nameLocation":"340:8:6","nodeType":"EventDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"365:14:6","nodeType":"VariableDeclaration","scope":987,"src":"349:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:32:6"},"src":"334:47:6"},{"anonymous":false,"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"387:67:6","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":994,"name":"AdminChanged","nameLocation":"465:12:6","nodeType":"EventDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"486:13:6","nodeType":"VariableDeclaration","scope":994,"src":"478:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"478:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"509:8:6","nodeType":"VariableDeclaration","scope":994,"src":"501:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"501:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"477:41:6"},"src":"459:60:6"},{"anonymous":false,"documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"525:59:6","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":999,"name":"BeaconUpgraded","nameLocation":"595:14:6","nodeType":"EventDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"626:6:6","nodeType":"VariableDeclaration","scope":999,"src":"610:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"609:24:6"},"src":"589:45:6"}],"scope":1001,"src":"236:400:6","usedErrors":[],"usedEvents":[987,994,999]}],"src":"107:530:6"},"id":6},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[1010]},"id":1011,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1002,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"113:25:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"140:204:7","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1010,"linearizedBaseContracts":[1010],"name":"IERC1822Proxiable","nameLocation":"355:17:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"379:438:7","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1009,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"831:13:7","nodeType":"FunctionDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[],"src":"844:2:7"},"returnParameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1009,"src":"870:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"870:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"869:9:7"},"scope":1010,"src":"822:57:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1011,"src":"345:536:7","usedErrors":[],"usedEvents":[]}],"src":"113:769:7"},"id":7},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[1574],"ERC1967Utils":[1304],"IBeacon":[1314],"IERC1967":[1000],"StorageSlot":[1772]},"id":1305,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1012,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"114:24:8"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":1014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1305,"sourceUnit":1315,"src":"140:46:8","symbolAliases":[{"foreign":{"id":1013,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"148:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":1016,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1305,"sourceUnit":1001,"src":"187:55:8","symbolAliases":[{"foreign":{"id":1015,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"195:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1018,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1305,"sourceUnit":1575,"src":"243:48:8","symbolAliases":[{"foreign":{"id":1017,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"251:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":1020,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1305,"sourceUnit":1773,"src":"292:56:8","symbolAliases":[{"foreign":{"id":1019,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"300:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"350:145:8","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":1304,"linearizedBaseContracts":[1304],"name":"ERC1967Utils","nameLocation":"504:12:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1022,"nodeType":"StructuredDocumentation","src":"523:170:8","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":1025,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:8","nodeType":"VariableDeclaration","scope":1304,"src":"763:114:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:8","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"884:69:8","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":1030,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:8","nodeType":"ErrorDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:8","nodeType":"VariableDeclaration","scope":1030,"src":"993:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:8"},"src":"958:59:8"},{"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"1023:60:8","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":1035,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:8","nodeType":"ErrorDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"admin","nameLocation":"1122:5:8","nodeType":"VariableDeclaration","scope":1035,"src":"1114:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:8"},"src":"1088:41:8"},{"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"1135:61:8","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":1040,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:8","nodeType":"ErrorDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:8","nodeType":"VariableDeclaration","scope":1040,"src":"1228:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:8"},"src":"1201:43:8"},{"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"1250:82:8","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":1043,"name":"ERC1967NonPayable","nameLocation":"1343:17:8","nodeType":"ErrorDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"1360:2:8"},"src":"1337:26:8"},{"body":{"id":1055,"nodeType":"Block","src":"1502:77:8","statements":[{"expression":{"expression":{"arguments":[{"id":1051,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"1546:19:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1049,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"1519:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1772_$","typeString":"type(library StorageSlot)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1683,"src":"1519:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1654_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1654_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1653,"src":"1519:53:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1048,"id":1054,"nodeType":"Return","src":"1512:60:8"}]},"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"1369:67:8","text":" @dev Returns the current implementation address."},"id":1056,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:8","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[],"src":"1467:2:8"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1056,"src":"1493:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:8"},"scope":1304,"src":"1441:138:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1082,"nodeType":"Block","src":"1734:218:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1062,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"1748:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:8","memberName":"code","nodeType":"MemberAccess","src":"1748:22:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:8","memberName":"length","nodeType":"MemberAccess","src":"1748:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1072,"nodeType":"IfStatement","src":"1744:119:8","trueBody":{"id":1071,"nodeType":"Block","src":"1784:79:8","statements":[{"errorCall":{"arguments":[{"id":1068,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"1834:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1067,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"1805:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1070,"nodeType":"RevertStatement","src":"1798:54:8"}]}},{"expression":{"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1076,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"1899:19:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1073,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"1872:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1772_$","typeString":"type(library StorageSlot)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1683,"src":"1872:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1654_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1654_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1653,"src":"1872:53:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1079,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"1928:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1081,"nodeType":"ExpressionStatement","src":"1872:73:8"}]},"documentation":{"id":1057,"nodeType":"StructuredDocumentation","src":"1585:81:8","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":1083,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:8","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:8","nodeType":"VariableDeclaration","scope":1083,"src":"1699:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:8"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"1734:0:8"},"scope":1304,"src":"1671:281:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1118,"nodeType":"Block","src":"2345:263:8","statements":[{"expression":{"arguments":[{"id":1092,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2374:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1091,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2355:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1094,"nodeType":"ExpressionStatement","src":"2355:37:8"},{"eventCall":{"arguments":[{"id":1098,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2425:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1095,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2407:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1000_$","typeString":"type(contract IERC1967)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:8","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":987,"src":"2407:17:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1100,"nodeType":"EmitStatement","src":"2402:41:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1101,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"2458:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:8","memberName":"length","nodeType":"MemberAccess","src":"2458:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1116,"nodeType":"Block","src":"2559:43:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1113,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"2573:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1115,"nodeType":"ExpressionStatement","src":"2573:18:8"}]},"id":1117,"nodeType":"IfStatement","src":"2454:148:8","trueBody":{"id":1112,"nodeType":"Block","src":"2475:78:8","statements":[{"expression":{"arguments":[{"id":1108,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2518:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1109,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"2537:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1105,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2489:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1574_$","typeString":"type(library Address)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:8","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1491,"src":"2489:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1111,"nodeType":"ExpressionStatement","src":"2489:53:8"}]}}]},"documentation":{"id":1084,"nodeType":"StructuredDocumentation","src":"1958:301:8","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":1119,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:8","nodeType":"FunctionDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:8","nodeType":"VariableDeclaration","scope":1119,"src":"2290:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"data","nameLocation":"2330:4:8","nodeType":"VariableDeclaration","scope":1119,"src":"2317:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1087,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:8"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[],"src":"2345:0:8"},"scope":1304,"src":"2264:344:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"2614:145:8","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":1123,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:8","nodeType":"VariableDeclaration","scope":1304,"src":"2829:105:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:8","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1135,"nodeType":"Block","src":"3339:68:8","statements":[{"expression":{"expression":{"arguments":[{"id":1131,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"3383:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1129,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"3356:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1772_$","typeString":"type(library StorageSlot)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1683,"src":"3356:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1654_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1654_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1653,"src":"3356:44:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1128,"id":1134,"nodeType":"Return","src":"3349:51:8"}]},"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"2941:341:8","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":1136,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:8","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"3304:2:8"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1136,"src":"3330:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:8"},"scope":1304,"src":"3287:120:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1166,"nodeType":"Block","src":"3535:172:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1142,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3549:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:8","typeDescriptions":{}}},"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1156,"nodeType":"IfStatement","src":"3545:91:8","trueBody":{"id":1155,"nodeType":"Block","src":"3573:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:8","typeDescriptions":{}}},"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1148,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"3594:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"RevertStatement","src":"3587:38:8"}]}},{"expression":{"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1160,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"3672:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1157,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"3645:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1772_$","typeString":"type(library StorageSlot)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1683,"src":"3645:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1654_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1654_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1653,"src":"3645:44:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1163,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3692:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1165,"nodeType":"ExpressionStatement","src":"3645:55:8"}]},"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"3413:72:8","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":1167,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:8","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:8","nodeType":"VariableDeclaration","scope":1167,"src":"3509:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:8"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"3535:0:8"},"scope":1304,"src":"3490:217:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1185,"nodeType":"Block","src":"3875:94:8","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1176,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"3912:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1178,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"3924:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1173,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"3890:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1000_$","typeString":"type(contract IERC1967)"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:8","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":994,"src":"3890:21:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1180,"nodeType":"EmitStatement","src":"3885:48:8"},{"expression":{"arguments":[{"id":1182,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"3953:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1181,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3943:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1184,"nodeType":"ExpressionStatement","src":"3943:19:8"}]},"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"3713:109:8","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1186,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:8","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:8","nodeType":"VariableDeclaration","scope":1186,"src":"3848:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:8"},"returnParameters":{"id":1172,"nodeType":"ParameterList","parameters":[],"src":"3875:0:8"},"scope":1304,"src":"3827:142:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"3975:201:8","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1190,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:8","nodeType":"VariableDeclaration","scope":1304,"src":"4246:106:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:8","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1202,"nodeType":"Block","src":"4468:69:8","statements":[{"expression":{"expression":{"arguments":[{"id":1198,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"4512:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1196,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4485:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1772_$","typeString":"type(library StorageSlot)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1683,"src":"4485:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1654_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1654_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1653,"src":"4485:45:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1195,"id":1201,"nodeType":"Return","src":"4478:52:8"}]},"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"4359:51:8","text":" @dev Returns the current beacon."},"id":1203,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:8","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"4433:2:8"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1203,"src":"4459:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:8"},"scope":1304,"src":"4415:122:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1248,"nodeType":"Block","src":"4667:390:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1209,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4681:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:8","memberName":"code","nodeType":"MemberAccess","src":"4681:14:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:8","memberName":"length","nodeType":"MemberAccess","src":"4681:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1219,"nodeType":"IfStatement","src":"4677:95:8","trueBody":{"id":1218,"nodeType":"Block","src":"4709:63:8","statements":[{"errorCall":{"arguments":[{"id":1215,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4751:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1214,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"4730:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1217,"nodeType":"RevertStatement","src":"4723:38:8"}]}},{"expression":{"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1223,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"4809:11:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1220,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4782:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1772_$","typeString":"type(library StorageSlot)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1683,"src":"4782:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1654_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1654_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1653,"src":"4782:45:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1226,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4830:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1228,"nodeType":"ExpressionStatement","src":"4782:57:8"},{"assignments":[1230],"declarations":[{"constant":false,"id":1230,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:8","nodeType":"VariableDeclaration","scope":1248,"src":"4850:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1236,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1232,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4889:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1231,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"4881:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1314_$","typeString":"type(contract IBeacon)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1314","typeString":"contract IBeacon"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:8","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1313,"src":"4881:33:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1237,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"4930:20:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:8","memberName":"code","nodeType":"MemberAccess","src":"4930:25:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:8","memberName":"length","nodeType":"MemberAccess","src":"4930:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1247,"nodeType":"IfStatement","src":"4926:125:8","trueBody":{"id":1246,"nodeType":"Block","src":"4969:82:8","statements":[{"errorCall":{"arguments":[{"id":1243,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"5019:20:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1242,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"4990:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1245,"nodeType":"RevertStatement","src":"4983:57:8"}]}}]},"documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"4543:72:8","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":1249,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:8","nodeType":"FunctionDefinition","parameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:8","nodeType":"VariableDeclaration","scope":1249,"src":"4640:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:8"},"returnParameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"4667:0:8"},"scope":1304,"src":"4620:437:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1288,"nodeType":"Block","src":"5661:263:8","statements":[{"expression":{"arguments":[{"id":1258,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"5682:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1257,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"5671:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1260,"nodeType":"ExpressionStatement","src":"5671:21:8"},{"eventCall":{"arguments":[{"id":1264,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"5731:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1261,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"5707:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1000_$","typeString":"type(contract IERC1967)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:8","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":999,"src":"5707:23:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1266,"nodeType":"EmitStatement","src":"5702:39:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1267,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"5756:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:8","memberName":"length","nodeType":"MemberAccess","src":"5756:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1286,"nodeType":"Block","src":"5875:43:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1283,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"5889:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1285,"nodeType":"ExpressionStatement","src":"5889:18:8"}]},"id":1287,"nodeType":"IfStatement","src":"5752:166:8","trueBody":{"id":1282,"nodeType":"Block","src":"5773:96:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1275,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"5824:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1274,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"5816:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1314_$","typeString":"type(contract IBeacon)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1314","typeString":"contract IBeacon"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:8","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1313,"src":"5816:33:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1279,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"5853:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1271,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"5787:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1574_$","typeString":"type(library Address)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:8","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1491,"src":"5787:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1281,"nodeType":"ExpressionStatement","src":"5787:71:8"}]}}]},"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"5063:514:8","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:8","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:8","nodeType":"VariableDeclaration","scope":1289,"src":"5614:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"data","nameLocation":"5646:4:8","nodeType":"VariableDeclaration","scope":1289,"src":"5633:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1253,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:8"},"returnParameters":{"id":1256,"nodeType":"ParameterList","parameters":[],"src":"5661:0:8"},"scope":1304,"src":"5582:342:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1302,"nodeType":"Block","src":"6149:86:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1293,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:8","memberName":"value","nodeType":"MemberAccess","src":"6163:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1301,"nodeType":"IfStatement","src":"6159:70:8","trueBody":{"id":1300,"nodeType":"Block","src":"6178:51:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1297,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"6199:17:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1299,"nodeType":"RevertStatement","src":"6192:26:8"}]}}]},"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"5930:178:8","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1303,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:8","nodeType":"FunctionDefinition","parameters":{"id":1291,"nodeType":"ParameterList","parameters":[],"src":"6138:2:8"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[],"src":"6149:0:8"},"scope":1304,"src":"6113:122:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1305,"src":"496:5741:8","usedErrors":[1030,1035,1040,1043],"usedEvents":[]}],"src":"114:6124:8"},"id":8},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1314]},"id":1315,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1306,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"108:25:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"135:79:9","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1314,"linearizedBaseContracts":[1314],"name":"IBeacon","nameLocation":"225:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"239:168:9","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1313,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"421:14:9","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[],"src":"435:2:9"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1313,"src":"461:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"461:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"460:9:9"},"scope":1314,"src":"412:58:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1315,"src":"215:257:9","usedErrors":[],"usedEvents":[]}],"src":"108:365:9"},"id":9},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1574],"Errors":[1596]},"id":1575,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1316,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":1318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1575,"sourceUnit":1597,"src":"127:36:10","symbolAliases":[{"foreign":{"id":1317,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"135:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"165:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1574,"linearizedBaseContracts":[1574],"name":"Address","nameLocation":"241:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"255:75:10","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1324,"name":"AddressEmptyCode","nameLocation":"341:16:10","nodeType":"ErrorDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"target","nameLocation":"366:6:10","nodeType":"VariableDeclaration","scope":1324,"src":"358:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:10"},"src":"335:39:10"},{"body":{"id":1371,"nodeType":"Block","src":"1361:294:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1334,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1574","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1574","typeString":"library Address"}],"id":1333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1332,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:10","typeDescriptions":{}}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:10","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1337,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"1399:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1351,"nodeType":"IfStatement","src":"1371:125:10","trueBody":{"id":1350,"nodeType":"Block","src":"1407:89:10","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1344,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1574","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1574","typeString":"library Address"}],"id":1343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1342,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:10","typeDescriptions":{}}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:10","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1347,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"1478:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1339,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1428:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1596_$","typeString":"type(library Errors)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:10","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1584,"src":"1428:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1349,"nodeType":"RevertStatement","src":"1421:64:10"}]}},{"assignments":[1353,1355],"declarations":[{"constant":false,"id":1353,"mutability":"mutable","name":"success","nameLocation":"1512:7:10","nodeType":"VariableDeclaration","scope":1371,"src":"1507:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1352,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:10","nodeType":"VariableDeclaration","scope":1371,"src":"1521:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1354,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1362,"initialValue":{"arguments":[{"hexValue":"","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1356,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"1548:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:10","memberName":"call","nodeType":"MemberAccess","src":"1548:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1358,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"1570:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:10"},{"condition":{"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:10","subExpression":{"id":1363,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"1596:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1370,"nodeType":"IfStatement","src":"1591:58:10","trueBody":{"id":1369,"nodeType":"Block","src":"1605:44:10","statements":[{"expression":{"arguments":[{"id":1366,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"1627:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1365,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"1619:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1368,"nodeType":"ExpressionStatement","src":"1619:19:10"}]}}]},"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"380:905:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1372,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:10","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:10","nodeType":"VariableDeclaration","scope":1372,"src":"1309:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"amount","nameLocation":"1344:6:10","nodeType":"VariableDeclaration","scope":1372,"src":"1336:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:10"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"1361:0:10"},"scope":1574,"src":"1290:365:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1388,"nodeType":"Block","src":"2589:62:10","statements":[{"expression":{"arguments":[{"id":1383,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"2628:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1384,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"2636:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1382,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"2606:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1381,"id":1387,"nodeType":"Return","src":"2599:45:10"}]},"documentation":{"id":1373,"nodeType":"StructuredDocumentation","src":"1661:834:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1389,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:10","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"target","nameLocation":"2530:6:10","nodeType":"VariableDeclaration","scope":1389,"src":"2522:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"data","nameLocation":"2551:4:10","nodeType":"VariableDeclaration","scope":1389,"src":"2538:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1376,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:10"},"returnParameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"2575:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1379,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:10"},"scope":1574,"src":"2500:151:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1438,"nodeType":"Block","src":"3088:294:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1403,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1574","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1574","typeString":"library Address"}],"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:10","typeDescriptions":{}}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:10","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"3126:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1420,"nodeType":"IfStatement","src":"3098:123:10","trueBody":{"id":1419,"nodeType":"Block","src":"3133:88:10","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1413,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1574","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1574","typeString":"library Address"}],"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:10","typeDescriptions":{}}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:10","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"3204:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1408,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"3154:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1596_$","typeString":"type(library Errors)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:10","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1584,"src":"3154:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1418,"nodeType":"RevertStatement","src":"3147:63:10"}]}},{"assignments":[1422,1424],"declarations":[{"constant":false,"id":1422,"mutability":"mutable","name":"success","nameLocation":"3236:7:10","nodeType":"VariableDeclaration","scope":1438,"src":"3231:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1421,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:10","nodeType":"VariableDeclaration","scope":1438,"src":"3245:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1423,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1431,"initialValue":{"arguments":[{"id":1429,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"3298:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1425,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"3272:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:10","memberName":"call","nodeType":"MemberAccess","src":"3272:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"3291:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:10"},{"expression":{"arguments":[{"id":1433,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"3347:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1434,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"3355:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1435,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"3364:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1432,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"3320:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1400,"id":1437,"nodeType":"Return","src":"3313:62:10"}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"2657:313:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1439,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:10","nodeType":"FunctionDefinition","parameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"target","nameLocation":"3014:6:10","nodeType":"VariableDeclaration","scope":1439,"src":"3006:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"data","nameLocation":"3035:4:10","nodeType":"VariableDeclaration","scope":1439,"src":"3022:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1393,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"value","nameLocation":"3049:5:10","nodeType":"VariableDeclaration","scope":1439,"src":"3041:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:10"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1439,"src":"3074:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1398,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:10"},"scope":1574,"src":"2975:407:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1464,"nodeType":"Block","src":"3621:154:10","statements":[{"assignments":[1450,1452],"declarations":[{"constant":false,"id":1450,"mutability":"mutable","name":"success","nameLocation":"3637:7:10","nodeType":"VariableDeclaration","scope":1464,"src":"3632:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1449,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:10","nodeType":"VariableDeclaration","scope":1464,"src":"3646:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1451,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1457,"initialValue":{"arguments":[{"id":1455,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"3691:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1453,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"3673:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:10","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:10"},{"expression":{"arguments":[{"id":1459,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"3740:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1460,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3748:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1461,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"3757:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1458,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"3713:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1448,"id":1463,"nodeType":"Return","src":"3706:62:10"}]},"documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"3388:128:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:10","nodeType":"FunctionDefinition","parameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"target","nameLocation":"3557:6:10","nodeType":"VariableDeclaration","scope":1465,"src":"3549:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1441,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"data","nameLocation":"3578:4:10","nodeType":"VariableDeclaration","scope":1465,"src":"3565:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1443,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:10"},"returnParameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1465,"src":"3607:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1446,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:10"},"scope":1574,"src":"3521:254:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"4013:156:10","statements":[{"assignments":[1476,1478],"declarations":[{"constant":false,"id":1476,"mutability":"mutable","name":"success","nameLocation":"4029:7:10","nodeType":"VariableDeclaration","scope":1490,"src":"4024:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1475,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:10","nodeType":"VariableDeclaration","scope":1490,"src":"4038:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1477,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1483,"initialValue":{"arguments":[{"id":1481,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"4085:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1479,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"4065:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:10","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:10"},{"expression":{"arguments":[{"id":1485,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"4134:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"4142:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1487,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"4151:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1484,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"4107:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1474,"id":1489,"nodeType":"Return","src":"4100:62:10"}]},"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"3781:130:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:10","nodeType":"FunctionDefinition","parameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"target","nameLocation":"3954:6:10","nodeType":"VariableDeclaration","scope":1491,"src":"3946:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"data","nameLocation":"3975:4:10","nodeType":"VariableDeclaration","scope":1491,"src":"3962:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1469,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:10"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1491,"src":"3999:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1472,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:10"},"scope":1574,"src":"3916:253:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1530,"nodeType":"Block","src":"4595:424:10","statements":[{"condition":{"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:10","subExpression":{"id":1503,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"4610:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1528,"nodeType":"Block","src":"4669:344:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1510,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"4857:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:10","memberName":"length","nodeType":"MemberAccess","src":"4857:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1514,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4883:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:10","memberName":"code","nodeType":"MemberAccess","src":"4883:11:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:10","memberName":"length","nodeType":"MemberAccess","src":"4883:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1525,"nodeType":"IfStatement","src":"4853:119:10","trueBody":{"id":1524,"nodeType":"Block","src":"4908:64:10","statements":[{"errorCall":{"arguments":[{"id":1521,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4950:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1520,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"4933:16:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1523,"nodeType":"RevertStatement","src":"4926:31:10"}]}},{"expression":{"id":1526,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"4992:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1502,"id":1527,"nodeType":"Return","src":"4985:17:10"}]},"id":1529,"nodeType":"IfStatement","src":"4605:408:10","trueBody":{"id":1509,"nodeType":"Block","src":"4619:44:10","statements":[{"expression":{"arguments":[{"id":1506,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"4641:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1505,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"4633:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1508,"nodeType":"ExpressionStatement","src":"4633:19:10"}]}}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"4175:257:10","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:10","nodeType":"FunctionDefinition","parameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"target","nameLocation":"4490:6:10","nodeType":"VariableDeclaration","scope":1531,"src":"4482:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"success","nameLocation":"4511:7:10","nodeType":"VariableDeclaration","scope":1531,"src":"4506:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1495,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1498,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:10","nodeType":"VariableDeclaration","scope":1531,"src":"4528:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1497,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:10"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"4581:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1500,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:10"},"scope":1574,"src":"4437:582:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1552,"nodeType":"Block","src":"5323:122:10","statements":[{"condition":{"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:10","subExpression":{"id":1541,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"5338:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1550,"nodeType":"Block","src":"5397:42:10","statements":[{"expression":{"id":1548,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"5418:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1540,"id":1549,"nodeType":"Return","src":"5411:17:10"}]},"id":1551,"nodeType":"IfStatement","src":"5333:106:10","trueBody":{"id":1547,"nodeType":"Block","src":"5347:44:10","statements":[{"expression":{"arguments":[{"id":1544,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"5369:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1543,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"5361:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1546,"nodeType":"ExpressionStatement","src":"5361:19:10"}]}}]},"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"5025:191:10","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":1553,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:10","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"success","nameLocation":"5252:7:10","nodeType":"VariableDeclaration","scope":1553,"src":"5247:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1533,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1536,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:10","nodeType":"VariableDeclaration","scope":1553,"src":"5261:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1535,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:10"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1553,"src":"5309:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1538,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:10"},"scope":1574,"src":"5221:224:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1572,"nodeType":"Block","src":"5614:379:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1559,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"5690:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:10","memberName":"length","nodeType":"MemberAccess","src":"5690:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1570,"nodeType":"Block","src":"5936:51:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1565,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"5957:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1596_$","typeString":"type(library Errors)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5964:10:10","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1587,"src":"5957:17:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5957:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1569,"nodeType":"RevertStatement","src":"5950:26:10"}]},"id":1571,"nodeType":"IfStatement","src":"5686:301:10","trueBody":{"id":1564,"nodeType":"Block","src":"5713:217:10","statements":[{"AST":{"nativeSrc":"5840:80:10","nodeType":"YulBlock","src":"5840:80:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returndata","nativeSrc":"5869:10:10","nodeType":"YulIdentifier","src":"5869:10:10"},{"kind":"number","nativeSrc":"5881:4:10","nodeType":"YulLiteral","src":"5881:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5865:3:10","nodeType":"YulIdentifier","src":"5865:3:10"},"nativeSrc":"5865:21:10","nodeType":"YulFunctionCall","src":"5865:21:10"},{"arguments":[{"name":"returndata","nativeSrc":"5894:10:10","nodeType":"YulIdentifier","src":"5894:10:10"}],"functionName":{"name":"mload","nativeSrc":"5888:5:10","nodeType":"YulIdentifier","src":"5888:5:10"},"nativeSrc":"5888:17:10","nodeType":"YulFunctionCall","src":"5888:17:10"}],"functionName":{"name":"revert","nativeSrc":"5858:6:10","nodeType":"YulIdentifier","src":"5858:6:10"},"nativeSrc":"5858:48:10","nodeType":"YulFunctionCall","src":"5858:48:10"},"nativeSrc":"5858:48:10","nodeType":"YulExpressionStatement","src":"5858:48:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1556,"isOffset":false,"isSlot":false,"src":"5869:10:10","valueSize":1},{"declaration":1556,"isOffset":false,"isSlot":false,"src":"5894:10:10","valueSize":1}],"flags":["memory-safe"],"id":1563,"nodeType":"InlineAssembly","src":"5815:105:10"}]}}]},"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"5451:103:10","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":1573,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:10","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:10","nodeType":"VariableDeclaration","scope":1573,"src":"5576:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1555,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:10"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[],"src":"5614:0:10"},"scope":1574,"src":"5559:434:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1575,"src":"233:5762:10","usedErrors":[1324],"usedEvents":[]}],"src":"101:5895:10"},"id":10},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[1596]},"id":1597,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1576,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":1577,"nodeType":"StructuredDocumentation","src":"126:284:11","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":1596,"linearizedBaseContracts":[1596],"name":"Errors","nameLocation":"419:6:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"432:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":1584,"name":"InsufficientBalance","nameLocation":"537:19:11","nodeType":"ErrorDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"balance","nameLocation":"565:7:11","nodeType":"VariableDeclaration","scope":1584,"src":"557:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"needed","nameLocation":"582:6:11","nodeType":"VariableDeclaration","scope":1584,"src":"574:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:11"},"src":"531:59:11"},{"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"596:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":1587,"name":"FailedCall","nameLocation":"696:10:11","nodeType":"ErrorDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"706:2:11"},"src":"690:19:11"},{"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"715:46:11","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":1590,"name":"FailedDeployment","nameLocation":"772:16:11","nodeType":"ErrorDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[],"src":"788:2:11"},"src":"766:25:11"},{"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"797:58:11","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":1595,"name":"MissingPrecompile","nameLocation":"866:17:11","nodeType":"ErrorDefinition","parameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"884:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:11"},"src":"860:33:11"}],"scope":1597,"src":"411:484:11","usedErrors":[1584,1587,1590,1595],"usedEvents":[]}],"src":"100:796:11"},"id":11},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1648]},"id":1649,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1598,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1599,"nodeType":"StructuredDocumentation","src":"125:489:12","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1648,"linearizedBaseContracts":[1648],"name":"Panic","nameLocation":"665:5:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"677:36:12","text":"@dev generic / unspecified error"},"id":1603,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:12","nodeType":"VariableDeclaration","scope":1648,"src":"718:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1604,"nodeType":"StructuredDocumentation","src":"764:37:12","text":"@dev used by the assert() builtin"},"id":1607,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:12","nodeType":"VariableDeclaration","scope":1648,"src":"806:39:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1608,"nodeType":"StructuredDocumentation","src":"851:41:12","text":"@dev arithmetic underflow or overflow"},"id":1611,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:12","nodeType":"VariableDeclaration","scope":1648,"src":"897:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:12","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"950:35:12","text":"@dev division or modulo by zero"},"id":1615,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:12","nodeType":"VariableDeclaration","scope":1648,"src":"990:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"1045:30:12","text":"@dev enum conversion error"},"id":1619,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:12","nodeType":"VariableDeclaration","scope":1648,"src":"1080:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:12","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"1140:36:12","text":"@dev invalid encoding in storage"},"id":1623,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:12","nodeType":"VariableDeclaration","scope":1648,"src":"1181:55:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"1242:24:12","text":"@dev empty array pop"},"id":1627,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:12","nodeType":"VariableDeclaration","scope":1648,"src":"1271:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:12","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"1325:35:12","text":"@dev array out of bounds access"},"id":1631,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:12","nodeType":"VariableDeclaration","scope":1648,"src":"1365:52:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:12","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"1423:65:12","text":"@dev resource error (too large allocation or too large array)"},"id":1635,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:12","nodeType":"VariableDeclaration","scope":1648,"src":"1493:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1633,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1636,"nodeType":"StructuredDocumentation","src":"1546:42:12","text":"@dev calling invalid internal function"},"id":1639,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:12","nodeType":"VariableDeclaration","scope":1648,"src":"1593:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:12","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1646,"nodeType":"Block","src":"1819:151:12","statements":[{"AST":{"nativeSrc":"1854:110:12","nodeType":"YulBlock","src":"1854:110:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:12","nodeType":"YulLiteral","src":"1875:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:12","nodeType":"YulLiteral","src":"1881:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:12","nodeType":"YulIdentifier","src":"1868:6:12"},"nativeSrc":"1868:24:12","nodeType":"YulFunctionCall","src":"1868:24:12"},"nativeSrc":"1868:24:12","nodeType":"YulExpressionStatement","src":"1868:24:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:12","nodeType":"YulLiteral","src":"1912:4:12","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:12","nodeType":"YulIdentifier","src":"1918:4:12"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:12","nodeType":"YulIdentifier","src":"1905:6:12"},"nativeSrc":"1905:18:12","nodeType":"YulFunctionCall","src":"1905:18:12"},"nativeSrc":"1905:18:12","nodeType":"YulExpressionStatement","src":"1905:18:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:12","nodeType":"YulLiteral","src":"1943:4:12","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:12","nodeType":"YulLiteral","src":"1949:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:12","nodeType":"YulIdentifier","src":"1936:6:12"},"nativeSrc":"1936:18:12","nodeType":"YulFunctionCall","src":"1936:18:12"},"nativeSrc":"1936:18:12","nodeType":"YulExpressionStatement","src":"1936:18:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1642,"isOffset":false,"isSlot":false,"src":"1918:4:12","valueSize":1}],"flags":["memory-safe"],"id":1645,"nodeType":"InlineAssembly","src":"1829:135:12"}]},"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"1658:113:12","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1647,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:12","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"code","nameLocation":"1799:4:12","nodeType":"VariableDeclaration","scope":1647,"src":"1791:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:12"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[],"src":"1819:0:12"},"scope":1648,"src":"1776:194:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1649,"src":"657:1315:12","usedErrors":[],"usedEvents":[]}],"src":"99:1874:12"},"id":12},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1772]},"id":1773,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1650,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"219:1187:13","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1772,"linearizedBaseContracts":[1772],"name":"StorageSlot","nameLocation":"1415:11:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1654,"members":[{"constant":false,"id":1653,"mutability":"mutable","name":"value","nameLocation":"1470:5:13","nodeType":"VariableDeclaration","scope":1654,"src":"1462:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1652,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:13","nodeType":"StructDefinition","scope":1772,"src":"1433:49:13","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1657,"members":[{"constant":false,"id":1656,"mutability":"mutable","name":"value","nameLocation":"1522:5:13","nodeType":"VariableDeclaration","scope":1657,"src":"1517:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1655,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:13","nodeType":"StructDefinition","scope":1772,"src":"1488:46:13","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1660,"members":[{"constant":false,"id":1659,"mutability":"mutable","name":"value","nameLocation":"1577:5:13","nodeType":"VariableDeclaration","scope":1660,"src":"1569:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:13","nodeType":"StructDefinition","scope":1772,"src":"1540:49:13","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1663,"members":[{"constant":false,"id":1662,"mutability":"mutable","name":"value","nameLocation":"1632:5:13","nodeType":"VariableDeclaration","scope":1663,"src":"1624:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:13","nodeType":"StructDefinition","scope":1772,"src":"1595:49:13","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1666,"members":[{"constant":false,"id":1665,"mutability":"mutable","name":"value","nameLocation":"1685:5:13","nodeType":"VariableDeclaration","scope":1666,"src":"1678:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1664,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:13","nodeType":"StructDefinition","scope":1772,"src":"1650:47:13","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1669,"members":[{"constant":false,"id":1668,"mutability":"mutable","name":"value","nameLocation":"1738:5:13","nodeType":"VariableDeclaration","scope":1669,"src":"1731:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1667,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:13","nodeType":"StructDefinition","scope":1772,"src":"1703:47:13","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1672,"members":[{"constant":false,"id":1671,"mutability":"mutable","name":"value","nameLocation":"1789:5:13","nodeType":"VariableDeclaration","scope":1672,"src":"1783:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1670,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:13","nodeType":"StructDefinition","scope":1772,"src":"1756:45:13","visibility":"public"},{"body":{"id":1682,"nodeType":"Block","src":"1983:79:13","statements":[{"AST":{"nativeSrc":"2018:38:13","nodeType":"YulBlock","src":"2018:38:13","statements":[{"nativeSrc":"2032:14:13","nodeType":"YulAssignment","src":"2032:14:13","value":{"name":"slot","nativeSrc":"2042:4:13","nodeType":"YulIdentifier","src":"2042:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:13","nodeType":"YulIdentifier","src":"2032:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1679,"isOffset":false,"isSlot":true,"src":"2032:6:13","suffix":"slot","valueSize":1},{"declaration":1675,"isOffset":false,"isSlot":false,"src":"2042:4:13","valueSize":1}],"flags":["memory-safe"],"id":1681,"nodeType":"InlineAssembly","src":"1993:63:13"}]},"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"1807:87:13","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1683,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:13","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"slot","nameLocation":"1931:4:13","nodeType":"VariableDeclaration","scope":1683,"src":"1923:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:13"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"r","nameLocation":"1980:1:13","nodeType":"VariableDeclaration","scope":1683,"src":"1960:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1654_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1678,"nodeType":"UserDefinedTypeName","pathNode":{"id":1677,"name":"AddressSlot","nameLocations":["1960:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1654,"src":"1960:11:13"},"referencedDeclaration":1654,"src":"1960:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1654_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:13"},"scope":1772,"src":"1899:163:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1693,"nodeType":"Block","src":"2243:79:13","statements":[{"AST":{"nativeSrc":"2278:38:13","nodeType":"YulBlock","src":"2278:38:13","statements":[{"nativeSrc":"2292:14:13","nodeType":"YulAssignment","src":"2292:14:13","value":{"name":"slot","nativeSrc":"2302:4:13","nodeType":"YulIdentifier","src":"2302:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:13","nodeType":"YulIdentifier","src":"2292:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1690,"isOffset":false,"isSlot":true,"src":"2292:6:13","suffix":"slot","valueSize":1},{"declaration":1686,"isOffset":false,"isSlot":false,"src":"2302:4:13","valueSize":1}],"flags":["memory-safe"],"id":1692,"nodeType":"InlineAssembly","src":"2253:63:13"}]},"documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"2068:86:13","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1694,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:13","nodeType":"FunctionDefinition","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"slot","nameLocation":"2191:4:13","nodeType":"VariableDeclaration","scope":1694,"src":"2183:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:13"},"returnParameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"r","nameLocation":"2240:1:13","nodeType":"VariableDeclaration","scope":1694,"src":"2220:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1657_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1689,"nodeType":"UserDefinedTypeName","pathNode":{"id":1688,"name":"BooleanSlot","nameLocations":["2220:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1657,"src":"2220:11:13"},"referencedDeclaration":1657,"src":"2220:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1657_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:13"},"scope":1772,"src":"2159:163:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1704,"nodeType":"Block","src":"2503:79:13","statements":[{"AST":{"nativeSrc":"2538:38:13","nodeType":"YulBlock","src":"2538:38:13","statements":[{"nativeSrc":"2552:14:13","nodeType":"YulAssignment","src":"2552:14:13","value":{"name":"slot","nativeSrc":"2562:4:13","nodeType":"YulIdentifier","src":"2562:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:13","nodeType":"YulIdentifier","src":"2552:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1701,"isOffset":false,"isSlot":true,"src":"2552:6:13","suffix":"slot","valueSize":1},{"declaration":1697,"isOffset":false,"isSlot":false,"src":"2562:4:13","valueSize":1}],"flags":["memory-safe"],"id":1703,"nodeType":"InlineAssembly","src":"2513:63:13"}]},"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"2328:86:13","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1705,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:13","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"slot","nameLocation":"2451:4:13","nodeType":"VariableDeclaration","scope":1705,"src":"2443:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:13"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"r","nameLocation":"2500:1:13","nodeType":"VariableDeclaration","scope":1705,"src":"2480:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1660_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1700,"nodeType":"UserDefinedTypeName","pathNode":{"id":1699,"name":"Bytes32Slot","nameLocations":["2480:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1660,"src":"2480:11:13"},"referencedDeclaration":1660,"src":"2480:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1660_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:13"},"scope":1772,"src":"2419:163:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1715,"nodeType":"Block","src":"2763:79:13","statements":[{"AST":{"nativeSrc":"2798:38:13","nodeType":"YulBlock","src":"2798:38:13","statements":[{"nativeSrc":"2812:14:13","nodeType":"YulAssignment","src":"2812:14:13","value":{"name":"slot","nativeSrc":"2822:4:13","nodeType":"YulIdentifier","src":"2822:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:13","nodeType":"YulIdentifier","src":"2812:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1712,"isOffset":false,"isSlot":true,"src":"2812:6:13","suffix":"slot","valueSize":1},{"declaration":1708,"isOffset":false,"isSlot":false,"src":"2822:4:13","valueSize":1}],"flags":["memory-safe"],"id":1714,"nodeType":"InlineAssembly","src":"2773:63:13"}]},"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"2588:86:13","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1716,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:13","nodeType":"FunctionDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"slot","nameLocation":"2711:4:13","nodeType":"VariableDeclaration","scope":1716,"src":"2703:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:13"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"r","nameLocation":"2760:1:13","nodeType":"VariableDeclaration","scope":1716,"src":"2740:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1663_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1711,"nodeType":"UserDefinedTypeName","pathNode":{"id":1710,"name":"Uint256Slot","nameLocations":["2740:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1663,"src":"2740:11:13"},"referencedDeclaration":1663,"src":"2740:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1663_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:13"},"scope":1772,"src":"2679:163:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1726,"nodeType":"Block","src":"3020:79:13","statements":[{"AST":{"nativeSrc":"3055:38:13","nodeType":"YulBlock","src":"3055:38:13","statements":[{"nativeSrc":"3069:14:13","nodeType":"YulAssignment","src":"3069:14:13","value":{"name":"slot","nativeSrc":"3079:4:13","nodeType":"YulIdentifier","src":"3079:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:13","nodeType":"YulIdentifier","src":"3069:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1723,"isOffset":false,"isSlot":true,"src":"3069:6:13","suffix":"slot","valueSize":1},{"declaration":1719,"isOffset":false,"isSlot":false,"src":"3079:4:13","valueSize":1}],"flags":["memory-safe"],"id":1725,"nodeType":"InlineAssembly","src":"3030:63:13"}]},"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"2848:85:13","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:13","nodeType":"FunctionDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"slot","nameLocation":"2969:4:13","nodeType":"VariableDeclaration","scope":1727,"src":"2961:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:13"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"r","nameLocation":"3017:1:13","nodeType":"VariableDeclaration","scope":1727,"src":"2998:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1666_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1722,"nodeType":"UserDefinedTypeName","pathNode":{"id":1721,"name":"Int256Slot","nameLocations":["2998:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1666,"src":"2998:10:13"},"referencedDeclaration":1666,"src":"2998:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1666_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:13"},"scope":1772,"src":"2938:161:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1737,"nodeType":"Block","src":"3277:79:13","statements":[{"AST":{"nativeSrc":"3312:38:13","nodeType":"YulBlock","src":"3312:38:13","statements":[{"nativeSrc":"3326:14:13","nodeType":"YulAssignment","src":"3326:14:13","value":{"name":"slot","nativeSrc":"3336:4:13","nodeType":"YulIdentifier","src":"3336:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:13","nodeType":"YulIdentifier","src":"3326:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1734,"isOffset":false,"isSlot":true,"src":"3326:6:13","suffix":"slot","valueSize":1},{"declaration":1730,"isOffset":false,"isSlot":false,"src":"3336:4:13","valueSize":1}],"flags":["memory-safe"],"id":1736,"nodeType":"InlineAssembly","src":"3287:63:13"}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"3105:85:13","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1738,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:13","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"slot","nameLocation":"3226:4:13","nodeType":"VariableDeclaration","scope":1738,"src":"3218:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:13"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"r","nameLocation":"3274:1:13","nodeType":"VariableDeclaration","scope":1738,"src":"3255:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1669_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1733,"nodeType":"UserDefinedTypeName","pathNode":{"id":1732,"name":"StringSlot","nameLocations":["3255:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1669,"src":"3255:10:13"},"referencedDeclaration":1669,"src":"3255:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1669_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:13"},"scope":1772,"src":"3195:161:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1748,"nodeType":"Block","src":"3558:85:13","statements":[{"AST":{"nativeSrc":"3593:44:13","nodeType":"YulBlock","src":"3593:44:13","statements":[{"nativeSrc":"3607:20:13","nodeType":"YulAssignment","src":"3607:20:13","value":{"name":"store.slot","nativeSrc":"3617:10:13","nodeType":"YulIdentifier","src":"3617:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:13","nodeType":"YulIdentifier","src":"3607:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1745,"isOffset":false,"isSlot":true,"src":"3607:6:13","suffix":"slot","valueSize":1},{"declaration":1741,"isOffset":false,"isSlot":true,"src":"3617:10:13","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1747,"nodeType":"InlineAssembly","src":"3568:69:13"}]},"documentation":{"id":1739,"nodeType":"StructuredDocumentation","src":"3362:101:13","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1749,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:13","nodeType":"FunctionDefinition","parameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"store","nameLocation":"3506:5:13","nodeType":"VariableDeclaration","scope":1749,"src":"3491:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1740,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:13"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"r","nameLocation":"3555:1:13","nodeType":"VariableDeclaration","scope":1749,"src":"3536:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1669_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1744,"nodeType":"UserDefinedTypeName","pathNode":{"id":1743,"name":"StringSlot","nameLocations":["3536:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1669,"src":"3536:10:13"},"referencedDeclaration":1669,"src":"3536:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1669_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:13"},"scope":1772,"src":"3468:175:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1759,"nodeType":"Block","src":"3818:79:13","statements":[{"AST":{"nativeSrc":"3853:38:13","nodeType":"YulBlock","src":"3853:38:13","statements":[{"nativeSrc":"3867:14:13","nodeType":"YulAssignment","src":"3867:14:13","value":{"name":"slot","nativeSrc":"3877:4:13","nodeType":"YulIdentifier","src":"3877:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:13","nodeType":"YulIdentifier","src":"3867:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1756,"isOffset":false,"isSlot":true,"src":"3867:6:13","suffix":"slot","valueSize":1},{"declaration":1752,"isOffset":false,"isSlot":false,"src":"3877:4:13","valueSize":1}],"flags":["memory-safe"],"id":1758,"nodeType":"InlineAssembly","src":"3828:63:13"}]},"documentation":{"id":1750,"nodeType":"StructuredDocumentation","src":"3649:84:13","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1760,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:13","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"slot","nameLocation":"3768:4:13","nodeType":"VariableDeclaration","scope":1760,"src":"3760:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:13"},"returnParameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"r","nameLocation":"3815:1:13","nodeType":"VariableDeclaration","scope":1760,"src":"3797:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1672_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1755,"nodeType":"UserDefinedTypeName","pathNode":{"id":1754,"name":"BytesSlot","nameLocations":["3797:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1672,"src":"3797:9:13"},"referencedDeclaration":1672,"src":"3797:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1672_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:13"},"scope":1772,"src":"3738:159:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1770,"nodeType":"Block","src":"4094:85:13","statements":[{"AST":{"nativeSrc":"4129:44:13","nodeType":"YulBlock","src":"4129:44:13","statements":[{"nativeSrc":"4143:20:13","nodeType":"YulAssignment","src":"4143:20:13","value":{"name":"store.slot","nativeSrc":"4153:10:13","nodeType":"YulIdentifier","src":"4153:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:13","nodeType":"YulIdentifier","src":"4143:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1767,"isOffset":false,"isSlot":true,"src":"4143:6:13","suffix":"slot","valueSize":1},{"declaration":1763,"isOffset":false,"isSlot":true,"src":"4153:10:13","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1769,"nodeType":"InlineAssembly","src":"4104:69:13"}]},"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"3903:99:13","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1771,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:13","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"store","nameLocation":"4043:5:13","nodeType":"VariableDeclaration","scope":1771,"src":"4029:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1762,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:13"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"r","nameLocation":"4091:1:13","nodeType":"VariableDeclaration","scope":1771,"src":"4073:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1672_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1766,"nodeType":"UserDefinedTypeName","pathNode":{"id":1765,"name":"BytesSlot","nameLocations":["4073:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1672,"src":"4073:9:13"},"referencedDeclaration":1672,"src":"4073:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1672_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:13"},"scope":1772,"src":"4007:172:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1773,"src":"1407:2774:13","usedErrors":[],"usedEvents":[]}],"src":"193:3989:13"},"id":13},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5229],"SafeCast":[6994],"SignedMath":[7138],"Strings":[3174]},"id":3175,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1774,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1776,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3175,"sourceUnit":5230,"src":"127:37:14","symbolAliases":[{"foreign":{"id":1775,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"135:4:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3175,"sourceUnit":6995,"src":"165:45:14","symbolAliases":[{"foreign":{"id":1777,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"173:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3175,"sourceUnit":7139,"src":"211:49:14","symbolAliases":[{"foreign":{"id":1779,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"219:10:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"262:34:14","text":" @dev String operations."},"fullyImplemented":true,"id":3174,"linearizedBaseContracts":[3174],"name":"Strings","nameLocation":"305:7:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1783,"libraryName":{"id":1782,"name":"SafeCast","nameLocations":["325:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":6994,"src":"325:8:14"},"nodeType":"UsingForDirective","src":"319:21:14"},{"constant":true,"id":1786,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:14","nodeType":"VariableDeclaration","scope":3174,"src":"346:56:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1784,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1789,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:14","nodeType":"VariableDeclaration","scope":3174,"src":"408:42:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1787,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:14","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1825,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:14","nodeType":"VariableDeclaration","scope":3174,"src":"456:302:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:14","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:14","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:14","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:14","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:14","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:14","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:14","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:14","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:14","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:14","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:14","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:14","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:14","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:14","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:14","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:14","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:14","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:14","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:14","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:14","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:14","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"778:81:14","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1832,"name":"StringsInsufficientHexLength","nameLocation":"870:28:14","nodeType":"ErrorDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"value","nameLocation":"907:5:14","nodeType":"VariableDeclaration","scope":1832,"src":"899:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"length","nameLocation":"922:6:14","nodeType":"VariableDeclaration","scope":1832,"src":"914:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:14"},"src":"864:66:14"},{"documentation":{"id":1833,"nodeType":"StructuredDocumentation","src":"936:108:14","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1835,"name":"StringsInvalidChar","nameLocation":"1055:18:14","nodeType":"ErrorDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[],"src":"1073:2:14"},"src":"1049:27:14"},{"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"1082:84:14","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1838,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:14","nodeType":"ErrorDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[],"src":"1204:2:14"},"src":"1171:36:14"},{"body":{"id":1885,"nodeType":"Block","src":"1379:563:14","statements":[{"id":1884,"nodeType":"UncheckedBlock","src":"1389:547:14","statements":[{"assignments":[1847],"declarations":[{"constant":false,"id":1847,"mutability":"mutable","name":"length","nameLocation":"1421:6:14","nodeType":"VariableDeclaration","scope":1884,"src":"1413:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1854,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"1441:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1848,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"1430:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5229_$","typeString":"type(library Math)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:14","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5061,"src":"1430:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:14"},{"assignments":[1856],"declarations":[{"constant":false,"id":1856,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:14","nodeType":"VariableDeclaration","scope":1884,"src":"1465:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1855,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1861,"initialValue":{"arguments":[{"id":1859,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"1499:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1857,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:14"},{"assignments":[1863],"declarations":[{"constant":false,"id":1863,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:14","nodeType":"VariableDeclaration","scope":1884,"src":"1520:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1864,"nodeType":"VariableDeclarationStatement","src":"1520:11:14"},{"AST":{"nativeSrc":"1570:69:14","nodeType":"YulBlock","src":"1570:69:14","statements":[{"nativeSrc":"1588:37:14","nodeType":"YulAssignment","src":"1588:37:14","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:14","nodeType":"YulIdentifier","src":"1603:6:14"},{"kind":"number","nativeSrc":"1611:4:14","nodeType":"YulLiteral","src":"1611:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:14","nodeType":"YulIdentifier","src":"1599:3:14"},"nativeSrc":"1599:17:14","nodeType":"YulFunctionCall","src":"1599:17:14"},{"name":"length","nativeSrc":"1618:6:14","nodeType":"YulIdentifier","src":"1618:6:14"}],"functionName":{"name":"add","nativeSrc":"1595:3:14","nodeType":"YulIdentifier","src":"1595:3:14"},"nativeSrc":"1595:30:14","nodeType":"YulFunctionCall","src":"1595:30:14"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:14","nodeType":"YulIdentifier","src":"1588:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1856,"isOffset":false,"isSlot":false,"src":"1603:6:14","valueSize":1},{"declaration":1847,"isOffset":false,"isSlot":false,"src":"1618:6:14","valueSize":1},{"declaration":1863,"isOffset":false,"isSlot":false,"src":"1588:3:14","valueSize":1}],"flags":["memory-safe"],"id":1865,"nodeType":"InlineAssembly","src":"1545:94:14"},{"body":{"id":1880,"nodeType":"Block","src":"1665:234:14","statements":[{"expression":{"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:14","subExpression":{"id":1867,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"1683:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1869,"nodeType":"ExpressionStatement","src":"1683:5:14"},{"AST":{"nativeSrc":"1731:86:14","nodeType":"YulBlock","src":"1731:86:14","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:14","nodeType":"YulIdentifier","src":"1761:3:14"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:14","nodeType":"YulIdentifier","src":"1775:5:14"},{"kind":"number","nativeSrc":"1782:2:14","nodeType":"YulLiteral","src":"1782:2:14","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:14","nodeType":"YulIdentifier","src":"1771:3:14"},"nativeSrc":"1771:14:14","nodeType":"YulFunctionCall","src":"1771:14:14"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:14","nodeType":"YulIdentifier","src":"1787:10:14"}],"functionName":{"name":"byte","nativeSrc":"1766:4:14","nodeType":"YulIdentifier","src":"1766:4:14"},"nativeSrc":"1766:32:14","nodeType":"YulFunctionCall","src":"1766:32:14"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:14","nodeType":"YulIdentifier","src":"1753:7:14"},"nativeSrc":"1753:46:14","nodeType":"YulFunctionCall","src":"1753:46:14"},"nativeSrc":"1753:46:14","nodeType":"YulExpressionStatement","src":"1753:46:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1786,"isOffset":false,"isSlot":false,"src":"1787:10:14","valueSize":1},{"declaration":1863,"isOffset":false,"isSlot":false,"src":"1761:3:14","valueSize":1},{"declaration":1841,"isOffset":false,"isSlot":false,"src":"1775:5:14","valueSize":1}],"flags":["memory-safe"],"id":1870,"nodeType":"InlineAssembly","src":"1706:111:14"},{"expression":{"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"1834:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1874,"nodeType":"ExpressionStatement","src":"1834:11:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"1867:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1879,"nodeType":"IfStatement","src":"1863:21:14","trueBody":{"id":1878,"nodeType":"Break","src":"1879:5:14"}}]},"condition":{"hexValue":"74727565","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1881,"nodeType":"WhileStatement","src":"1652:247:14"},{"expression":{"id":1882,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"1919:6:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1845,"id":1883,"nodeType":"Return","src":"1912:13:14"}]}]},"documentation":{"id":1839,"nodeType":"StructuredDocumentation","src":"1213:90:14","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1886,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:14","nodeType":"FunctionDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"value","nameLocation":"1334:5:14","nodeType":"VariableDeclaration","scope":1886,"src":"1326:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:14"},"returnParameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1886,"src":"1364:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1843,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:14"},"scope":3174,"src":"1308:634:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1911,"nodeType":"Block","src":"2118:92:14","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"2149:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:14","trueExpression":{"hexValue":"2d","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"2195:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1904,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"2180:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7138_$","typeString":"type(library SignedMath)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:14","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7137,"src":"2180:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1903,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"2171:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1894,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:14","typeDescriptions":{}}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:14","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:14","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1893,"id":1910,"nodeType":"Return","src":"2128:75:14"}]},"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"1948:89:14","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1912,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:14","nodeType":"FunctionDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"value","nameLocation":"2073:5:14","nodeType":"VariableDeclaration","scope":1912,"src":"2066:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1888,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:14"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1912,"src":"2103:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1891,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:14"},"scope":3174,"src":"2042:168:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1931,"nodeType":"Block","src":"2389:100:14","statements":[{"id":1930,"nodeType":"UncheckedBlock","src":"2399:84:14","statements":[{"expression":{"arguments":[{"id":1921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2442:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2461:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1922,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"2449:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5229_$","typeString":"type(library Math)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:14","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5172,"src":"2449:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1920,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1932,2015,2035],"referencedDeclaration":2015,"src":"2430:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1919,"id":1929,"nodeType":"Return","src":"2423:49:14"}]}]},"documentation":{"id":1913,"nodeType":"StructuredDocumentation","src":"2216:94:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:14","nodeType":"FunctionDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"value","nameLocation":"2344:5:14","nodeType":"VariableDeclaration","scope":1932,"src":"2336:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:14"},"returnParameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1932,"src":"2374:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1917,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:14"},"scope":3174,"src":"2315:174:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2014,"nodeType":"Block","src":"2702:435:14","statements":[{"assignments":[1943],"declarations":[{"constant":false,"id":1943,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:14","nodeType":"VariableDeclaration","scope":2014,"src":"2712:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1945,"initialValue":{"id":1944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"2733:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:14"},{"assignments":[1947],"declarations":[{"constant":false,"id":1947,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:14","nodeType":"VariableDeclaration","scope":2014,"src":"2748:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1946,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1956,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1951,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"2784:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1948,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:14"},{"expression":{"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1957,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"2805:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1959,"indexExpression":{"hexValue":"30","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1962,"nodeType":"ExpressionStatement","src":"2805:15:14"},{"expression":{"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1963,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"2830:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1965,"indexExpression":{"hexValue":"31","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1968,"nodeType":"ExpressionStatement","src":"2830:15:14"},{"body":{"id":1997,"nodeType":"Block","src":"2900:95:14","statements":[{"expression":{"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1983,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"2914:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1985,"indexExpression":{"id":1984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2921:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1986,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"2926:10:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1990,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1987,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2937:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1992,"nodeType":"ExpressionStatement","src":"2914:40:14"},{"expression":{"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1993,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2968:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1996,"nodeType":"ExpressionStatement","src":"2968:16:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2888:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1998,"initializationExpression":{"assignments":[1970],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"i","nameLocation":"2868:1:14","nodeType":"VariableDeclaration","scope":1998,"src":"2860:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1976,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1972,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"2876:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:14"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:14","subExpression":{"id":1980,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2897:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1982,"nodeType":"ExpressionStatement","src":"2895:3:14"},"nodeType":"ForStatement","src":"2855:140:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"3008:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2008,"nodeType":"IfStatement","src":"3004:96:14","trueBody":{"id":2007,"nodeType":"Block","src":"3025:75:14","statements":[{"errorCall":{"arguments":[{"id":2003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"3075:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2004,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"3082:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2002,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3046:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2006,"nodeType":"RevertStatement","src":"3039:50:14"}]}},{"expression":{"arguments":[{"id":2011,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"3123:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2009,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:14","typeDescriptions":{}}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1941,"id":2013,"nodeType":"Return","src":"3109:21:14"}]},"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"2495:112:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2015,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:14","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"value","nameLocation":"2641:5:14","nodeType":"VariableDeclaration","scope":2015,"src":"2633:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"length","nameLocation":"2656:6:14","nodeType":"VariableDeclaration","scope":2015,"src":"2648:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:14"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2015,"src":"2687:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1939,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:14"},"scope":3174,"src":"2612:525:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2034,"nodeType":"Block","src":"3369:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2028,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"3414:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2026,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:14","typeDescriptions":{}}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:14","typeDescriptions":{}}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2031,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"3422:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2023,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1932,2015,2035],"referencedDeclaration":2015,"src":"3386:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2022,"id":2033,"nodeType":"Return","src":"3379:58:14"}]},"documentation":{"id":2016,"nodeType":"StructuredDocumentation","src":"3143:148:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2035,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:14","nodeType":"FunctionDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"addr","nameLocation":"3325:4:14","nodeType":"VariableDeclaration","scope":2035,"src":"3317:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2017,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:14"},"returnParameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2035,"src":"3354:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2020,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:14"},"scope":3174,"src":"3296:148:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2099,"nodeType":"Block","src":"3701:642:14","statements":[{"assignments":[2044],"declarations":[{"constant":false,"id":2044,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:14","nodeType":"VariableDeclaration","scope":2099,"src":"3711:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2043,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2051,"initialValue":{"arguments":[{"arguments":[{"id":2048,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"3751:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2047,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1932,2015,2035],"referencedDeclaration":2035,"src":"3739:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2045,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:14","typeDescriptions":{}}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:14"},{"assignments":[2053],"declarations":[{"constant":false,"id":2053,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:14","nodeType":"VariableDeclaration","scope":2099,"src":"3842:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2054,"nodeType":"VariableDeclarationStatement","src":"3842:17:14"},{"AST":{"nativeSrc":"3894:78:14","nodeType":"YulBlock","src":"3894:78:14","statements":[{"nativeSrc":"3908:54:14","nodeType":"YulAssignment","src":"3908:54:14","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:14","nodeType":"YulLiteral","src":"3925:2:14","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:14","nodeType":"YulIdentifier","src":"3943:6:14"},{"kind":"number","nativeSrc":"3951:4:14","nodeType":"YulLiteral","src":"3951:4:14","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:14","nodeType":"YulIdentifier","src":"3939:3:14"},"nativeSrc":"3939:17:14","nodeType":"YulFunctionCall","src":"3939:17:14"},{"kind":"number","nativeSrc":"3958:2:14","nodeType":"YulLiteral","src":"3958:2:14","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:14","nodeType":"YulIdentifier","src":"3929:9:14"},"nativeSrc":"3929:32:14","nodeType":"YulFunctionCall","src":"3929:32:14"}],"functionName":{"name":"shr","nativeSrc":"3921:3:14","nodeType":"YulIdentifier","src":"3921:3:14"},"nativeSrc":"3921:41:14","nodeType":"YulFunctionCall","src":"3921:41:14"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:14","nodeType":"YulIdentifier","src":"3908:9:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2044,"isOffset":false,"isSlot":false,"src":"3943:6:14","valueSize":1},{"declaration":2053,"isOffset":false,"isSlot":false,"src":"3908:9:14","valueSize":1}],"flags":["memory-safe"],"id":2055,"nodeType":"InlineAssembly","src":"3869:103:14"},{"body":{"id":2092,"nodeType":"Block","src":"4015:291:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"4121:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2073,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"4150:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2075,"indexExpression":{"id":2074,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"4157:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2071,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:14","typeDescriptions":{}}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2087,"nodeType":"IfStatement","src":"4117:150:14","trueBody":{"id":2086,"nodeType":"Block","src":"4167:100:14","statements":[{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2080,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"4235:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2082,"indexExpression":{"id":2081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"4242:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2085,"nodeType":"ExpressionStatement","src":"4235:17:14"}]}},{"expression":{"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2088,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"4280:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2091,"nodeType":"ExpressionStatement","src":"4280:15:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2060,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"4003:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2093,"initializationExpression":{"assignments":[2057],"declarations":[{"constant":false,"id":2057,"mutability":"mutable","name":"i","nameLocation":"3995:1:14","nodeType":"VariableDeclaration","scope":2093,"src":"3987:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2059,"initialValue":{"hexValue":"3431","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:14","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:14"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:14","subExpression":{"id":2063,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"4012:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2065,"nodeType":"ExpressionStatement","src":"4010:3:14"},"nodeType":"ForStatement","src":"3982:324:14"},{"expression":{"arguments":[{"id":2096,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"4329:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2094,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:14","typeDescriptions":{}}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2042,"id":2098,"nodeType":"Return","src":"4315:21:14"}]},"documentation":{"id":2036,"nodeType":"StructuredDocumentation","src":"3450:165:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2100,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:14","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"addr","nameLocation":"3657:4:14","nodeType":"VariableDeclaration","scope":2100,"src":"3649:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2037,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:14"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2100,"src":"3686:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2040,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:14"},"scope":3174,"src":"3620:723:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2136,"nodeType":"Block","src":"4498:104:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2112,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"4521:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2110,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:14","typeDescriptions":{}}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:14","memberName":"length","nodeType":"MemberAccess","src":"4515:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2117,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"4540:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2115,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:14","typeDescriptions":{}}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:14","memberName":"length","nodeType":"MemberAccess","src":"4534:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2124,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"4569:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2122,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:14","typeDescriptions":{}}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2121,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2130,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"4592:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2128,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:14","typeDescriptions":{}}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2127,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2109,"id":2135,"nodeType":"Return","src":"4508:87:14"}]},"documentation":{"id":2101,"nodeType":"StructuredDocumentation","src":"4349:66:14","text":" @dev Returns true if the two strings are equal."},"id":2137,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:14","nodeType":"FunctionDefinition","parameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"a","nameLocation":"4449:1:14","nodeType":"VariableDeclaration","scope":2137,"src":"4435:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2102,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2105,"mutability":"mutable","name":"b","nameLocation":"4466:1:14","nodeType":"VariableDeclaration","scope":2137,"src":"4452:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2104,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:14"},"returnParameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2137,"src":"4492:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2107,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:14"},"scope":3174,"src":"4420:182:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2155,"nodeType":"Block","src":"4899:64:14","statements":[{"expression":{"arguments":[{"id":2146,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"4926:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2150,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"4942:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2148,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:14","typeDescriptions":{}}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:14","memberName":"length","nodeType":"MemberAccess","src":"4936:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2145,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2156,2187],"referencedDeclaration":2187,"src":"4916:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2144,"id":2154,"nodeType":"Return","src":"4909:47:14"}]},"documentation":{"id":2138,"nodeType":"StructuredDocumentation","src":"4608:214:14","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2156,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:14","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"input","nameLocation":"4860:5:14","nodeType":"VariableDeclaration","scope":2156,"src":"4846:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2139,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:14"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2156,"src":"4890:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:14"},"scope":3174,"src":"4827:136:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2186,"nodeType":"Block","src":"5368:153:14","statements":[{"assignments":[2169,2171],"declarations":[{"constant":false,"id":2169,"mutability":"mutable","name":"success","nameLocation":"5384:7:14","nodeType":"VariableDeclaration","scope":2186,"src":"5379:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2168,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2171,"mutability":"mutable","name":"value","nameLocation":"5401:5:14","nodeType":"VariableDeclaration","scope":2186,"src":"5393:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2177,"initialValue":{"arguments":[{"id":2173,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"5423:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2174,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"5430:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2175,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"5437:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2172,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2208,2245],"referencedDeclaration":2245,"src":"5410:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:14"},{"condition":{"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:14","subExpression":{"id":2178,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"5456:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2183,"nodeType":"IfStatement","src":"5451:41:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2180,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"5472:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2182,"nodeType":"RevertStatement","src":"5465:27:14"}},{"expression":{"id":2184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"5509:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2167,"id":2185,"nodeType":"Return","src":"5502:12:14"}]},"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"4969:294:14","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2187,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:14","nodeType":"FunctionDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"input","nameLocation":"5301:5:14","nodeType":"VariableDeclaration","scope":2187,"src":"5287:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2158,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"begin","nameLocation":"5316:5:14","nodeType":"VariableDeclaration","scope":2187,"src":"5308:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"end","nameLocation":"5331:3:14","nodeType":"VariableDeclaration","scope":2187,"src":"5323:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:14"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2187,"src":"5359:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:14"},"scope":3174,"src":"5268:253:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2207,"nodeType":"Block","src":"5842:83:14","statements":[{"expression":{"arguments":[{"id":2198,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"5888:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2202,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"5904:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2200,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:14","typeDescriptions":{}}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:14","memberName":"length","nodeType":"MemberAccess","src":"5898:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2197,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"5859:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2196,"id":2206,"nodeType":"Return","src":"5852:66:14"}]},"documentation":{"id":2188,"nodeType":"StructuredDocumentation","src":"5527:215:14","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2208,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:14","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"input","nameLocation":"5783:5:14","nodeType":"VariableDeclaration","scope":2208,"src":"5769:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2189,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:14"},"returnParameters":{"id":2196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"success","nameLocation":"5818:7:14","nodeType":"VariableDeclaration","scope":2208,"src":"5813:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2192,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2195,"mutability":"mutable","name":"value","nameLocation":"5835:5:14","nodeType":"VariableDeclaration","scope":2208,"src":"5827:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2194,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:14"},"scope":3174,"src":"5747:178:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2244,"nodeType":"Block","src":"6327:144:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2222,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"6341:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2225,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"6353:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2223,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:14","typeDescriptions":{}}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:14","memberName":"length","nodeType":"MemberAccess","src":"6347:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2229,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"6370:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2230,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"6378:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2237,"nodeType":"IfStatement","src":"6337:63:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2221,"id":2236,"nodeType":"Return","src":"6383:17:14"}},{"expression":{"arguments":[{"id":2239,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"6446:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2240,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"6453:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2241,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"6460:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2238,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6417:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2221,"id":2243,"nodeType":"Return","src":"6410:54:14"}]},"documentation":{"id":2209,"nodeType":"StructuredDocumentation","src":"5931:238:14","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2245,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:14","nodeType":"FunctionDefinition","parameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"input","nameLocation":"6219:5:14","nodeType":"VariableDeclaration","scope":2245,"src":"6205:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2210,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"begin","nameLocation":"6242:5:14","nodeType":"VariableDeclaration","scope":2245,"src":"6234:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"end","nameLocation":"6265:3:14","nodeType":"VariableDeclaration","scope":2245,"src":"6257:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:14"},"returnParameters":{"id":2221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"success","nameLocation":"6303:7:14","nodeType":"VariableDeclaration","scope":2245,"src":"6298:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2217,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"value","nameLocation":"6320:5:14","nodeType":"VariableDeclaration","scope":2245,"src":"6312:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:14"},"scope":3174,"src":"6174:297:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2314,"nodeType":"Block","src":"6874:347:14","statements":[{"assignments":[2260],"declarations":[{"constant":false,"id":2260,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:14","nodeType":"VariableDeclaration","scope":2314,"src":"6884:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2259,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2265,"initialValue":{"arguments":[{"id":2263,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"6912:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2261,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:14","typeDescriptions":{}}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:14"},{"assignments":[2267],"declarations":[{"constant":false,"id":2267,"mutability":"mutable","name":"result","nameLocation":"6937:6:14","nodeType":"VariableDeclaration","scope":2314,"src":"6929:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2269,"initialValue":{"hexValue":"30","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:14"},{"body":{"id":2308,"nodeType":"Block","src":"6995:189:14","statements":[{"assignments":[2281],"declarations":[{"constant":false,"id":2281,"mutability":"mutable","name":"chr","nameLocation":"7015:3:14","nodeType":"VariableDeclaration","scope":2308,"src":"7009:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2280,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2291,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2286,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"7064:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2287,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"7072:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2285,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"7041:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2283,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:14","typeDescriptions":{}}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2282,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"7021:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2292,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7094:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2299,"nodeType":"IfStatement","src":"7090:30:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2258,"id":2298,"nodeType":"Return","src":"7103:17:14"}},{"expression":{"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2300,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"7134:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2303,"nodeType":"ExpressionStatement","src":"7134:12:14"},{"expression":{"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"7160:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2305,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7170:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2307,"nodeType":"ExpressionStatement","src":"7160:13:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2274,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"6981:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2275,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"6985:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2309,"initializationExpression":{"assignments":[2271],"declarations":[{"constant":false,"id":2271,"mutability":"mutable","name":"i","nameLocation":"6970:1:14","nodeType":"VariableDeclaration","scope":2309,"src":"6962:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2273,"initialValue":{"id":2272,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"6974:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:14","subExpression":{"id":2277,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"6992:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2279,"nodeType":"ExpressionStatement","src":"6990:3:14"},"nodeType":"ForStatement","src":"6957:227:14"},{"expression":{"components":[{"hexValue":"74727565","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2311,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"7207:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2258,"id":2313,"nodeType":"Return","src":"7193:21:14"}]},"documentation":{"id":2246,"nodeType":"StructuredDocumentation","src":"6477:224:14","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:14","nodeType":"FunctionDefinition","parameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"input","nameLocation":"6767:5:14","nodeType":"VariableDeclaration","scope":2315,"src":"6753:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2247,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"begin","nameLocation":"6790:5:14","nodeType":"VariableDeclaration","scope":2315,"src":"6782:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"end","nameLocation":"6813:3:14","nodeType":"VariableDeclaration","scope":2315,"src":"6805:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:14"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"success","nameLocation":"6850:7:14","nodeType":"VariableDeclaration","scope":2315,"src":"6845:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2254,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"value","nameLocation":"6867:5:14","nodeType":"VariableDeclaration","scope":2315,"src":"6859:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:14"},"scope":3174,"src":"6706:515:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2333,"nodeType":"Block","src":"7518:63:14","statements":[{"expression":{"arguments":[{"id":2324,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"7544:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2328,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"7560:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2326,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:14","typeDescriptions":{}}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:14","memberName":"length","nodeType":"MemberAccess","src":"7554:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2323,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2334,2365],"referencedDeclaration":2365,"src":"7535:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2322,"id":2332,"nodeType":"Return","src":"7528:46:14"}]},"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"7227:216:14","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2334,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:14","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"input","nameLocation":"7480:5:14","nodeType":"VariableDeclaration","scope":2334,"src":"7466:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2317,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:14"},"returnParameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2334,"src":"7510:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2320,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:14"},"scope":3174,"src":"7448:133:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2364,"nodeType":"Block","src":"7986:151:14","statements":[{"assignments":[2347,2349],"declarations":[{"constant":false,"id":2347,"mutability":"mutable","name":"success","nameLocation":"8002:7:14","nodeType":"VariableDeclaration","scope":2364,"src":"7997:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2346,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"value","nameLocation":"8018:5:14","nodeType":"VariableDeclaration","scope":2364,"src":"8011:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2348,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2355,"initialValue":{"arguments":[{"id":2351,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"8039:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2352,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"8046:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2353,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"8053:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2350,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2386,2428],"referencedDeclaration":2428,"src":"8027:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:14"},{"condition":{"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:14","subExpression":{"id":2356,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"8072:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2361,"nodeType":"IfStatement","src":"8067:41:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2358,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"8088:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2360,"nodeType":"RevertStatement","src":"8081:27:14"}},{"expression":{"id":2362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"8125:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2345,"id":2363,"nodeType":"Return","src":"8118:12:14"}]},"documentation":{"id":2335,"nodeType":"StructuredDocumentation","src":"7587:296:14","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2365,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:14","nodeType":"FunctionDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"input","nameLocation":"7920:5:14","nodeType":"VariableDeclaration","scope":2365,"src":"7906:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2336,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"begin","nameLocation":"7935:5:14","nodeType":"VariableDeclaration","scope":2365,"src":"7927:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"end","nameLocation":"7950:3:14","nodeType":"VariableDeclaration","scope":2365,"src":"7942:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:14"},"returnParameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2365,"src":"7978:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2343,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:14"},"scope":3174,"src":"7888:249:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2385,"nodeType":"Block","src":"8528:82:14","statements":[{"expression":{"arguments":[{"id":2376,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"8573:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2380,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"8589:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2378,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:14","typeDescriptions":{}}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:14","memberName":"length","nodeType":"MemberAccess","src":"8583:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2375,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"8545:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2374,"id":2384,"nodeType":"Return","src":"8538:65:14"}]},"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"8143:287:14","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2386,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:14","nodeType":"FunctionDefinition","parameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"input","nameLocation":"8470:5:14","nodeType":"VariableDeclaration","scope":2386,"src":"8456:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2367,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:14"},"returnParameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"success","nameLocation":"8505:7:14","nodeType":"VariableDeclaration","scope":2386,"src":"8500:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2370,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"value","nameLocation":"8521:5:14","nodeType":"VariableDeclaration","scope":2386,"src":"8514:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2372,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:14"},"scope":3174,"src":"8435:175:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2391,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:14","nodeType":"VariableDeclaration","scope":3174,"src":"8616:50:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2427,"nodeType":"Block","src":"9132:143:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"9146:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2408,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"9158:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2406,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:14","typeDescriptions":{}}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:14","memberName":"length","nodeType":"MemberAccess","src":"9152:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2412,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"9175:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2413,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"9183:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2420,"nodeType":"IfStatement","src":"9142:63:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2404,"id":2419,"nodeType":"Return","src":"9188:17:14"}},{"expression":{"arguments":[{"id":2422,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"9250:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2423,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"9257:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2424,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"9264:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2421,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"9222:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2404,"id":2426,"nodeType":"Return","src":"9215:53:14"}]},"documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"8673:303:14","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2428,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:14","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"input","nameLocation":"9025:5:14","nodeType":"VariableDeclaration","scope":2428,"src":"9011:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2393,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2396,"mutability":"mutable","name":"begin","nameLocation":"9048:5:14","nodeType":"VariableDeclaration","scope":2428,"src":"9040:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"end","nameLocation":"9071:3:14","nodeType":"VariableDeclaration","scope":2428,"src":"9063:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:14"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"success","nameLocation":"9109:7:14","nodeType":"VariableDeclaration","scope":2428,"src":"9104:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2400,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2403,"mutability":"mutable","name":"value","nameLocation":"9125:5:14","nodeType":"VariableDeclaration","scope":2428,"src":"9118:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2402,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:14"},"scope":3174,"src":"8981:294:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2548,"nodeType":"Block","src":"9675:812:14","statements":[{"assignments":[2443],"declarations":[{"constant":false,"id":2443,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:14","nodeType":"VariableDeclaration","scope":2548,"src":"9685:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2442,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2448,"initialValue":{"arguments":[{"id":2446,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"9713:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2444,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:14","typeDescriptions":{}}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:14"},{"assignments":[2450],"declarations":[{"constant":false,"id":2450,"mutability":"mutable","name":"sign","nameLocation":"9783:4:14","nodeType":"VariableDeclaration","scope":2548,"src":"9776:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2449,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2466,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2451,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"9790:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2452,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"9799:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2461,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"9847:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2462,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"9855:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2460,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"9824:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2458,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:14","typeDescriptions":{}}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:14","trueExpression":{"arguments":[{"hexValue":"30","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2454,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:14","typeDescriptions":{}}},"id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:14"},{"assignments":[2468],"declarations":[{"constant":false,"id":2468,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:14","nodeType":"VariableDeclaration","scope":2548,"src":"9943:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2467,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2475,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2469,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"9963:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2470,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:14","typeDescriptions":{}}},"id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:14"},{"assignments":[2477],"declarations":[{"constant":false,"id":2477,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:14","nodeType":"VariableDeclaration","scope":2548,"src":"9992:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2476,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2484,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2478,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"10012:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2479,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:14","typeDescriptions":{}}},"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:14"},{"assignments":[2486],"declarations":[{"constant":false,"id":2486,"mutability":"mutable","name":"offset","nameLocation":"10049:6:14","nodeType":"VariableDeclaration","scope":2548,"src":"10041:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2493,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2487,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"10059:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2488,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"10075:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"10058:37:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:14"},{"assignments":[2495,2497],"declarations":[{"constant":false,"id":2495,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:14","nodeType":"VariableDeclaration","scope":2548,"src":"10109:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2494,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2497,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:14","nodeType":"VariableDeclaration","scope":2548,"src":"10126:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2505,"initialValue":{"arguments":[{"id":2499,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"10159:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2500,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"10166:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2501,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"10174:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2503,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"10182:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2498,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2208,2245],"referencedDeclaration":2245,"src":"10146:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2506,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"10201:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2507,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"10215:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2508,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"10226:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2526,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"10343:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2527,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"10357:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2529,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"10373:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2530,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"10385:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2441,"id":2545,"nodeType":"Return","src":"10463:17:14"},"id":2546,"nodeType":"IfStatement","src":"10339:141:14","trueBody":{"id":2541,"nodeType":"Block","src":"10401:56:14","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2535,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2534,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:14","memberName":"min","nodeType":"MemberAccess","src":"10429:16:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2441,"id":2540,"nodeType":"Return","src":"10415:31:14"}]}},"id":2547,"nodeType":"IfStatement","src":"10197:283:14","trueBody":{"id":2525,"nodeType":"Block","src":"10242:91:14","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2512,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"10270:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2520,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"10312:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2518,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:14","typeDescriptions":{}}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:14","trueExpression":{"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:14","subExpression":{"arguments":[{"id":2515,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"10293:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2513,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:14","typeDescriptions":{}}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2441,"id":2524,"nodeType":"Return","src":"10256:66:14"}]}}]},"documentation":{"id":2429,"nodeType":"StructuredDocumentation","src":"9281:223:14","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2549,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:14","nodeType":"FunctionDefinition","parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"input","nameLocation":"9569:5:14","nodeType":"VariableDeclaration","scope":2549,"src":"9555:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2430,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"begin","nameLocation":"9592:5:14","nodeType":"VariableDeclaration","scope":2549,"src":"9584:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"end","nameLocation":"9615:3:14","nodeType":"VariableDeclaration","scope":2549,"src":"9607:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:14"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"success","nameLocation":"9652:7:14","nodeType":"VariableDeclaration","scope":2549,"src":"9647:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2437,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"value","nameLocation":"9668:5:14","nodeType":"VariableDeclaration","scope":2549,"src":"9661:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2439,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:14"},"scope":3174,"src":"9509:978:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2567,"nodeType":"Block","src":"10832:67:14","statements":[{"expression":{"arguments":[{"id":2558,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"10862:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2562,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"10878:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2560,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:14","typeDescriptions":{}}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:14","memberName":"length","nodeType":"MemberAccess","src":"10872:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2557,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2568,2599],"referencedDeclaration":2599,"src":"10849:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2556,"id":2566,"nodeType":"Return","src":"10842:50:14"}]},"documentation":{"id":2550,"nodeType":"StructuredDocumentation","src":"10493:259:14","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2568,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:14","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2552,"mutability":"mutable","name":"input","nameLocation":"10793:5:14","nodeType":"VariableDeclaration","scope":2568,"src":"10779:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2551,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:14"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2568,"src":"10823:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:14"},"scope":3174,"src":"10757:142:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2598,"nodeType":"Block","src":"11320:156:14","statements":[{"assignments":[2581,2583],"declarations":[{"constant":false,"id":2581,"mutability":"mutable","name":"success","nameLocation":"11336:7:14","nodeType":"VariableDeclaration","scope":2598,"src":"11331:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2580,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2583,"mutability":"mutable","name":"value","nameLocation":"11353:5:14","nodeType":"VariableDeclaration","scope":2598,"src":"11345:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2582,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2589,"initialValue":{"arguments":[{"id":2585,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"11378:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2586,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"11385:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2587,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"11392:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2584,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2620,2657],"referencedDeclaration":2657,"src":"11362:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:14"},{"condition":{"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:14","subExpression":{"id":2590,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"11411:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2595,"nodeType":"IfStatement","src":"11406:41:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2592,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"11427:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2594,"nodeType":"RevertStatement","src":"11420:27:14"}},{"expression":{"id":2596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"11464:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2579,"id":2597,"nodeType":"Return","src":"11457:12:14"}]},"documentation":{"id":2569,"nodeType":"StructuredDocumentation","src":"10905:307:14","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2599,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:14","nodeType":"FunctionDefinition","parameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"input","nameLocation":"11253:5:14","nodeType":"VariableDeclaration","scope":2599,"src":"11239:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2570,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"begin","nameLocation":"11268:5:14","nodeType":"VariableDeclaration","scope":2599,"src":"11260:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"end","nameLocation":"11283:3:14","nodeType":"VariableDeclaration","scope":2599,"src":"11275:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:14"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2599,"src":"11311:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:14"},"scope":3174,"src":"11217:259:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2619,"nodeType":"Block","src":"11803:86:14","statements":[{"expression":{"arguments":[{"id":2610,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"11852:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2614,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"11868:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2612,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:14","typeDescriptions":{}}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:14","memberName":"length","nodeType":"MemberAccess","src":"11862:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2609,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"11820:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2608,"id":2618,"nodeType":"Return","src":"11813:69:14"}]},"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"11482:218:14","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2620,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:14","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"input","nameLocation":"11744:5:14","nodeType":"VariableDeclaration","scope":2620,"src":"11730:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2601,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:14"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"success","nameLocation":"11779:7:14","nodeType":"VariableDeclaration","scope":2620,"src":"11774:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2604,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"value","nameLocation":"11796:5:14","nodeType":"VariableDeclaration","scope":2620,"src":"11788:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:14"},"scope":3174,"src":"11705:184:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2656,"nodeType":"Block","src":"12297:147:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"12311:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2637,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"12323:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2635,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:14","typeDescriptions":{}}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:14","memberName":"length","nodeType":"MemberAccess","src":"12317:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2641,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"12340:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2642,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"12348:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2649,"nodeType":"IfStatement","src":"12307:63:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2633,"id":2648,"nodeType":"Return","src":"12353:17:14"}},{"expression":{"arguments":[{"id":2651,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"12419:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2652,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"12426:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2653,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"12433:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2650,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"12387:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2633,"id":2655,"nodeType":"Return","src":"12380:57:14"}]},"documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"11895:241:14","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2657,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:14","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"input","nameLocation":"12189:5:14","nodeType":"VariableDeclaration","scope":2657,"src":"12175:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2622,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"begin","nameLocation":"12212:5:14","nodeType":"VariableDeclaration","scope":2657,"src":"12204:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"end","nameLocation":"12235:3:14","nodeType":"VariableDeclaration","scope":2657,"src":"12227:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2626,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:14"},"returnParameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"success","nameLocation":"12273:7:14","nodeType":"VariableDeclaration","scope":2657,"src":"12268:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2629,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2632,"mutability":"mutable","name":"value","nameLocation":"12290:5:14","nodeType":"VariableDeclaration","scope":2657,"src":"12282:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:14"},"scope":3174,"src":"12141:303:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2759,"nodeType":"Block","src":"12853:881:14","statements":[{"assignments":[2672],"declarations":[{"constant":false,"id":2672,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:14","nodeType":"VariableDeclaration","scope":2759,"src":"12863:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2671,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2677,"initialValue":{"arguments":[{"id":2675,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"12891:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2673,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:14","typeDescriptions":{}}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:14"},{"assignments":[2679],"declarations":[{"constant":false,"id":2679,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:14","nodeType":"VariableDeclaration","scope":2759,"src":"12945:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2678,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2699,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2680,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"12963:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2681,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"12969:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2689,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"13013:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2690,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"13021:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2688,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"12990:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2686,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:14","typeDescriptions":{}}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2693,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:14","typeDescriptions":{}}},"id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:14"},{"assignments":[2701],"declarations":[{"constant":false,"id":2701,"mutability":"mutable","name":"offset","nameLocation":"13133:6:14","nodeType":"VariableDeclaration","scope":2759,"src":"13125:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2700,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2707,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2702,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"13142:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"13142:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:14"},{"assignments":[2709],"declarations":[{"constant":false,"id":2709,"mutability":"mutable","name":"result","nameLocation":"13183:6:14","nodeType":"VariableDeclaration","scope":2759,"src":"13175:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2711,"initialValue":{"hexValue":"30","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:14"},{"body":{"id":2753,"nodeType":"Block","src":"13250:447:14","statements":[{"assignments":[2725],"declarations":[{"constant":false,"id":2725,"mutability":"mutable","name":"chr","nameLocation":"13270:3:14","nodeType":"VariableDeclaration","scope":2753,"src":"13264:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2724,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2735,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2730,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"13319:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"13327:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2729,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"13296:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2727,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:14","typeDescriptions":{}}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2726,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"13276:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2736,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"13349:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2743,"nodeType":"IfStatement","src":"13345:31:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2670,"id":2742,"nodeType":"Return","src":"13359:17:14"}},{"expression":{"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2744,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"13390:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2747,"nodeType":"ExpressionStatement","src":"13390:12:14"},{"id":2752,"nodeType":"UncheckedBlock","src":"13416:271:14","statements":[{"expression":{"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"13659:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2749,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"13669:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2751,"nodeType":"ExpressionStatement","src":"13659:13:14"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2718,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"13236:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2719,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"13240:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2754,"initializationExpression":{"assignments":[2713],"declarations":[{"constant":false,"id":2713,"mutability":"mutable","name":"i","nameLocation":"13216:1:14","nodeType":"VariableDeclaration","scope":2754,"src":"13208:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2717,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2714,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"13220:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2715,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"13228:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:14","subExpression":{"id":2721,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"13247:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2723,"nodeType":"ExpressionStatement","src":"13245:3:14"},"nodeType":"ForStatement","src":"13203:494:14"},{"expression":{"components":[{"hexValue":"74727565","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"13720:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2670,"id":2758,"nodeType":"Return","src":"13706:21:14"}]},"documentation":{"id":2658,"nodeType":"StructuredDocumentation","src":"12450:227:14","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2760,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:14","nodeType":"FunctionDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"input","nameLocation":"12746:5:14","nodeType":"VariableDeclaration","scope":2760,"src":"12732:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2659,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"begin","nameLocation":"12769:5:14","nodeType":"VariableDeclaration","scope":2760,"src":"12761:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"end","nameLocation":"12792:3:14","nodeType":"VariableDeclaration","scope":2760,"src":"12784:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:14"},"returnParameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"success","nameLocation":"12829:7:14","nodeType":"VariableDeclaration","scope":2760,"src":"12824:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2666,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2669,"mutability":"mutable","name":"value","nameLocation":"12846:5:14","nodeType":"VariableDeclaration","scope":2760,"src":"12838:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:14"},"scope":3174,"src":"12682:1052:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2778,"nodeType":"Block","src":"14032:67:14","statements":[{"expression":{"arguments":[{"id":2769,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"14062:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2773,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"14078:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2771,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:14","typeDescriptions":{}}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:14","memberName":"length","nodeType":"MemberAccess","src":"14072:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2768,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2779,2810],"referencedDeclaration":2810,"src":"14049:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2767,"id":2777,"nodeType":"Return","src":"14042:50:14"}]},"documentation":{"id":2761,"nodeType":"StructuredDocumentation","src":"13740:212:14","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2779,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:14","nodeType":"FunctionDefinition","parameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2763,"mutability":"mutable","name":"input","nameLocation":"13993:5:14","nodeType":"VariableDeclaration","scope":2779,"src":"13979:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2762,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:14"},"returnParameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2779,"src":"14023:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2765,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:14"},"scope":3174,"src":"13957:142:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2809,"nodeType":"Block","src":"14472:165:14","statements":[{"assignments":[2792,2794],"declarations":[{"constant":false,"id":2792,"mutability":"mutable","name":"success","nameLocation":"14488:7:14","nodeType":"VariableDeclaration","scope":2809,"src":"14483:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2791,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2794,"mutability":"mutable","name":"value","nameLocation":"14505:5:14","nodeType":"VariableDeclaration","scope":2809,"src":"14497:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2793,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2800,"initialValue":{"arguments":[{"id":2796,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"14530:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2797,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"14537:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2798,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"14544:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2795,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2831,2935],"referencedDeclaration":2935,"src":"14514:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:14"},{"condition":{"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:14","subExpression":{"id":2801,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"14563:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2806,"nodeType":"IfStatement","src":"14558:50:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2803,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"14579:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2805,"nodeType":"RevertStatement","src":"14572:36:14"}},{"expression":{"id":2807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"14625:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2790,"id":2808,"nodeType":"Return","src":"14618:12:14"}]},"documentation":{"id":2780,"nodeType":"StructuredDocumentation","src":"14105:259:14","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2810,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:14","nodeType":"FunctionDefinition","parameters":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"input","nameLocation":"14405:5:14","nodeType":"VariableDeclaration","scope":2810,"src":"14391:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2781,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2784,"mutability":"mutable","name":"begin","nameLocation":"14420:5:14","nodeType":"VariableDeclaration","scope":2810,"src":"14412:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2786,"mutability":"mutable","name":"end","nameLocation":"14435:3:14","nodeType":"VariableDeclaration","scope":2810,"src":"14427:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:14"},"returnParameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2810,"src":"14463:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2788,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:14"},"scope":3174,"src":"14369:268:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2830,"nodeType":"Block","src":"14944:70:14","statements":[{"expression":{"arguments":[{"id":2821,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"14977:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2825,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"14993:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2823,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:14","typeDescriptions":{}}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:14","memberName":"length","nodeType":"MemberAccess","src":"14987:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2820,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2831,2935],"referencedDeclaration":2935,"src":"14961:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2819,"id":2829,"nodeType":"Return","src":"14954:53:14"}]},"documentation":{"id":2811,"nodeType":"StructuredDocumentation","src":"14643:198:14","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2831,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:14","nodeType":"FunctionDefinition","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"input","nameLocation":"14885:5:14","nodeType":"VariableDeclaration","scope":2831,"src":"14871:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2812,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:14"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"success","nameLocation":"14920:7:14","nodeType":"VariableDeclaration","scope":2831,"src":"14915:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2815,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2818,"mutability":"mutable","name":"value","nameLocation":"14937:5:14","nodeType":"VariableDeclaration","scope":2831,"src":"14929:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:14"},"scope":3174,"src":"14846:168:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2934,"nodeType":"Block","src":"15407:733:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2845,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"15421:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2848,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"15433:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2846,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:14","typeDescriptions":{}}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:14","memberName":"length","nodeType":"MemberAccess","src":"15427:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2852,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"15450:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2853,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"15458:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2863,"nodeType":"IfStatement","src":"15417:72:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2857,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:14","typeDescriptions":{}}},"id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2861,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2844,"id":2862,"nodeType":"Return","src":"15463:26:14"}},{"assignments":[2865],"declarations":[{"constant":false,"id":2865,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:14","nodeType":"VariableDeclaration","scope":2934,"src":"15500:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2864,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2888,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2866,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"15518:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2867,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"15524:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2877,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"15574:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2875,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:14","typeDescriptions":{}}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2879,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"15582:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2874,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"15545:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2872,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:14","typeDescriptions":{}}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2882,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:14","typeDescriptions":{}}},"id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:14"},{"assignments":[2890],"declarations":[{"constant":false,"id":2890,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:14","nodeType":"VariableDeclaration","scope":2934,"src":"15686:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2898,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:14","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2892,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"15716:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"15716:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2899,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"15803:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2900,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"15809:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2902,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"15818:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2932,"nodeType":"Block","src":"16083:51:14","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2926,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:14","typeDescriptions":{}}},"id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2844,"id":2931,"nodeType":"Return","src":"16097:26:14"}]},"id":2933,"nodeType":"IfStatement","src":"15799:335:14","trueBody":{"id":2924,"nodeType":"Block","src":"15834:243:14","statements":[{"assignments":[2905,2907],"declarations":[{"constant":false,"id":2905,"mutability":"mutable","name":"s","nameLocation":"15955:1:14","nodeType":"VariableDeclaration","scope":2924,"src":"15950:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2904,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"v","nameLocation":"15966:1:14","nodeType":"VariableDeclaration","scope":2924,"src":"15958:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2913,"initialValue":{"arguments":[{"id":2909,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"16003:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2910,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"16010:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2911,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"16017:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2908,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"15971:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:14"},{"expression":{"components":[{"id":2914,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"16043:1:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2919,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"16062:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2917,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:14","typeDescriptions":{}}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2915,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:14","typeDescriptions":{}}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2844,"id":2923,"nodeType":"Return","src":"16035:31:14"}]}}]},"documentation":{"id":2832,"nodeType":"StructuredDocumentation","src":"15020:226:14","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2935,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:14","nodeType":"FunctionDefinition","parameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"input","nameLocation":"15299:5:14","nodeType":"VariableDeclaration","scope":2935,"src":"15285:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2833,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2836,"mutability":"mutable","name":"begin","nameLocation":"15322:5:14","nodeType":"VariableDeclaration","scope":2935,"src":"15314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2838,"mutability":"mutable","name":"end","nameLocation":"15345:3:14","nodeType":"VariableDeclaration","scope":2935,"src":"15337:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2837,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:14"},"returnParameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"success","nameLocation":"15383:7:14","nodeType":"VariableDeclaration","scope":2935,"src":"15378:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2840,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"value","nameLocation":"15400:5:14","nodeType":"VariableDeclaration","scope":2935,"src":"15392:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2842,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:14"},"scope":3174,"src":"15251:889:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2994,"nodeType":"Block","src":"16209:461:14","statements":[{"assignments":[2943],"declarations":[{"constant":false,"id":2943,"mutability":"mutable","name":"value","nameLocation":"16225:5:14","nodeType":"VariableDeclaration","scope":2994,"src":"16219:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2942,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2948,"initialValue":{"arguments":[{"id":2946,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"16239:3:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2944,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:14","typeDescriptions":{}}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:14"},{"id":2991,"nodeType":"UncheckedBlock","src":"16403:238:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"16431:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:14","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"16445:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:14","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"16491:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"16505:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:14","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"16552:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"16566:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:14","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2983,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2982,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:14","memberName":"max","nodeType":"MemberAccess","src":"16615:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2941,"id":2987,"nodeType":"Return","src":"16608:22:14"},"id":2988,"nodeType":"IfStatement","src":"16548:82:14","trueBody":{"expression":{"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"16578:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:14","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2981,"nodeType":"ExpressionStatement","src":"16578:11:14"}},"id":2989,"nodeType":"IfStatement","src":"16487:143:14","trueBody":{"expression":{"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"16518:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:14","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2970,"nodeType":"ExpressionStatement","src":"16518:11:14"}},"id":2990,"nodeType":"IfStatement","src":"16427:203:14","trueBody":{"expression":{"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"16457:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2959,"nodeType":"ExpressionStatement","src":"16457:11:14"}}]},{"expression":{"id":2992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"16658:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2941,"id":2993,"nodeType":"Return","src":"16651:12:14"}]},"id":2995,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:14","nodeType":"FunctionDefinition","parameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"chr","nameLocation":"16175:3:14","nodeType":"VariableDeclaration","scope":2995,"src":"16168:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2936,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:14"},"returnParameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2995,"src":"16202:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2939,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:14"},"scope":3174,"src":"16146:524:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3160,"nodeType":"Block","src":"17336:1331:14","statements":[{"assignments":[3004],"declarations":[{"constant":false,"id":3004,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:14","nodeType":"VariableDeclaration","scope":3160,"src":"17346:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3003,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3009,"initialValue":{"arguments":[{"id":3007,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"17374:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3005,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:14","typeDescriptions":{}}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:14"},{"assignments":[3011],"declarations":[{"constant":false,"id":3011,"mutability":"mutable","name":"output","nameLocation":"17403:6:14","nodeType":"VariableDeclaration","scope":3160,"src":"17390:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3010,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3019,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3015,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"17426:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:14","memberName":"length","nodeType":"MemberAccess","src":"17426:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3012,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:14"},{"assignments":[3021],"declarations":[{"constant":false,"id":3021,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:14","nodeType":"VariableDeclaration","scope":3160,"src":"17473:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3023,"initialValue":{"hexValue":"30","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:14"},{"body":{"id":3152,"nodeType":"Block","src":"17548:854:14","statements":[{"assignments":[3035],"declarations":[{"constant":false,"id":3035,"mutability":"mutable","name":"char","nameLocation":"17569:4:14","nodeType":"VariableDeclaration","scope":3152,"src":"17562:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3034,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3043,"initialValue":{"arguments":[{"arguments":[{"id":3039,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"17606:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3040,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"17614:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3038,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"17583:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3036,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:14","typeDescriptions":{}}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:14"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3044,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"17637:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3048,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"17672:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3046,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:14","typeDescriptions":{}}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3053,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3150,"nodeType":"Block","src":"18330:62:14","statements":[{"expression":{"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3143,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"18348:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3146,"indexExpression":{"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:14","subExpression":{"id":3144,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"18355:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3147,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"18373:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3149,"nodeType":"ExpressionStatement","src":"18348:29:14"}]},"id":3151,"nodeType":"IfStatement","src":"17631:761:14","trueBody":{"id":3142,"nodeType":"Block","src":"17687:637:14","statements":[{"expression":{"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3057,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"17705:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3060,"indexExpression":{"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:14","subExpression":{"id":3058,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"17712:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3063,"nodeType":"ExpressionStatement","src":"17705:29:14"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3064,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"17756:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3074,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"17825:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"17894:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3094,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"17963:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:14","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3104,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"18032:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:14","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"18101:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:14","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3124,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"18171:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3135,"nodeType":"IfStatement","src":"18167:143:14","trueBody":{"id":3134,"nodeType":"Block","src":"18185:125:14","statements":[{"expression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3127,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"18263:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3130,"indexExpression":{"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:14","subExpression":{"id":3128,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"18270:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3133,"nodeType":"ExpressionStatement","src":"18263:28:14"}]}},"id":3136,"nodeType":"IfStatement","src":"18097:213:14","trueBody":{"expression":{"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3117,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"18115:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3120,"indexExpression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:14","subExpression":{"id":3118,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"18122:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3123,"nodeType":"ExpressionStatement","src":"18115:29:14"}},"id":3137,"nodeType":"IfStatement","src":"18028:282:14","trueBody":{"expression":{"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3107,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"18046:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3110,"indexExpression":{"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:14","subExpression":{"id":3108,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"18053:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3113,"nodeType":"ExpressionStatement","src":"18046:28:14"}},"id":3138,"nodeType":"IfStatement","src":"17959:351:14","trueBody":{"expression":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3097,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"17977:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3100,"indexExpression":{"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:14","subExpression":{"id":3098,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"17984:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3103,"nodeType":"ExpressionStatement","src":"17977:28:14"}},"id":3139,"nodeType":"IfStatement","src":"17890:420:14","trueBody":{"expression":{"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3087,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"17908:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3090,"indexExpression":{"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:14","subExpression":{"id":3088,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"17915:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3093,"nodeType":"ExpressionStatement","src":"17908:28:14"}},"id":3140,"nodeType":"IfStatement","src":"17821:489:14","trueBody":{"expression":{"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3077,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"17839:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3080,"indexExpression":{"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:14","subExpression":{"id":3078,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"17846:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3083,"nodeType":"ExpressionStatement","src":"17839:28:14"}},"id":3141,"nodeType":"IfStatement","src":"17752:558:14","trueBody":{"expression":{"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3067,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"17770:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3070,"indexExpression":{"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:14","subExpression":{"id":3068,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"17777:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3073,"nodeType":"ExpressionStatement","src":"17770:28:14"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"17524:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3028,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"17528:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:14","memberName":"length","nodeType":"MemberAccess","src":"17528:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3153,"initializationExpression":{"assignments":[3025],"declarations":[{"constant":false,"id":3025,"mutability":"mutable","name":"i","nameLocation":"17521:1:14","nodeType":"VariableDeclaration","scope":3153,"src":"17513:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3026,"nodeType":"VariableDeclarationStatement","src":"17513:9:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:14","subExpression":{"id":3031,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"17545:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3033,"nodeType":"ExpressionStatement","src":"17543:3:14"},"nodeType":"ForStatement","src":"17508:894:14"},{"AST":{"nativeSrc":"18500:129:14","nodeType":"YulBlock","src":"18500:129:14","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:14","nodeType":"YulIdentifier","src":"18521:6:14"},{"name":"outputLength","nativeSrc":"18529:12:14","nodeType":"YulIdentifier","src":"18529:12:14"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:14","nodeType":"YulIdentifier","src":"18514:6:14"},"nativeSrc":"18514:28:14","nodeType":"YulFunctionCall","src":"18514:28:14"},"nativeSrc":"18514:28:14","nodeType":"YulExpressionStatement","src":"18514:28:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:14","nodeType":"YulLiteral","src":"18562:4:14","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:14","nodeType":"YulIdentifier","src":"18572:6:14"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:14","nodeType":"YulLiteral","src":"18584:1:14","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:14","nodeType":"YulLiteral","src":"18591:1:14","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:14","nodeType":"YulIdentifier","src":"18598:12:14"},{"kind":"number","nativeSrc":"18612:2:14","nodeType":"YulLiteral","src":"18612:2:14","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:14","nodeType":"YulIdentifier","src":"18594:3:14"},"nativeSrc":"18594:21:14","nodeType":"YulFunctionCall","src":"18594:21:14"}],"functionName":{"name":"shr","nativeSrc":"18587:3:14","nodeType":"YulIdentifier","src":"18587:3:14"},"nativeSrc":"18587:29:14","nodeType":"YulFunctionCall","src":"18587:29:14"}],"functionName":{"name":"shl","nativeSrc":"18580:3:14","nodeType":"YulIdentifier","src":"18580:3:14"},"nativeSrc":"18580:37:14","nodeType":"YulFunctionCall","src":"18580:37:14"}],"functionName":{"name":"add","nativeSrc":"18568:3:14","nodeType":"YulIdentifier","src":"18568:3:14"},"nativeSrc":"18568:50:14","nodeType":"YulFunctionCall","src":"18568:50:14"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:14","nodeType":"YulIdentifier","src":"18555:6:14"},"nativeSrc":"18555:64:14","nodeType":"YulFunctionCall","src":"18555:64:14"},"nativeSrc":"18555:64:14","nodeType":"YulExpressionStatement","src":"18555:64:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":3011,"isOffset":false,"isSlot":false,"src":"18521:6:14","valueSize":1},{"declaration":3011,"isOffset":false,"isSlot":false,"src":"18572:6:14","valueSize":1},{"declaration":3021,"isOffset":false,"isSlot":false,"src":"18529:12:14","valueSize":1},{"declaration":3021,"isOffset":false,"isSlot":false,"src":"18598:12:14","valueSize":1}],"flags":["memory-safe"],"id":3154,"nodeType":"InlineAssembly","src":"18475:154:14"},{"expression":{"arguments":[{"id":3157,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"18653:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3155,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:14","typeDescriptions":{}}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3002,"id":3159,"nodeType":"Return","src":"18639:21:14"}]},"documentation":{"id":2996,"nodeType":"StructuredDocumentation","src":"16676:576:14","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3161,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:14","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"input","nameLocation":"17291:5:14","nodeType":"VariableDeclaration","scope":3161,"src":"17277:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2997,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:14"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3161,"src":"17321:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3000,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:14"},"scope":3174,"src":"17257:1410:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3172,"nodeType":"Block","src":"19052:225:14","statements":[{"AST":{"nativeSrc":"19201:70:14","nodeType":"YulBlock","src":"19201:70:14","statements":[{"nativeSrc":"19215:46:14","nodeType":"YulAssignment","src":"19215:46:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:14","nodeType":"YulIdentifier","src":"19238:6:14"},{"kind":"number","nativeSrc":"19246:4:14","nodeType":"YulLiteral","src":"19246:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:14","nodeType":"YulIdentifier","src":"19234:3:14"},"nativeSrc":"19234:17:14","nodeType":"YulFunctionCall","src":"19234:17:14"},{"name":"offset","nativeSrc":"19253:6:14","nodeType":"YulIdentifier","src":"19253:6:14"}],"functionName":{"name":"add","nativeSrc":"19230:3:14","nodeType":"YulIdentifier","src":"19230:3:14"},"nativeSrc":"19230:30:14","nodeType":"YulFunctionCall","src":"19230:30:14"}],"functionName":{"name":"mload","nativeSrc":"19224:5:14","nodeType":"YulIdentifier","src":"19224:5:14"},"nativeSrc":"19224:37:14","nodeType":"YulFunctionCall","src":"19224:37:14"},"variableNames":[{"name":"value","nativeSrc":"19215:5:14","nodeType":"YulIdentifier","src":"19215:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3164,"isOffset":false,"isSlot":false,"src":"19238:6:14","valueSize":1},{"declaration":3166,"isOffset":false,"isSlot":false,"src":"19253:6:14","valueSize":1},{"declaration":3169,"isOffset":false,"isSlot":false,"src":"19215:5:14","valueSize":1}],"flags":["memory-safe"],"id":3171,"nodeType":"InlineAssembly","src":"19176:95:14"}]},"documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"18673:268:14","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3173,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:14","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:14","nodeType":"VariableDeclaration","scope":3173,"src":"18978:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3163,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"offset","nameLocation":"19007:6:14","nodeType":"VariableDeclaration","scope":3173,"src":"18999:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:14"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"value","nameLocation":"19045:5:14","nodeType":"VariableDeclaration","scope":3173,"src":"19037:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:14"},"scope":3174,"src":"18946:331:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3175,"src":"297:18982:14","usedErrors":[1832,1835,1838],"usedEvents":[]}],"src":"101:19179:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3522]},"id":3523,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3176,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3177,"nodeType":"StructuredDocumentation","src":"138:205:15","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3522,"linearizedBaseContracts":[3522],"name":"ECDSA","nameLocation":"352:5:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3182,"members":[{"id":3178,"name":"NoError","nameLocation":"392:7:15","nodeType":"EnumValue","src":"392:7:15"},{"id":3179,"name":"InvalidSignature","nameLocation":"409:16:15","nodeType":"EnumValue","src":"409:16:15"},{"id":3180,"name":"InvalidSignatureLength","nameLocation":"435:22:15","nodeType":"EnumValue","src":"435:22:15"},{"id":3181,"name":"InvalidSignatureS","nameLocation":"467:17:15","nodeType":"EnumValue","src":"467:17:15"}],"name":"RecoverError","nameLocation":"369:12:15","nodeType":"EnumDefinition","src":"364:126:15"},{"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"496:63:15","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3185,"name":"ECDSAInvalidSignature","nameLocation":"570:21:15","nodeType":"ErrorDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[],"src":"591:2:15"},"src":"564:30:15"},{"documentation":{"id":3186,"nodeType":"StructuredDocumentation","src":"600:60:15","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3190,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:15","nodeType":"ErrorDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"length","nameLocation":"707:6:15","nodeType":"VariableDeclaration","scope":3190,"src":"699:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:15"},"src":"665:50:15"},{"documentation":{"id":3191,"nodeType":"StructuredDocumentation","src":"721:85:15","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3195,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:15","nodeType":"ErrorDefinition","parameters":{"id":3194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3193,"mutability":"mutable","name":"s","nameLocation":"848:1:15","nodeType":"VariableDeclaration","scope":3195,"src":"840:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:15"},"src":"811:40:15"},{"body":{"id":3247,"nodeType":"Block","src":"2285:622:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3210,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"2299:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:15","memberName":"length","nodeType":"MemberAccess","src":"2299:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3245,"nodeType":"Block","src":"2793:108:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3232,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:15","typeDescriptions":{}}},"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3236,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"2827:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3180,"src":"2827:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3240,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"2872:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:15","memberName":"length","nodeType":"MemberAccess","src":"2872:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:15","typeDescriptions":{}}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3209,"id":3244,"nodeType":"Return","src":"2807:83:15"}]},"id":3246,"nodeType":"IfStatement","src":"2295:606:15","trueBody":{"id":3231,"nodeType":"Block","src":"2323:464:15","statements":[{"assignments":[3215],"declarations":[{"constant":false,"id":3215,"mutability":"mutable","name":"r","nameLocation":"2345:1:15","nodeType":"VariableDeclaration","scope":3231,"src":"2337:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3216,"nodeType":"VariableDeclarationStatement","src":"2337:9:15"},{"assignments":[3218],"declarations":[{"constant":false,"id":3218,"mutability":"mutable","name":"s","nameLocation":"2368:1:15","nodeType":"VariableDeclaration","scope":3231,"src":"2360:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3219,"nodeType":"VariableDeclarationStatement","src":"2360:9:15"},{"assignments":[3221],"declarations":[{"constant":false,"id":3221,"mutability":"mutable","name":"v","nameLocation":"2389:1:15","nodeType":"VariableDeclaration","scope":3231,"src":"2383:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3220,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3222,"nodeType":"VariableDeclarationStatement","src":"2383:7:15"},{"AST":{"nativeSrc":"2560:171:15","nodeType":"YulBlock","src":"2560:171:15","statements":[{"nativeSrc":"2578:32:15","nodeType":"YulAssignment","src":"2578:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:15","nodeType":"YulIdentifier","src":"2593:9:15"},{"kind":"number","nativeSrc":"2604:4:15","nodeType":"YulLiteral","src":"2604:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:15","nodeType":"YulIdentifier","src":"2589:3:15"},"nativeSrc":"2589:20:15","nodeType":"YulFunctionCall","src":"2589:20:15"}],"functionName":{"name":"mload","nativeSrc":"2583:5:15","nodeType":"YulIdentifier","src":"2583:5:15"},"nativeSrc":"2583:27:15","nodeType":"YulFunctionCall","src":"2583:27:15"},"variableNames":[{"name":"r","nativeSrc":"2578:1:15","nodeType":"YulIdentifier","src":"2578:1:15"}]},{"nativeSrc":"2627:32:15","nodeType":"YulAssignment","src":"2627:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:15","nodeType":"YulIdentifier","src":"2642:9:15"},{"kind":"number","nativeSrc":"2653:4:15","nodeType":"YulLiteral","src":"2653:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:15","nodeType":"YulIdentifier","src":"2638:3:15"},"nativeSrc":"2638:20:15","nodeType":"YulFunctionCall","src":"2638:20:15"}],"functionName":{"name":"mload","nativeSrc":"2632:5:15","nodeType":"YulIdentifier","src":"2632:5:15"},"nativeSrc":"2632:27:15","nodeType":"YulFunctionCall","src":"2632:27:15"},"variableNames":[{"name":"s","nativeSrc":"2627:1:15","nodeType":"YulIdentifier","src":"2627:1:15"}]},{"nativeSrc":"2676:41:15","nodeType":"YulAssignment","src":"2676:41:15","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:15","nodeType":"YulLiteral","src":"2686:1:15","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:15","nodeType":"YulIdentifier","src":"2699:9:15"},{"kind":"number","nativeSrc":"2710:4:15","nodeType":"YulLiteral","src":"2710:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:15","nodeType":"YulIdentifier","src":"2695:3:15"},"nativeSrc":"2695:20:15","nodeType":"YulFunctionCall","src":"2695:20:15"}],"functionName":{"name":"mload","nativeSrc":"2689:5:15","nodeType":"YulIdentifier","src":"2689:5:15"},"nativeSrc":"2689:27:15","nodeType":"YulFunctionCall","src":"2689:27:15"}],"functionName":{"name":"byte","nativeSrc":"2681:4:15","nodeType":"YulIdentifier","src":"2681:4:15"},"nativeSrc":"2681:36:15","nodeType":"YulFunctionCall","src":"2681:36:15"},"variableNames":[{"name":"v","nativeSrc":"2676:1:15","nodeType":"YulIdentifier","src":"2676:1:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3215,"isOffset":false,"isSlot":false,"src":"2578:1:15","valueSize":1},{"declaration":3218,"isOffset":false,"isSlot":false,"src":"2627:1:15","valueSize":1},{"declaration":3200,"isOffset":false,"isSlot":false,"src":"2593:9:15","valueSize":1},{"declaration":3200,"isOffset":false,"isSlot":false,"src":"2642:9:15","valueSize":1},{"declaration":3200,"isOffset":false,"isSlot":false,"src":"2699:9:15","valueSize":1},{"declaration":3221,"isOffset":false,"isSlot":false,"src":"2676:1:15","valueSize":1}],"flags":["memory-safe"],"id":3223,"nodeType":"InlineAssembly","src":"2535:196:15"},{"expression":{"arguments":[{"id":3225,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"2762:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3226,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"2768:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3227,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"2771:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3228,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"2774:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3224,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3248,3328,3436],"referencedDeclaration":3436,"src":"2751:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3209,"id":3230,"nodeType":"Return","src":"2744:32:15"}]}}]},"documentation":{"id":3196,"nodeType":"StructuredDocumentation","src":"857:1267:15","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3248,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:15","nodeType":"FunctionDefinition","parameters":{"id":3201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"hash","nameLocation":"2166:4:15","nodeType":"VariableDeclaration","scope":3248,"src":"2158:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"signature","nameLocation":"2193:9:15","nodeType":"VariableDeclaration","scope":3248,"src":"2180:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3199,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:15"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:15","nodeType":"VariableDeclaration","scope":3248,"src":"2232:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3202,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"err","nameLocation":"2264:3:15","nodeType":"VariableDeclaration","scope":3248,"src":"2251:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3205,"nodeType":"UserDefinedTypeName","pathNode":{"id":3204,"name":"RecoverError","nameLocations":["2251:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3182,"src":"2251:12:15"},"referencedDeclaration":3182,"src":"2251:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3208,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:15","nodeType":"VariableDeclaration","scope":3248,"src":"2269:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:15"},"scope":3522,"src":"2129:778:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3277,"nodeType":"Block","src":"3801:168:15","statements":[{"assignments":[3259,3262,3264],"declarations":[{"constant":false,"id":3259,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:15","nodeType":"VariableDeclaration","scope":3277,"src":"3812:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3258,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"error","nameLocation":"3844:5:15","nodeType":"VariableDeclaration","scope":3277,"src":"3831:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3261,"nodeType":"UserDefinedTypeName","pathNode":{"id":3260,"name":"RecoverError","nameLocations":["3831:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3182,"src":"3831:12:15"},"referencedDeclaration":3182,"src":"3831:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:15","nodeType":"VariableDeclaration","scope":3277,"src":"3851:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3269,"initialValue":{"arguments":[{"id":3266,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"3882:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3267,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"3888:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3265,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3248,3328,3436],"referencedDeclaration":3248,"src":"3871:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:15"},{"expression":{"arguments":[{"id":3271,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"3920:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},{"id":3272,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"3927:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3270,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"3908:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3182_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3274,"nodeType":"ExpressionStatement","src":"3908:28:15"},{"expression":{"id":3275,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"3953:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3257,"id":3276,"nodeType":"Return","src":"3946:16:15"}]},"documentation":{"id":3249,"nodeType":"StructuredDocumentation","src":"2913:796:15","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3278,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:15","nodeType":"FunctionDefinition","parameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"hash","nameLocation":"3739:4:15","nodeType":"VariableDeclaration","scope":3278,"src":"3731:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3253,"mutability":"mutable","name":"signature","nameLocation":"3758:9:15","nodeType":"VariableDeclaration","scope":3278,"src":"3745:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3252,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:15"},"returnParameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3278,"src":"3792:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3255,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:15"},"scope":3522,"src":"3714:255:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3327,"nodeType":"Block","src":"4348:342:15","statements":[{"id":3326,"nodeType":"UncheckedBlock","src":"4358:326:15","statements":[{"assignments":[3296],"declarations":[{"constant":false,"id":3296,"mutability":"mutable","name":"s","nameLocation":"4390:1:15","nodeType":"VariableDeclaration","scope":3326,"src":"4382:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3303,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3297,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"4394:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:15","typeDescriptions":{}}},"id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:15"},{"assignments":[3305],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"v","nameLocation":"4591:1:15","nodeType":"VariableDeclaration","scope":3326,"src":"4585:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3304,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3318,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3310,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"4610:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3308,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:15","typeDescriptions":{}}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3306,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:15","typeDescriptions":{}}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:15"},{"expression":{"arguments":[{"id":3320,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"4659:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3321,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"4665:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3322,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"4668:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3323,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"4671:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3319,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3248,3328,3436],"referencedDeclaration":3436,"src":"4648:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3294,"id":3325,"nodeType":"Return","src":"4641:32:15"}]}]},"documentation":{"id":3279,"nodeType":"StructuredDocumentation","src":"3975:205:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3328,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:15","nodeType":"FunctionDefinition","parameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"hash","nameLocation":"4222:4:15","nodeType":"VariableDeclaration","scope":3328,"src":"4214:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3283,"mutability":"mutable","name":"r","nameLocation":"4244:1:15","nodeType":"VariableDeclaration","scope":3328,"src":"4236:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3285,"mutability":"mutable","name":"vs","nameLocation":"4263:2:15","nodeType":"VariableDeclaration","scope":3328,"src":"4255:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:15"},"returnParameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3288,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:15","nodeType":"VariableDeclaration","scope":3328,"src":"4295:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3287,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3291,"mutability":"mutable","name":"err","nameLocation":"4327:3:15","nodeType":"VariableDeclaration","scope":3328,"src":"4314:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3290,"nodeType":"UserDefinedTypeName","pathNode":{"id":3289,"name":"RecoverError","nameLocations":["4314:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3182,"src":"4314:12:15"},"referencedDeclaration":3182,"src":"4314:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:15","nodeType":"VariableDeclaration","scope":3328,"src":"4332:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:15"},"scope":3522,"src":"4185:505:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3360,"nodeType":"Block","src":"4903:164:15","statements":[{"assignments":[3341,3344,3346],"declarations":[{"constant":false,"id":3341,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:15","nodeType":"VariableDeclaration","scope":3360,"src":"4914:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3340,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"error","nameLocation":"4946:5:15","nodeType":"VariableDeclaration","scope":3360,"src":"4933:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3343,"nodeType":"UserDefinedTypeName","pathNode":{"id":3342,"name":"RecoverError","nameLocations":["4933:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3182,"src":"4933:12:15"},"referencedDeclaration":3182,"src":"4933:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3346,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:15","nodeType":"VariableDeclaration","scope":3360,"src":"4953:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3352,"initialValue":{"arguments":[{"id":3348,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"4984:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3349,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"4990:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3350,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"4993:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3347,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3248,3328,3436],"referencedDeclaration":3328,"src":"4973:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:15"},{"expression":{"arguments":[{"id":3354,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"5018:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},{"id":3355,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"5025:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3353,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"5006:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3182_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3357,"nodeType":"ExpressionStatement","src":"5006:28:15"},{"expression":{"id":3358,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"5051:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3339,"id":3359,"nodeType":"Return","src":"5044:16:15"}]},"documentation":{"id":3329,"nodeType":"StructuredDocumentation","src":"4696:116:15","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3361,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:15","nodeType":"FunctionDefinition","parameters":{"id":3336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"hash","nameLocation":"4842:4:15","nodeType":"VariableDeclaration","scope":3361,"src":"4834:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3333,"mutability":"mutable","name":"r","nameLocation":"4856:1:15","nodeType":"VariableDeclaration","scope":3361,"src":"4848:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"vs","nameLocation":"4867:2:15","nodeType":"VariableDeclaration","scope":3361,"src":"4859:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:15"},"returnParameters":{"id":3339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3361,"src":"4894:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3337,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:15"},"scope":3522,"src":"4817:250:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3435,"nodeType":"Block","src":"5382:1372:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3382,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"6278:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3380,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:15","typeDescriptions":{}}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3396,"nodeType":"IfStatement","src":"6266:164:15","trueBody":{"id":3395,"nodeType":"Block","src":"6351:79:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3386,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:15","typeDescriptions":{}}},"id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3390,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"6385:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3181,"src":"6385:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},{"id":3392,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"6417:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3379,"id":3394,"nodeType":"Return","src":"6365:54:15"}]}},{"assignments":[3398],"declarations":[{"constant":false,"id":3398,"mutability":"mutable","name":"signer","nameLocation":"6532:6:15","nodeType":"VariableDeclaration","scope":3435,"src":"6524:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3397,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3405,"initialValue":{"arguments":[{"id":3400,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"6551:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3401,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"6557:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3402,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"6560:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3403,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"6563:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3399,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:15","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3406,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"6579:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3407,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:15","typeDescriptions":{}}},"id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3425,"nodeType":"IfStatement","src":"6575:113:15","trueBody":{"id":3424,"nodeType":"Block","src":"6601:87:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3412,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:15","typeDescriptions":{}}},"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3416,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"6635:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"6635:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:15","typeDescriptions":{}}},"id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3379,"id":3423,"nodeType":"Return","src":"6615:62:15"}]}},{"expression":{"components":[{"id":3426,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"6706:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3427,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"6714:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"6714:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:15","typeDescriptions":{}}},"id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3379,"id":3434,"nodeType":"Return","src":"6698:49:15"}]},"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"5073:125:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3436,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:15","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"hash","nameLocation":"5240:4:15","nodeType":"VariableDeclaration","scope":3436,"src":"5232:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3366,"mutability":"mutable","name":"v","nameLocation":"5260:1:15","nodeType":"VariableDeclaration","scope":3436,"src":"5254:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3365,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3368,"mutability":"mutable","name":"r","nameLocation":"5279:1:15","nodeType":"VariableDeclaration","scope":3436,"src":"5271:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"s","nameLocation":"5298:1:15","nodeType":"VariableDeclaration","scope":3436,"src":"5290:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:15"},"returnParameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:15","nodeType":"VariableDeclaration","scope":3436,"src":"5329:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3372,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3376,"mutability":"mutable","name":"err","nameLocation":"5361:3:15","nodeType":"VariableDeclaration","scope":3436,"src":"5348:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3375,"nodeType":"UserDefinedTypeName","pathNode":{"id":3374,"name":"RecoverError","nameLocations":["5348:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3182,"src":"5348:12:15"},"referencedDeclaration":3182,"src":"5348:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3378,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:15","nodeType":"VariableDeclaration","scope":3436,"src":"5366:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:15"},"scope":3522,"src":"5203:1551:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3471,"nodeType":"Block","src":"6981:166:15","statements":[{"assignments":[3451,3454,3456],"declarations":[{"constant":false,"id":3451,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:15","nodeType":"VariableDeclaration","scope":3471,"src":"6992:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3450,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"error","nameLocation":"7024:5:15","nodeType":"VariableDeclaration","scope":3471,"src":"7011:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3453,"nodeType":"UserDefinedTypeName","pathNode":{"id":3452,"name":"RecoverError","nameLocations":["7011:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3182,"src":"7011:12:15"},"referencedDeclaration":3182,"src":"7011:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3456,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:15","nodeType":"VariableDeclaration","scope":3471,"src":"7031:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3463,"initialValue":{"arguments":[{"id":3458,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"7062:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3459,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"7068:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3460,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"7071:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3461,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"7074:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3457,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3248,3328,3436],"referencedDeclaration":3436,"src":"7051:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3182_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:15"},{"expression":{"arguments":[{"id":3465,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"7098:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},{"id":3466,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"7105:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3464,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"7086:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3182_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3468,"nodeType":"ExpressionStatement","src":"7086:28:15"},{"expression":{"id":3469,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"7131:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3449,"id":3470,"nodeType":"Return","src":"7124:16:15"}]},"documentation":{"id":3437,"nodeType":"StructuredDocumentation","src":"6760:122:15","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3472,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:15","nodeType":"FunctionDefinition","parameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"hash","nameLocation":"6912:4:15","nodeType":"VariableDeclaration","scope":3472,"src":"6904:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3441,"mutability":"mutable","name":"v","nameLocation":"6924:1:15","nodeType":"VariableDeclaration","scope":3472,"src":"6918:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3440,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3443,"mutability":"mutable","name":"r","nameLocation":"6935:1:15","nodeType":"VariableDeclaration","scope":3472,"src":"6927:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3445,"mutability":"mutable","name":"s","nameLocation":"6946:1:15","nodeType":"VariableDeclaration","scope":3472,"src":"6938:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:15"},"returnParameters":{"id":3449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3472,"src":"6972:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3447,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:15"},"scope":3522,"src":"6887:260:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3520,"nodeType":"Block","src":"7352:460:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3481,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"7366:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3482,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"7375:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"7375:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"7462:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3488,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"7471:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"7471:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3495,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"7567:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3496,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"7576:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3180,"src":"7576:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3507,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"7701:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3508,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"7710:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3182_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3181,"src":"7710:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3516,"nodeType":"IfStatement","src":"7697:109:15","trueBody":{"id":3515,"nodeType":"Block","src":"7742:64:15","statements":[{"errorCall":{"arguments":[{"id":3512,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"7786:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3511,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"7763:22:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3514,"nodeType":"RevertStatement","src":"7756:39:15"}]}},"id":3517,"nodeType":"IfStatement","src":"7563:243:15","trueBody":{"id":3506,"nodeType":"Block","src":"7613:78:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3502,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"7670:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:15","typeDescriptions":{}}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3499,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"7634:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3505,"nodeType":"RevertStatement","src":"7627:53:15"}]}},"id":3518,"nodeType":"IfStatement","src":"7458:348:15","trueBody":{"id":3494,"nodeType":"Block","src":"7502:55:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3491,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"7523:21:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3493,"nodeType":"RevertStatement","src":"7516:30:15"}]}},"id":3519,"nodeType":"IfStatement","src":"7362:444:15","trueBody":{"id":3486,"nodeType":"Block","src":"7397:55:15","statements":[{"functionReturnParameters":3480,"id":3485,"nodeType":"Return","src":"7411:7:15"}]}}]},"documentation":{"id":3473,"nodeType":"StructuredDocumentation","src":"7153:122:15","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3521,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:15","nodeType":"FunctionDefinition","parameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"error","nameLocation":"7314:5:15","nodeType":"VariableDeclaration","scope":3521,"src":"7301:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3475,"nodeType":"UserDefinedTypeName","pathNode":{"id":3474,"name":"RecoverError","nameLocations":["7301:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3182,"src":"7301:12:15"},"referencedDeclaration":3182,"src":"7301:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3182","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:15","nodeType":"VariableDeclaration","scope":3521,"src":"7321:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:15"},"returnParameters":{"id":3480,"nodeType":"ParameterList","parameters":[],"src":"7352:0:15"},"scope":3522,"src":"7280:532:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3523,"src":"344:7470:15","usedErrors":[3185,3190,3195],"usedEvents":[]}],"src":"112:7703:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3608],"Strings":[3174]},"id":3609,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3524,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3609,"sourceUnit":3175,"src":"149:39:16","symbolAliases":[{"foreign":{"id":3525,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"157:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3527,"nodeType":"StructuredDocumentation","src":"190:330:16","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3608,"linearizedBaseContracts":[3608],"name":"MessageHashUtils","nameLocation":"529:16:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3536,"nodeType":"Block","src":"1339:341:16","statements":[{"AST":{"nativeSrc":"1374:300:16","nodeType":"YulBlock","src":"1374:300:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:16","nodeType":"YulLiteral","src":"1395:4:16","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:16","nodeType":"YulLiteral","src":"1401:34:16","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:16","nodeType":"YulIdentifier","src":"1388:6:16"},"nativeSrc":"1388:48:16","nodeType":"YulFunctionCall","src":"1388:48:16"},"nativeSrc":"1388:48:16","nodeType":"YulExpressionStatement","src":"1388:48:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:16","nodeType":"YulLiteral","src":"1497:4:16","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:16","nodeType":"YulIdentifier","src":"1503:11:16"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:16","nodeType":"YulIdentifier","src":"1490:6:16"},"nativeSrc":"1490:25:16","nodeType":"YulFunctionCall","src":"1490:25:16"},"nativeSrc":"1490:25:16","nodeType":"YulExpressionStatement","src":"1490:25:16"},{"nativeSrc":"1569:31:16","nodeType":"YulAssignment","src":"1569:31:16","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:16","nodeType":"YulLiteral","src":"1589:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:16","nodeType":"YulLiteral","src":"1595:4:16","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:16","nodeType":"YulIdentifier","src":"1579:9:16"},"nativeSrc":"1579:21:16","nodeType":"YulFunctionCall","src":"1579:21:16"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:16","nodeType":"YulIdentifier","src":"1569:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3533,"isOffset":false,"isSlot":false,"src":"1569:6:16","valueSize":1},{"declaration":3530,"isOffset":false,"isSlot":false,"src":"1503:11:16","valueSize":1}],"flags":["memory-safe"],"id":3535,"nodeType":"InlineAssembly","src":"1349:325:16"}]},"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"552:690:16","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3537,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:16","nodeType":"FunctionDefinition","parameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:16","nodeType":"VariableDeclaration","scope":3537,"src":"1279:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:16"},"returnParameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"digest","nameLocation":"1331:6:16","nodeType":"VariableDeclaration","scope":3537,"src":"1323:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:16"},"scope":3608,"src":"1247:433:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3562,"nodeType":"Block","src":"2257:143:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3554,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"2366:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:16","memberName":"length","nodeType":"MemberAccess","src":"2366:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3552,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"2349:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3174_$","typeString":"type(library Strings)"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:16","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1886,"src":"2349:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3550,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:16","typeDescriptions":{}}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3558,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"2384:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3546,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:16","typeDescriptions":{}}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:16","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:16","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3545,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3544,"id":3561,"nodeType":"Return","src":"2267:126:16"}]},"documentation":{"id":3538,"nodeType":"StructuredDocumentation","src":"1686:480:16","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3563,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:16","nodeType":"FunctionDefinition","parameters":{"id":3541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3540,"mutability":"mutable","name":"message","nameLocation":"2216:7:16","nodeType":"VariableDeclaration","scope":3563,"src":"2203:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3539,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:16"},"returnParameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3563,"src":"2248:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:16"},"scope":3608,"src":"2171:229:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3582,"nodeType":"Block","src":"2854:80:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3577,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"2910:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3578,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"2921:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3574,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3573,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3572,"id":3581,"nodeType":"Return","src":"2864:63:16"}]},"documentation":{"id":3564,"nodeType":"StructuredDocumentation","src":"2406:332:16","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3583,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:16","nodeType":"FunctionDefinition","parameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"validator","nameLocation":"2792:9:16","nodeType":"VariableDeclaration","scope":3583,"src":"2784:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3565,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"data","nameLocation":"2816:4:16","nodeType":"VariableDeclaration","scope":3583,"src":"2803:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3567,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:16"},"returnParameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3583,"src":"2845:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:16"},"scope":3608,"src":"2743:191:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3594,"nodeType":"Block","src":"3216:216:16","statements":[{"AST":{"nativeSrc":"3251:175:16","nodeType":"YulBlock","src":"3251:175:16","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:16","nodeType":"YulLiteral","src":"3272:4:16","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:16","nodeType":"YulLiteral","src":"3278:10:16","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:16","nodeType":"YulIdentifier","src":"3265:6:16"},"nativeSrc":"3265:24:16","nodeType":"YulFunctionCall","src":"3265:24:16"},"nativeSrc":"3265:24:16","nodeType":"YulExpressionStatement","src":"3265:24:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:16","nodeType":"YulLiteral","src":"3309:4:16","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:16","nodeType":"YulLiteral","src":"3319:2:16","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:16","nodeType":"YulIdentifier","src":"3323:9:16"}],"functionName":{"name":"shl","nativeSrc":"3315:3:16","nodeType":"YulIdentifier","src":"3315:3:16"},"nativeSrc":"3315:18:16","nodeType":"YulFunctionCall","src":"3315:18:16"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:16","nodeType":"YulIdentifier","src":"3302:6:16"},"nativeSrc":"3302:32:16","nodeType":"YulFunctionCall","src":"3302:32:16"},"nativeSrc":"3302:32:16","nodeType":"YulExpressionStatement","src":"3302:32:16"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:16","nodeType":"YulLiteral","src":"3354:4:16","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:16","nodeType":"YulIdentifier","src":"3360:11:16"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:16","nodeType":"YulIdentifier","src":"3347:6:16"},"nativeSrc":"3347:25:16","nodeType":"YulFunctionCall","src":"3347:25:16"},"nativeSrc":"3347:25:16","nodeType":"YulExpressionStatement","src":"3347:25:16"},{"nativeSrc":"3385:31:16","nodeType":"YulAssignment","src":"3385:31:16","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:16","nodeType":"YulLiteral","src":"3405:4:16","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:16","nodeType":"YulLiteral","src":"3411:4:16","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:16","nodeType":"YulIdentifier","src":"3395:9:16"},"nativeSrc":"3395:21:16","nodeType":"YulFunctionCall","src":"3395:21:16"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:16","nodeType":"YulIdentifier","src":"3385:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3591,"isOffset":false,"isSlot":false,"src":"3385:6:16","valueSize":1},{"declaration":3588,"isOffset":false,"isSlot":false,"src":"3360:11:16","valueSize":1},{"declaration":3586,"isOffset":false,"isSlot":false,"src":"3323:9:16","valueSize":1}],"flags":["memory-safe"],"id":3593,"nodeType":"InlineAssembly","src":"3226:200:16"}]},"documentation":{"id":3584,"nodeType":"StructuredDocumentation","src":"2940:129:16","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":3595,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:16","nodeType":"FunctionDefinition","parameters":{"id":3589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"validator","nameLocation":"3132:9:16","nodeType":"VariableDeclaration","scope":3595,"src":"3124:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3585,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3588,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:16","nodeType":"VariableDeclaration","scope":3595,"src":"3151:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:16"},"returnParameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"digest","nameLocation":"3208:6:16","nodeType":"VariableDeclaration","scope":3595,"src":"3200:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:16"},"scope":3608,"src":"3074:358:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3606,"nodeType":"Block","src":"3983:265:16","statements":[{"AST":{"nativeSrc":"4018:224:16","nodeType":"YulBlock","src":"4018:224:16","statements":[{"nativeSrc":"4032:22:16","nodeType":"YulVariableDeclaration","src":"4032:22:16","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:16","nodeType":"YulLiteral","src":"4049:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:16","nodeType":"YulIdentifier","src":"4043:5:16"},"nativeSrc":"4043:11:16","nodeType":"YulFunctionCall","src":"4043:11:16"},"variables":[{"name":"ptr","nativeSrc":"4036:3:16","nodeType":"YulTypedName","src":"4036:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:16","nodeType":"YulIdentifier","src":"4074:3:16"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:16","nodeType":"YulLiteral","src":"4079:10:16","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:16","nodeType":"YulIdentifier","src":"4067:6:16"},"nativeSrc":"4067:23:16","nodeType":"YulFunctionCall","src":"4067:23:16"},"nativeSrc":"4067:23:16","nodeType":"YulExpressionStatement","src":"4067:23:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:16","nodeType":"YulIdentifier","src":"4114:3:16"},{"kind":"number","nativeSrc":"4119:4:16","nodeType":"YulLiteral","src":"4119:4:16","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:16","nodeType":"YulIdentifier","src":"4110:3:16"},"nativeSrc":"4110:14:16","nodeType":"YulFunctionCall","src":"4110:14:16"},{"name":"domainSeparator","nativeSrc":"4126:15:16","nodeType":"YulIdentifier","src":"4126:15:16"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:16","nodeType":"YulIdentifier","src":"4103:6:16"},"nativeSrc":"4103:39:16","nodeType":"YulFunctionCall","src":"4103:39:16"},"nativeSrc":"4103:39:16","nodeType":"YulExpressionStatement","src":"4103:39:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:16","nodeType":"YulIdentifier","src":"4166:3:16"},{"kind":"number","nativeSrc":"4171:4:16","nodeType":"YulLiteral","src":"4171:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:16","nodeType":"YulIdentifier","src":"4162:3:16"},"nativeSrc":"4162:14:16","nodeType":"YulFunctionCall","src":"4162:14:16"},{"name":"structHash","nativeSrc":"4178:10:16","nodeType":"YulIdentifier","src":"4178:10:16"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:16","nodeType":"YulIdentifier","src":"4155:6:16"},"nativeSrc":"4155:34:16","nodeType":"YulFunctionCall","src":"4155:34:16"},"nativeSrc":"4155:34:16","nodeType":"YulExpressionStatement","src":"4155:34:16"},{"nativeSrc":"4202:30:16","nodeType":"YulAssignment","src":"4202:30:16","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:16","nodeType":"YulIdentifier","src":"4222:3:16"},{"kind":"number","nativeSrc":"4227:4:16","nodeType":"YulLiteral","src":"4227:4:16","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:16","nodeType":"YulIdentifier","src":"4212:9:16"},"nativeSrc":"4212:20:16","nodeType":"YulFunctionCall","src":"4212:20:16"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:16","nodeType":"YulIdentifier","src":"4202:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3603,"isOffset":false,"isSlot":false,"src":"4202:6:16","valueSize":1},{"declaration":3598,"isOffset":false,"isSlot":false,"src":"4126:15:16","valueSize":1},{"declaration":3600,"isOffset":false,"isSlot":false,"src":"4178:10:16","valueSize":1}],"flags":["memory-safe"],"id":3605,"nodeType":"InlineAssembly","src":"3993:249:16"}]},"documentation":{"id":3596,"nodeType":"StructuredDocumentation","src":"3438:431:16","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3607,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:16","nodeType":"FunctionDefinition","parameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:16","nodeType":"VariableDeclaration","scope":3607,"src":"3899:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3600,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:16","nodeType":"VariableDeclaration","scope":3607,"src":"3924:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:16"},"returnParameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"digest","nameLocation":"3975:6:16","nodeType":"VariableDeclaration","scope":3607,"src":"3967:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:16"},"scope":3608,"src":"3874:374:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3609,"src":"521:3729:16","usedErrors":[],"usedEvents":[]}],"src":"123:4128:16"},"id":16},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5229],"Panic":[1648],"SafeCast":[6994]},"id":5230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3610,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5230,"sourceUnit":1649,"src":"129:35:17","symbolAliases":[{"foreign":{"id":3611,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"137:5:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3614,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5230,"sourceUnit":6995,"src":"165:40:17","symbolAliases":[{"foreign":{"id":3613,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"173:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3615,"nodeType":"StructuredDocumentation","src":"207:73:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5229,"linearizedBaseContracts":[5229],"name":"Math","nameLocation":"289:4:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3620,"members":[{"id":3616,"name":"Floor","nameLocation":"324:5:17","nodeType":"EnumValue","src":"324:5:17"},{"id":3617,"name":"Ceil","nameLocation":"367:4:17","nodeType":"EnumValue","src":"367:4:17"},{"id":3618,"name":"Trunc","nameLocation":"409:5:17","nodeType":"EnumValue","src":"409:5:17"},{"id":3619,"name":"Expand","nameLocation":"439:6:17","nodeType":"EnumValue","src":"439:6:17"}],"name":"Rounding","nameLocation":"305:8:17","nodeType":"EnumDefinition","src":"300:169:17"},{"body":{"id":3633,"nodeType":"Block","src":"731:112:17","statements":[{"AST":{"nativeSrc":"766:71:17","nodeType":"YulBlock","src":"766:71:17","statements":[{"nativeSrc":"780:16:17","nodeType":"YulAssignment","src":"780:16:17","value":{"arguments":[{"name":"a","nativeSrc":"791:1:17","nodeType":"YulIdentifier","src":"791:1:17"},{"name":"b","nativeSrc":"794:1:17","nodeType":"YulIdentifier","src":"794:1:17"}],"functionName":{"name":"add","nativeSrc":"787:3:17","nodeType":"YulIdentifier","src":"787:3:17"},"nativeSrc":"787:9:17","nodeType":"YulFunctionCall","src":"787:9:17"},"variableNames":[{"name":"low","nativeSrc":"780:3:17","nodeType":"YulIdentifier","src":"780:3:17"}]},{"nativeSrc":"809:18:17","nodeType":"YulAssignment","src":"809:18:17","value":{"arguments":[{"name":"low","nativeSrc":"820:3:17","nodeType":"YulIdentifier","src":"820:3:17"},{"name":"a","nativeSrc":"825:1:17","nodeType":"YulIdentifier","src":"825:1:17"}],"functionName":{"name":"lt","nativeSrc":"817:2:17","nodeType":"YulIdentifier","src":"817:2:17"},"nativeSrc":"817:10:17","nodeType":"YulFunctionCall","src":"817:10:17"},"variableNames":[{"name":"high","nativeSrc":"809:4:17","nodeType":"YulIdentifier","src":"809:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3623,"isOffset":false,"isSlot":false,"src":"791:1:17","valueSize":1},{"declaration":3623,"isOffset":false,"isSlot":false,"src":"825:1:17","valueSize":1},{"declaration":3625,"isOffset":false,"isSlot":false,"src":"794:1:17","valueSize":1},{"declaration":3628,"isOffset":false,"isSlot":false,"src":"809:4:17","valueSize":1},{"declaration":3630,"isOffset":false,"isSlot":false,"src":"780:3:17","valueSize":1},{"declaration":3630,"isOffset":false,"isSlot":false,"src":"820:3:17","valueSize":1}],"flags":["memory-safe"],"id":3632,"nodeType":"InlineAssembly","src":"741:96:17"}]},"documentation":{"id":3621,"nodeType":"StructuredDocumentation","src":"475:163:17","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3634,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:17","nodeType":"FunctionDefinition","parameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"mutability":"mutable","name":"a","nameLocation":"667:1:17","nodeType":"VariableDeclaration","scope":3634,"src":"659:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3622,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"b","nameLocation":"678:1:17","nodeType":"VariableDeclaration","scope":3634,"src":"670:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:17"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"high","nameLocation":"712:4:17","nodeType":"VariableDeclaration","scope":3634,"src":"704:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"low","nameLocation":"726:3:17","nodeType":"VariableDeclaration","scope":3634,"src":"718:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:17"},"scope":5229,"src":"643:200:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3647,"nodeType":"Block","src":"1115:462:17","statements":[{"AST":{"nativeSrc":"1437:134:17","nodeType":"YulBlock","src":"1437:134:17","statements":[{"nativeSrc":"1451:30:17","nodeType":"YulVariableDeclaration","src":"1451:30:17","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:17","nodeType":"YulIdentifier","src":"1468:1:17"},{"name":"b","nativeSrc":"1471:1:17","nodeType":"YulIdentifier","src":"1471:1:17"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:17","nodeType":"YulLiteral","src":"1478:1:17","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:17","nodeType":"YulIdentifier","src":"1474:3:17"},"nativeSrc":"1474:6:17","nodeType":"YulFunctionCall","src":"1474:6:17"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:17","nodeType":"YulIdentifier","src":"1461:6:17"},"nativeSrc":"1461:20:17","nodeType":"YulFunctionCall","src":"1461:20:17"},"variables":[{"name":"mm","nativeSrc":"1455:2:17","nodeType":"YulTypedName","src":"1455:2:17","type":""}]},{"nativeSrc":"1494:16:17","nodeType":"YulAssignment","src":"1494:16:17","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:17","nodeType":"YulIdentifier","src":"1505:1:17"},{"name":"b","nativeSrc":"1508:1:17","nodeType":"YulIdentifier","src":"1508:1:17"}],"functionName":{"name":"mul","nativeSrc":"1501:3:17","nodeType":"YulIdentifier","src":"1501:3:17"},"nativeSrc":"1501:9:17","nodeType":"YulFunctionCall","src":"1501:9:17"},"variableNames":[{"name":"low","nativeSrc":"1494:3:17","nodeType":"YulIdentifier","src":"1494:3:17"}]},{"nativeSrc":"1523:38:17","nodeType":"YulAssignment","src":"1523:38:17","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:17","nodeType":"YulIdentifier","src":"1539:2:17"},{"name":"low","nativeSrc":"1543:3:17","nodeType":"YulIdentifier","src":"1543:3:17"}],"functionName":{"name":"sub","nativeSrc":"1535:3:17","nodeType":"YulIdentifier","src":"1535:3:17"},"nativeSrc":"1535:12:17","nodeType":"YulFunctionCall","src":"1535:12:17"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:17","nodeType":"YulIdentifier","src":"1552:2:17"},{"name":"low","nativeSrc":"1556:3:17","nodeType":"YulIdentifier","src":"1556:3:17"}],"functionName":{"name":"lt","nativeSrc":"1549:2:17","nodeType":"YulIdentifier","src":"1549:2:17"},"nativeSrc":"1549:11:17","nodeType":"YulFunctionCall","src":"1549:11:17"}],"functionName":{"name":"sub","nativeSrc":"1531:3:17","nodeType":"YulIdentifier","src":"1531:3:17"},"nativeSrc":"1531:30:17","nodeType":"YulFunctionCall","src":"1531:30:17"},"variableNames":[{"name":"high","nativeSrc":"1523:4:17","nodeType":"YulIdentifier","src":"1523:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3637,"isOffset":false,"isSlot":false,"src":"1468:1:17","valueSize":1},{"declaration":3637,"isOffset":false,"isSlot":false,"src":"1505:1:17","valueSize":1},{"declaration":3639,"isOffset":false,"isSlot":false,"src":"1471:1:17","valueSize":1},{"declaration":3639,"isOffset":false,"isSlot":false,"src":"1508:1:17","valueSize":1},{"declaration":3642,"isOffset":false,"isSlot":false,"src":"1523:4:17","valueSize":1},{"declaration":3644,"isOffset":false,"isSlot":false,"src":"1494:3:17","valueSize":1},{"declaration":3644,"isOffset":false,"isSlot":false,"src":"1543:3:17","valueSize":1},{"declaration":3644,"isOffset":false,"isSlot":false,"src":"1556:3:17","valueSize":1}],"flags":["memory-safe"],"id":3646,"nodeType":"InlineAssembly","src":"1412:159:17"}]},"documentation":{"id":3635,"nodeType":"StructuredDocumentation","src":"849:173:17","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3648,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:17","nodeType":"FunctionDefinition","parameters":{"id":3640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"a","nameLocation":"1051:1:17","nodeType":"VariableDeclaration","scope":3648,"src":"1043:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3639,"mutability":"mutable","name":"b","nameLocation":"1062:1:17","nodeType":"VariableDeclaration","scope":3648,"src":"1054:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:17"},"returnParameters":{"id":3645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"high","nameLocation":"1096:4:17","nodeType":"VariableDeclaration","scope":3648,"src":"1088:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3644,"mutability":"mutable","name":"low","nameLocation":"1110:3:17","nodeType":"VariableDeclaration","scope":3648,"src":"1102:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:17"},"scope":5229,"src":"1027:550:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3682,"nodeType":"Block","src":"1784:149:17","statements":[{"id":3681,"nodeType":"UncheckedBlock","src":"1794:133:17","statements":[{"assignments":[3661],"declarations":[{"constant":false,"id":3661,"mutability":"mutable","name":"c","nameLocation":"1826:1:17","nodeType":"VariableDeclaration","scope":3681,"src":"1818:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3665,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"1830:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3663,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"1834:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:17"},{"expression":{"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3666,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"1849:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3667,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"1859:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3668,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"1864:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3671,"nodeType":"ExpressionStatement","src":"1849:16:17"},{"expression":{"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3672,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"1879:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3673,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"1888:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3676,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"1908:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3674,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"1892:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"1892:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3680,"nodeType":"ExpressionStatement","src":"1879:37:17"}]}]},"documentation":{"id":3649,"nodeType":"StructuredDocumentation","src":"1583:105:17","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3683,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:17","nodeType":"FunctionDefinition","parameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"a","nameLocation":"1717:1:17","nodeType":"VariableDeclaration","scope":3683,"src":"1709:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3653,"mutability":"mutable","name":"b","nameLocation":"1728:1:17","nodeType":"VariableDeclaration","scope":3683,"src":"1720:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:17"},"returnParameters":{"id":3659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"success","nameLocation":"1759:7:17","nodeType":"VariableDeclaration","scope":3683,"src":"1754:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3655,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3658,"mutability":"mutable","name":"result","nameLocation":"1776:6:17","nodeType":"VariableDeclaration","scope":3683,"src":"1768:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:17"},"scope":5229,"src":"1693:240:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3717,"nodeType":"Block","src":"2143:149:17","statements":[{"id":3716,"nodeType":"UncheckedBlock","src":"2153:133:17","statements":[{"assignments":[3696],"declarations":[{"constant":false,"id":3696,"mutability":"mutable","name":"c","nameLocation":"2185:1:17","nodeType":"VariableDeclaration","scope":3716,"src":"2177:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3695,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3700,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3697,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"2189:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3698,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"2193:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:17"},{"expression":{"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3701,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"2208:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3702,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"2218:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"2223:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3706,"nodeType":"ExpressionStatement","src":"2208:16:17"},{"expression":{"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"2238:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3708,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"2247:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3711,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"2267:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3709,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"2251:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"2251:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3715,"nodeType":"ExpressionStatement","src":"2238:37:17"}]}]},"documentation":{"id":3684,"nodeType":"StructuredDocumentation","src":"1939:108:17","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3718,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:17","nodeType":"FunctionDefinition","parameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3686,"mutability":"mutable","name":"a","nameLocation":"2076:1:17","nodeType":"VariableDeclaration","scope":3718,"src":"2068:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3685,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3688,"mutability":"mutable","name":"b","nameLocation":"2087:1:17","nodeType":"VariableDeclaration","scope":3718,"src":"2079:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:17"},"returnParameters":{"id":3694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"success","nameLocation":"2118:7:17","nodeType":"VariableDeclaration","scope":3718,"src":"2113:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3690,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3693,"mutability":"mutable","name":"result","nameLocation":"2135:6:17","nodeType":"VariableDeclaration","scope":3718,"src":"2127:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3692,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:17"},"scope":5229,"src":"2052:240:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3747,"nodeType":"Block","src":"2505:391:17","statements":[{"id":3746,"nodeType":"UncheckedBlock","src":"2515:375:17","statements":[{"assignments":[3731],"declarations":[{"constant":false,"id":3731,"mutability":"mutable","name":"c","nameLocation":"2547:1:17","nodeType":"VariableDeclaration","scope":3746,"src":"2539:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3735,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3732,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"2551:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3733,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"2555:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:17"},{"AST":{"nativeSrc":"2595:188:17","nodeType":"YulBlock","src":"2595:188:17","statements":[{"nativeSrc":"2727:42:17","nodeType":"YulAssignment","src":"2727:42:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:17","nodeType":"YulIdentifier","src":"2748:1:17"},{"name":"a","nativeSrc":"2751:1:17","nodeType":"YulIdentifier","src":"2751:1:17"}],"functionName":{"name":"div","nativeSrc":"2744:3:17","nodeType":"YulIdentifier","src":"2744:3:17"},"nativeSrc":"2744:9:17","nodeType":"YulFunctionCall","src":"2744:9:17"},{"name":"b","nativeSrc":"2755:1:17","nodeType":"YulIdentifier","src":"2755:1:17"}],"functionName":{"name":"eq","nativeSrc":"2741:2:17","nodeType":"YulIdentifier","src":"2741:2:17"},"nativeSrc":"2741:16:17","nodeType":"YulFunctionCall","src":"2741:16:17"},{"arguments":[{"name":"a","nativeSrc":"2766:1:17","nodeType":"YulIdentifier","src":"2766:1:17"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:17","nodeType":"YulIdentifier","src":"2759:6:17"},"nativeSrc":"2759:9:17","nodeType":"YulFunctionCall","src":"2759:9:17"}],"functionName":{"name":"or","nativeSrc":"2738:2:17","nodeType":"YulIdentifier","src":"2738:2:17"},"nativeSrc":"2738:31:17","nodeType":"YulFunctionCall","src":"2738:31:17"},"variableNames":[{"name":"success","nativeSrc":"2727:7:17","nodeType":"YulIdentifier","src":"2727:7:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3721,"isOffset":false,"isSlot":false,"src":"2751:1:17","valueSize":1},{"declaration":3721,"isOffset":false,"isSlot":false,"src":"2766:1:17","valueSize":1},{"declaration":3723,"isOffset":false,"isSlot":false,"src":"2755:1:17","valueSize":1},{"declaration":3731,"isOffset":false,"isSlot":false,"src":"2748:1:17","valueSize":1},{"declaration":3726,"isOffset":false,"isSlot":false,"src":"2727:7:17","valueSize":1}],"flags":["memory-safe"],"id":3736,"nodeType":"InlineAssembly","src":"2570:213:17"},{"expression":{"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"2842:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3738,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"2851:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3741,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"2871:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3739,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"2855:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"2855:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3745,"nodeType":"ExpressionStatement","src":"2842:37:17"}]}]},"documentation":{"id":3719,"nodeType":"StructuredDocumentation","src":"2298:111:17","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3748,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:17","nodeType":"FunctionDefinition","parameters":{"id":3724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"a","nameLocation":"2438:1:17","nodeType":"VariableDeclaration","scope":3748,"src":"2430:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3723,"mutability":"mutable","name":"b","nameLocation":"2449:1:17","nodeType":"VariableDeclaration","scope":3748,"src":"2441:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:17"},"returnParameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"success","nameLocation":"2480:7:17","nodeType":"VariableDeclaration","scope":3748,"src":"2475:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3725,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"result","nameLocation":"2497:6:17","nodeType":"VariableDeclaration","scope":3748,"src":"2489:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:17"},"scope":5229,"src":"2414:482:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3768,"nodeType":"Block","src":"3111:231:17","statements":[{"id":3767,"nodeType":"UncheckedBlock","src":"3121:215:17","statements":[{"expression":{"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3760,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"3145:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"3155:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3765,"nodeType":"ExpressionStatement","src":"3145:15:17"},{"AST":{"nativeSrc":"3199:127:17","nodeType":"YulBlock","src":"3199:127:17","statements":[{"nativeSrc":"3293:19:17","nodeType":"YulAssignment","src":"3293:19:17","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:17","nodeType":"YulIdentifier","src":"3307:1:17"},{"name":"b","nativeSrc":"3310:1:17","nodeType":"YulIdentifier","src":"3310:1:17"}],"functionName":{"name":"div","nativeSrc":"3303:3:17","nodeType":"YulIdentifier","src":"3303:3:17"},"nativeSrc":"3303:9:17","nodeType":"YulFunctionCall","src":"3303:9:17"},"variableNames":[{"name":"result","nativeSrc":"3293:6:17","nodeType":"YulIdentifier","src":"3293:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3751,"isOffset":false,"isSlot":false,"src":"3307:1:17","valueSize":1},{"declaration":3753,"isOffset":false,"isSlot":false,"src":"3310:1:17","valueSize":1},{"declaration":3758,"isOffset":false,"isSlot":false,"src":"3293:6:17","valueSize":1}],"flags":["memory-safe"],"id":3766,"nodeType":"InlineAssembly","src":"3174:152:17"}]}]},"documentation":{"id":3749,"nodeType":"StructuredDocumentation","src":"2902:113:17","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:17","nodeType":"FunctionDefinition","parameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"a","nameLocation":"3044:1:17","nodeType":"VariableDeclaration","scope":3769,"src":"3036:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3753,"mutability":"mutable","name":"b","nameLocation":"3055:1:17","nodeType":"VariableDeclaration","scope":3769,"src":"3047:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:17"},"returnParameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"success","nameLocation":"3086:7:17","nodeType":"VariableDeclaration","scope":3769,"src":"3081:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3755,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3758,"mutability":"mutable","name":"result","nameLocation":"3103:6:17","nodeType":"VariableDeclaration","scope":3769,"src":"3095:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:17"},"scope":5229,"src":"3020:322:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3789,"nodeType":"Block","src":"3567:231:17","statements":[{"id":3788,"nodeType":"UncheckedBlock","src":"3577:215:17","statements":[{"expression":{"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3781,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"3601:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3782,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"3611:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3786,"nodeType":"ExpressionStatement","src":"3601:15:17"},{"AST":{"nativeSrc":"3655:127:17","nodeType":"YulBlock","src":"3655:127:17","statements":[{"nativeSrc":"3749:19:17","nodeType":"YulAssignment","src":"3749:19:17","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:17","nodeType":"YulIdentifier","src":"3763:1:17"},{"name":"b","nativeSrc":"3766:1:17","nodeType":"YulIdentifier","src":"3766:1:17"}],"functionName":{"name":"mod","nativeSrc":"3759:3:17","nodeType":"YulIdentifier","src":"3759:3:17"},"nativeSrc":"3759:9:17","nodeType":"YulFunctionCall","src":"3759:9:17"},"variableNames":[{"name":"result","nativeSrc":"3749:6:17","nodeType":"YulIdentifier","src":"3749:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3772,"isOffset":false,"isSlot":false,"src":"3763:1:17","valueSize":1},{"declaration":3774,"isOffset":false,"isSlot":false,"src":"3766:1:17","valueSize":1},{"declaration":3779,"isOffset":false,"isSlot":false,"src":"3749:6:17","valueSize":1}],"flags":["memory-safe"],"id":3787,"nodeType":"InlineAssembly","src":"3630:152:17"}]}]},"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"3348:123:17","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3790,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:17","nodeType":"FunctionDefinition","parameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"a","nameLocation":"3500:1:17","nodeType":"VariableDeclaration","scope":3790,"src":"3492:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"b","nameLocation":"3511:1:17","nodeType":"VariableDeclaration","scope":3790,"src":"3503:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:17"},"returnParameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3777,"mutability":"mutable","name":"success","nameLocation":"3542:7:17","nodeType":"VariableDeclaration","scope":3790,"src":"3537:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3776,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3779,"mutability":"mutable","name":"result","nameLocation":"3559:6:17","nodeType":"VariableDeclaration","scope":3790,"src":"3551:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3778,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:17"},"scope":5229,"src":"3476:322:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3819,"nodeType":"Block","src":"3989:122:17","statements":[{"assignments":[3801,3803],"declarations":[{"constant":false,"id":3801,"mutability":"mutable","name":"success","nameLocation":"4005:7:17","nodeType":"VariableDeclaration","scope":3819,"src":"4000:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3800,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3803,"mutability":"mutable","name":"result","nameLocation":"4022:6:17","nodeType":"VariableDeclaration","scope":3819,"src":"4014:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3802,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3808,"initialValue":{"arguments":[{"id":3805,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"4039:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3806,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"4042:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3804,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"4032:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:17"},{"expression":{"arguments":[{"id":3810,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"4069:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3811,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"4078:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3812,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:17","memberName":"max","nodeType":"MemberAccess","src":"4086:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3809,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"4061:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3799,"id":3818,"nodeType":"Return","src":"4054:50:17"}]},"documentation":{"id":3791,"nodeType":"StructuredDocumentation","src":"3804:103:17","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3820,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:17","nodeType":"FunctionDefinition","parameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"mutability":"mutable","name":"a","nameLocation":"3943:1:17","nodeType":"VariableDeclaration","scope":3820,"src":"3935:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3795,"mutability":"mutable","name":"b","nameLocation":"3954:1:17","nodeType":"VariableDeclaration","scope":3820,"src":"3946:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:17"},"returnParameters":{"id":3799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3820,"src":"3980:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3797,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:17"},"scope":5229,"src":"3912:199:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3839,"nodeType":"Block","src":"4294:73:17","statements":[{"assignments":[null,3831],"declarations":[null,{"constant":false,"id":3831,"mutability":"mutable","name":"result","nameLocation":"4315:6:17","nodeType":"VariableDeclaration","scope":3839,"src":"4307:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3836,"initialValue":{"arguments":[{"id":3833,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"4332:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3834,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"4335:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3832,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"4325:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:17"},{"expression":{"id":3837,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"4354:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3829,"id":3838,"nodeType":"Return","src":"4347:13:17"}]},"documentation":{"id":3821,"nodeType":"StructuredDocumentation","src":"4117:95:17","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3840,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:17","nodeType":"FunctionDefinition","parameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3823,"mutability":"mutable","name":"a","nameLocation":"4248:1:17","nodeType":"VariableDeclaration","scope":3840,"src":"4240:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3825,"mutability":"mutable","name":"b","nameLocation":"4259:1:17","nodeType":"VariableDeclaration","scope":3840,"src":"4251:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:17"},"returnParameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3840,"src":"4285:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:17"},"scope":5229,"src":"4217:150:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3869,"nodeType":"Block","src":"4564:122:17","statements":[{"assignments":[3851,3853],"declarations":[{"constant":false,"id":3851,"mutability":"mutable","name":"success","nameLocation":"4580:7:17","nodeType":"VariableDeclaration","scope":3869,"src":"4575:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3850,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"result","nameLocation":"4597:6:17","nodeType":"VariableDeclaration","scope":3869,"src":"4589:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3858,"initialValue":{"arguments":[{"id":3855,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"4614:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3856,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"4617:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3854,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"4607:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:17"},{"expression":{"arguments":[{"id":3860,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4644:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3861,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"4653:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3862,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:17","memberName":"max","nodeType":"MemberAccess","src":"4661:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3859,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"4636:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3849,"id":3868,"nodeType":"Return","src":"4629:50:17"}]},"documentation":{"id":3841,"nodeType":"StructuredDocumentation","src":"4373:109:17","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3870,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:17","nodeType":"FunctionDefinition","parameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3843,"mutability":"mutable","name":"a","nameLocation":"4518:1:17","nodeType":"VariableDeclaration","scope":3870,"src":"4510:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3845,"mutability":"mutable","name":"b","nameLocation":"4529:1:17","nodeType":"VariableDeclaration","scope":3870,"src":"4521:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3844,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:17"},"returnParameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3870,"src":"4555:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:17"},"scope":5229,"src":"4487:199:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3896,"nodeType":"Block","src":"5158:207:17","statements":[{"id":3895,"nodeType":"UncheckedBlock","src":"5168:191:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3882,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"5306:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3883,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"5312:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3884,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"5316:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3889,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"5337:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3887,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"5321:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"5321:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3881,"id":3894,"nodeType":"Return","src":"5299:49:17"}]}]},"documentation":{"id":3871,"nodeType":"StructuredDocumentation","src":"4692:374:17","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3897,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:17","nodeType":"FunctionDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"condition","nameLocation":"5093:9:17","nodeType":"VariableDeclaration","scope":3897,"src":"5088:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3872,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3875,"mutability":"mutable","name":"a","nameLocation":"5112:1:17","nodeType":"VariableDeclaration","scope":3897,"src":"5104:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3874,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"b","nameLocation":"5123:1:17","nodeType":"VariableDeclaration","scope":3897,"src":"5115:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:17"},"returnParameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3897,"src":"5149:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:17"},"scope":5229,"src":"5071:294:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3915,"nodeType":"Block","src":"5502:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3908,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"5527:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3909,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"5531:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3911,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"5534:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3912,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"5537:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3907,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"5519:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3906,"id":3914,"nodeType":"Return","src":"5512:27:17"}]},"documentation":{"id":3898,"nodeType":"StructuredDocumentation","src":"5371:59:17","text":" @dev Returns the largest of two numbers."},"id":3916,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:17","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"a","nameLocation":"5456:1:17","nodeType":"VariableDeclaration","scope":3916,"src":"5448:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"b","nameLocation":"5467:1:17","nodeType":"VariableDeclaration","scope":3916,"src":"5459:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:17"},"returnParameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3916,"src":"5493:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:17"},"scope":5229,"src":"5435:111:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3934,"nodeType":"Block","src":"5684:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3927,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"5709:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3928,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"5713:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3930,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"5716:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3931,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"5719:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3926,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"5701:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3925,"id":3933,"nodeType":"Return","src":"5694:27:17"}]},"documentation":{"id":3917,"nodeType":"StructuredDocumentation","src":"5552:60:17","text":" @dev Returns the smallest of two numbers."},"id":3935,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:17","nodeType":"FunctionDefinition","parameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"a","nameLocation":"5638:1:17","nodeType":"VariableDeclaration","scope":3935,"src":"5630:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3918,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"b","nameLocation":"5649:1:17","nodeType":"VariableDeclaration","scope":3935,"src":"5641:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:17"},"returnParameters":{"id":3925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3935,"src":"5675:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:17"},"scope":5229,"src":"5617:111:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3957,"nodeType":"Block","src":"5912:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3945,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"5967:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3946,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"5971:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3949,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"5977:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3950,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"5981:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3944,"id":3956,"nodeType":"Return","src":"5959:28:17"}]},"documentation":{"id":3936,"nodeType":"StructuredDocumentation","src":"5734:102:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3958,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:17","nodeType":"FunctionDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3938,"mutability":"mutable","name":"a","nameLocation":"5866:1:17","nodeType":"VariableDeclaration","scope":3958,"src":"5858:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3940,"mutability":"mutable","name":"b","nameLocation":"5877:1:17","nodeType":"VariableDeclaration","scope":3958,"src":"5869:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:17"},"returnParameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"5903:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:17"},"scope":5229,"src":"5841:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"6286:633:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3968,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"6300:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3979,"nodeType":"IfStatement","src":"6296:150:17","trueBody":{"id":3978,"nodeType":"Block","src":"6308:138:17","statements":[{"expression":{"arguments":[{"expression":{"id":3974,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"6412:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1648_$","typeString":"type(library Panic)"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1615,"src":"6412:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3971,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"6400:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1648_$","typeString":"type(library Panic)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"6400:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3977,"nodeType":"ExpressionStatement","src":"6400:35:17"}]}},{"id":3997,"nodeType":"UncheckedBlock","src":"6829:84:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"6876:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3980,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"6860:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"6860:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3986,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"6887:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"6896:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3967,"id":3996,"nodeType":"Return","src":"6853:49:17"}]}]},"documentation":{"id":3959,"nodeType":"StructuredDocumentation","src":"6000:210:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:17","nodeType":"FunctionDefinition","parameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"a","nameLocation":"6240:1:17","nodeType":"VariableDeclaration","scope":3999,"src":"6232:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3960,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3963,"mutability":"mutable","name":"b","nameLocation":"6251:1:17","nodeType":"VariableDeclaration","scope":3999,"src":"6243:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3962,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:17"},"returnParameters":{"id":3967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"6277:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:17"},"scope":5229,"src":"6215:704:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4134,"nodeType":"Block","src":"7340:3585:17","statements":[{"id":4133,"nodeType":"UncheckedBlock","src":"7350:3569:17","statements":[{"assignments":[4012,4014],"declarations":[{"constant":false,"id":4012,"mutability":"mutable","name":"high","nameLocation":"7383:4:17","nodeType":"VariableDeclaration","scope":4133,"src":"7375:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4014,"mutability":"mutable","name":"low","nameLocation":"7397:3:17","nodeType":"VariableDeclaration","scope":4133,"src":"7389:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4019,"initialValue":{"arguments":[{"id":4016,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"7411:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4017,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"7414:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4015,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"7404:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4020,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"7498:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4028,"nodeType":"IfStatement","src":"7494:365:17","trueBody":{"id":4027,"nodeType":"Block","src":"7509:350:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"7827:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4024,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"7833:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4010,"id":4026,"nodeType":"Return","src":"7820:24:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4029,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"7969:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4030,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"7984:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4047,"nodeType":"IfStatement","src":"7965:142:17","trueBody":{"id":4046,"nodeType":"Block","src":"7990:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4036,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"8028:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4039,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"8046:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1648_$","typeString":"type(library Panic)"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1615,"src":"8046:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4041,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"8070:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1648_$","typeString":"type(library Panic)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:17","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1611,"src":"8070:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4035,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"8020:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4032,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"8008:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1648_$","typeString":"type(library Panic)"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"8008:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4045,"nodeType":"ExpressionStatement","src":"8008:84:17"}]}},{"assignments":[4049],"declarations":[{"constant":false,"id":4049,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:17","nodeType":"VariableDeclaration","scope":4133,"src":"8359:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4048,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4050,"nodeType":"VariableDeclarationStatement","src":"8359:17:17"},{"AST":{"nativeSrc":"8415:283:17","nodeType":"YulBlock","src":"8415:283:17","statements":[{"nativeSrc":"8484:38:17","nodeType":"YulAssignment","src":"8484:38:17","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:17","nodeType":"YulIdentifier","src":"8504:1:17"},{"name":"y","nativeSrc":"8507:1:17","nodeType":"YulIdentifier","src":"8507:1:17"},{"name":"denominator","nativeSrc":"8510:11:17","nodeType":"YulIdentifier","src":"8510:11:17"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:17","nodeType":"YulIdentifier","src":"8497:6:17"},"nativeSrc":"8497:25:17","nodeType":"YulFunctionCall","src":"8497:25:17"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:17","nodeType":"YulIdentifier","src":"8484:9:17"}]},{"nativeSrc":"8604:37:17","nodeType":"YulAssignment","src":"8604:37:17","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:17","nodeType":"YulIdentifier","src":"8616:4:17"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:17","nodeType":"YulIdentifier","src":"8625:9:17"},{"name":"low","nativeSrc":"8636:3:17","nodeType":"YulIdentifier","src":"8636:3:17"}],"functionName":{"name":"gt","nativeSrc":"8622:2:17","nodeType":"YulIdentifier","src":"8622:2:17"},"nativeSrc":"8622:18:17","nodeType":"YulFunctionCall","src":"8622:18:17"}],"functionName":{"name":"sub","nativeSrc":"8612:3:17","nodeType":"YulIdentifier","src":"8612:3:17"},"nativeSrc":"8612:29:17","nodeType":"YulFunctionCall","src":"8612:29:17"},"variableNames":[{"name":"high","nativeSrc":"8604:4:17","nodeType":"YulIdentifier","src":"8604:4:17"}]},{"nativeSrc":"8658:26:17","nodeType":"YulAssignment","src":"8658:26:17","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:17","nodeType":"YulIdentifier","src":"8669:3:17"},{"name":"remainder","nativeSrc":"8674:9:17","nodeType":"YulIdentifier","src":"8674:9:17"}],"functionName":{"name":"sub","nativeSrc":"8665:3:17","nodeType":"YulIdentifier","src":"8665:3:17"},"nativeSrc":"8665:19:17","nodeType":"YulFunctionCall","src":"8665:19:17"},"variableNames":[{"name":"low","nativeSrc":"8658:3:17","nodeType":"YulIdentifier","src":"8658:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4006,"isOffset":false,"isSlot":false,"src":"8510:11:17","valueSize":1},{"declaration":4012,"isOffset":false,"isSlot":false,"src":"8604:4:17","valueSize":1},{"declaration":4012,"isOffset":false,"isSlot":false,"src":"8616:4:17","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"8636:3:17","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"8658:3:17","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"8669:3:17","valueSize":1},{"declaration":4049,"isOffset":false,"isSlot":false,"src":"8484:9:17","valueSize":1},{"declaration":4049,"isOffset":false,"isSlot":false,"src":"8625:9:17","valueSize":1},{"declaration":4049,"isOffset":false,"isSlot":false,"src":"8674:9:17","valueSize":1},{"declaration":4002,"isOffset":false,"isSlot":false,"src":"8504:1:17","valueSize":1},{"declaration":4004,"isOffset":false,"isSlot":false,"src":"8507:1:17","valueSize":1}],"flags":["memory-safe"],"id":4051,"nodeType":"InlineAssembly","src":"8390:308:17"},{"assignments":[4053],"declarations":[{"constant":false,"id":4053,"mutability":"mutable","name":"twos","nameLocation":"8910:4:17","nodeType":"VariableDeclaration","scope":4133,"src":"8902:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4052,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4060,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4054,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"8917:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4056,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"8936:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:17"},{"AST":{"nativeSrc":"8987:359:17","nodeType":"YulBlock","src":"8987:359:17","statements":[{"nativeSrc":"9052:37:17","nodeType":"YulAssignment","src":"9052:37:17","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:17","nodeType":"YulIdentifier","src":"9071:11:17"},{"name":"twos","nativeSrc":"9084:4:17","nodeType":"YulIdentifier","src":"9084:4:17"}],"functionName":{"name":"div","nativeSrc":"9067:3:17","nodeType":"YulIdentifier","src":"9067:3:17"},"nativeSrc":"9067:22:17","nodeType":"YulFunctionCall","src":"9067:22:17"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:17","nodeType":"YulIdentifier","src":"9052:11:17"}]},{"nativeSrc":"9153:21:17","nodeType":"YulAssignment","src":"9153:21:17","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:17","nodeType":"YulIdentifier","src":"9164:3:17"},{"name":"twos","nativeSrc":"9169:4:17","nodeType":"YulIdentifier","src":"9169:4:17"}],"functionName":{"name":"div","nativeSrc":"9160:3:17","nodeType":"YulIdentifier","src":"9160:3:17"},"nativeSrc":"9160:14:17","nodeType":"YulFunctionCall","src":"9160:14:17"},"variableNames":[{"name":"low","nativeSrc":"9153:3:17","nodeType":"YulIdentifier","src":"9153:3:17"}]},{"nativeSrc":"9293:39:17","nodeType":"YulAssignment","src":"9293:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:17","nodeType":"YulLiteral","src":"9313:1:17","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:17","nodeType":"YulIdentifier","src":"9316:4:17"}],"functionName":{"name":"sub","nativeSrc":"9309:3:17","nodeType":"YulIdentifier","src":"9309:3:17"},"nativeSrc":"9309:12:17","nodeType":"YulFunctionCall","src":"9309:12:17"},{"name":"twos","nativeSrc":"9323:4:17","nodeType":"YulIdentifier","src":"9323:4:17"}],"functionName":{"name":"div","nativeSrc":"9305:3:17","nodeType":"YulIdentifier","src":"9305:3:17"},"nativeSrc":"9305:23:17","nodeType":"YulFunctionCall","src":"9305:23:17"},{"kind":"number","nativeSrc":"9330:1:17","nodeType":"YulLiteral","src":"9330:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:17","nodeType":"YulIdentifier","src":"9301:3:17"},"nativeSrc":"9301:31:17","nodeType":"YulFunctionCall","src":"9301:31:17"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:17","nodeType":"YulIdentifier","src":"9293:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4006,"isOffset":false,"isSlot":false,"src":"9052:11:17","valueSize":1},{"declaration":4006,"isOffset":false,"isSlot":false,"src":"9071:11:17","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"9153:3:17","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"9164:3:17","valueSize":1},{"declaration":4053,"isOffset":false,"isSlot":false,"src":"9084:4:17","valueSize":1},{"declaration":4053,"isOffset":false,"isSlot":false,"src":"9169:4:17","valueSize":1},{"declaration":4053,"isOffset":false,"isSlot":false,"src":"9293:4:17","valueSize":1},{"declaration":4053,"isOffset":false,"isSlot":false,"src":"9316:4:17","valueSize":1},{"declaration":4053,"isOffset":false,"isSlot":false,"src":"9323:4:17","valueSize":1}],"flags":["memory-safe"],"id":4061,"nodeType":"InlineAssembly","src":"8962:384:17"},{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4062,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"9409:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4063,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"9416:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4064,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"9423:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4067,"nodeType":"ExpressionStatement","src":"9409:18:17"},{"assignments":[4069],"declarations":[{"constant":false,"id":4069,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:17","nodeType":"VariableDeclaration","scope":4133,"src":"9762:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4068,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4076,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4071,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"9785:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4073,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:17"},{"expression":{"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4077,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"10018:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4079,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"10033:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4080,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"10047:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4084,"nodeType":"ExpressionStatement","src":"10018:36:17"},{"expression":{"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4085,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"10088:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4087,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"10103:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4088,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"10117:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4092,"nodeType":"ExpressionStatement","src":"10088:36:17"},{"expression":{"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4093,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"10160:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"10175:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4096,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"10189:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4100,"nodeType":"ExpressionStatement","src":"10160:36:17"},{"expression":{"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4101,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"10231:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4103,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"10246:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4104,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"10260:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4108,"nodeType":"ExpressionStatement","src":"10231:36:17"},{"expression":{"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4109,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"10304:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4111,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"10319:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4112,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"10333:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4116,"nodeType":"ExpressionStatement","src":"10304:36:17"},{"expression":{"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4117,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"10378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4119,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"10393:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4120,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"10407:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4124,"nodeType":"ExpressionStatement","src":"10378:36:17"},{"expression":{"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4125,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"10859:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4126,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"10868:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4127,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"10874:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4130,"nodeType":"ExpressionStatement","src":"10859:22:17"},{"expression":{"id":4131,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"10902:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4010,"id":4132,"nodeType":"Return","src":"10895:13:17"}]}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"6925:312:17","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4135,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:17","nodeType":"FunctionDefinition","parameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"x","nameLocation":"7266:1:17","nodeType":"VariableDeclaration","scope":4135,"src":"7258:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4004,"mutability":"mutable","name":"y","nameLocation":"7277:1:17","nodeType":"VariableDeclaration","scope":4135,"src":"7269:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4006,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:17","nodeType":"VariableDeclaration","scope":4135,"src":"7280:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:17"},"returnParameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"result","nameLocation":"7332:6:17","nodeType":"VariableDeclaration","scope":4135,"src":"7324:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:17"},"scope":5229,"src":"7242:3683:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4171,"nodeType":"Block","src":"11164:128:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4151,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"11188:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4152,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"11191:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4153,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"11194:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4150,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4135,4172],"referencedDeclaration":4135,"src":"11181:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4158,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"11242:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}],"id":4157,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"11225:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3620_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4161,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"11262:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4162,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"11265:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4163,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"11268:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4160,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4155,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"11209:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"11209:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4149,"id":4170,"nodeType":"Return","src":"11174:111:17"}]},"documentation":{"id":4136,"nodeType":"StructuredDocumentation","src":"10931:118:17","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4172,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:17","nodeType":"FunctionDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"x","nameLocation":"11078:1:17","nodeType":"VariableDeclaration","scope":4172,"src":"11070:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4137,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4140,"mutability":"mutable","name":"y","nameLocation":"11089:1:17","nodeType":"VariableDeclaration","scope":4172,"src":"11081:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4139,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:17","nodeType":"VariableDeclaration","scope":4172,"src":"11092:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4145,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:17","nodeType":"VariableDeclaration","scope":4172,"src":"11113:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"},"typeName":{"id":4144,"nodeType":"UserDefinedTypeName","pathNode":{"id":4143,"name":"Rounding","nameLocations":["11113:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3620,"src":"11113:8:17"},"referencedDeclaration":3620,"src":"11113:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:17"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4172,"src":"11155:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:17"},"scope":5229,"src":"11054:238:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4221,"nodeType":"Block","src":"11500:245:17","statements":[{"id":4220,"nodeType":"UncheckedBlock","src":"11510:229:17","statements":[{"assignments":[4185,4187],"declarations":[{"constant":false,"id":4185,"mutability":"mutable","name":"high","nameLocation":"11543:4:17","nodeType":"VariableDeclaration","scope":4220,"src":"11535:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4184,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4187,"mutability":"mutable","name":"low","nameLocation":"11557:3:17","nodeType":"VariableDeclaration","scope":4220,"src":"11549:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4192,"initialValue":{"arguments":[{"id":4189,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"11571:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4190,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"11574:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4188,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"11564:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4193,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"11594:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4195,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"11607:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4206,"nodeType":"IfStatement","src":"11590:86:17","trueBody":{"id":4205,"nodeType":"Block","src":"11610:66:17","statements":[{"expression":{"arguments":[{"expression":{"id":4201,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"11640:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1648_$","typeString":"type(library Panic)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:17","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1611,"src":"11640:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4198,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"11628:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1648_$","typeString":"type(library Panic)"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"11628:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4204,"nodeType":"ExpressionStatement","src":"11628:33:17"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"11697:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4209,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"11712:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"11719:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4215,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"11726:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4183,"id":4219,"nodeType":"Return","src":"11689:39:17"}]}]},"documentation":{"id":4173,"nodeType":"StructuredDocumentation","src":"11298:111:17","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4222,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:17","nodeType":"FunctionDefinition","parameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"x","nameLocation":"11438:1:17","nodeType":"VariableDeclaration","scope":4222,"src":"11430:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4177,"mutability":"mutable","name":"y","nameLocation":"11449:1:17","nodeType":"VariableDeclaration","scope":4222,"src":"11441:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4179,"mutability":"mutable","name":"n","nameLocation":"11458:1:17","nodeType":"VariableDeclaration","scope":4222,"src":"11452:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4178,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:17"},"returnParameters":{"id":4183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4182,"mutability":"mutable","name":"result","nameLocation":"11492:6:17","nodeType":"VariableDeclaration","scope":4222,"src":"11484:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4181,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:17"},"scope":5229,"src":"11414:331:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4260,"nodeType":"Block","src":"11963:113:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4238,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"11987:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4239,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"11990:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4240,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"11993:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4237,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4222,4261],"referencedDeclaration":4222,"src":"11980:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4245,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"12031:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}],"id":4244,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"12014:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3620_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4248,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"12051:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4249,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"12054:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4251,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"12062:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4247,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4242,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"11998:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"11998:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4236,"id":4259,"nodeType":"Return","src":"11973:96:17"}]},"documentation":{"id":4223,"nodeType":"StructuredDocumentation","src":"11751:109:17","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4261,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:17","nodeType":"FunctionDefinition","parameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"x","nameLocation":"11889:1:17","nodeType":"VariableDeclaration","scope":4261,"src":"11881:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4227,"mutability":"mutable","name":"y","nameLocation":"11900:1:17","nodeType":"VariableDeclaration","scope":4261,"src":"11892:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"n","nameLocation":"11909:1:17","nodeType":"VariableDeclaration","scope":4261,"src":"11903:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4228,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:17","nodeType":"VariableDeclaration","scope":4261,"src":"11912:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"},"typeName":{"id":4231,"nodeType":"UserDefinedTypeName","pathNode":{"id":4230,"name":"Rounding","nameLocations":["11912:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3620,"src":"11912:8:17"},"referencedDeclaration":3620,"src":"11912:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:17"},"returnParameters":{"id":4236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4261,"src":"11954:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4234,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:17"},"scope":5229,"src":"11865:211:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4357,"nodeType":"Block","src":"12710:1849:17","statements":[{"id":4356,"nodeType":"UncheckedBlock","src":"12720:1833:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4271,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"12748:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4276,"nodeType":"IfStatement","src":"12744:20:17","trueBody":{"expression":{"hexValue":"30","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4270,"id":4275,"nodeType":"Return","src":"12756:8:17"}},{"assignments":[4278],"declarations":[{"constant":false,"id":4278,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:17","nodeType":"VariableDeclaration","scope":4356,"src":"13235:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4277,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4282,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"13255:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4280,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"13259:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:17"},{"assignments":[4284],"declarations":[{"constant":false,"id":4284,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:17","nodeType":"VariableDeclaration","scope":4356,"src":"13274:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4286,"initialValue":{"id":4285,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"13288:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:17"},{"assignments":[4288],"declarations":[{"constant":false,"id":4288,"mutability":"mutable","name":"x","nameLocation":"13432:1:17","nodeType":"VariableDeclaration","scope":4356,"src":"13425:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4287,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4290,"initialValue":{"hexValue":"30","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:17"},{"assignments":[4292],"declarations":[{"constant":false,"id":4292,"mutability":"mutable","name":"y","nameLocation":"13458:1:17","nodeType":"VariableDeclaration","scope":4356,"src":"13451:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4291,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4294,"initialValue":{"hexValue":"31","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:17"},{"body":{"id":4331,"nodeType":"Block","src":"13501:882:17","statements":[{"assignments":[4299],"declarations":[{"constant":false,"id":4299,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:17","nodeType":"VariableDeclaration","scope":4331,"src":"13519:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4298,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4303,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4300,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"13538:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4301,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"13544:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:17"},{"expression":{"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4304,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"13573:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4305,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"13578:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4306,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4307,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"13678:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4308,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"13923:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4309,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"13929:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4310,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"13941:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4315,"nodeType":"ExpressionStatement","src":"13572:395:17"},{"expression":{"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4316,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"13987:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4317,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"13990:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4318,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4319,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"14072:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4320,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"14326:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4321,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"14330:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4324,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"14341:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4322,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:17","typeDescriptions":{}}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4330,"nodeType":"ExpressionStatement","src":"13986:382:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"13485:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4332,"nodeType":"WhileStatement","src":"13478:905:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4333,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"14401:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4338,"nodeType":"IfStatement","src":"14397:22:17","trueBody":{"expression":{"hexValue":"30","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4270,"id":4337,"nodeType":"Return","src":"14411:8:17"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4340,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"14470:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4343,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"14477:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:17","subExpression":{"id":4346,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"14490:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:17","typeDescriptions":{}}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4352,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"14502:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:17","typeDescriptions":{}}},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4339,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"14462:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4270,"id":4355,"nodeType":"Return","src":"14455:50:17"}]}]},"documentation":{"id":4262,"nodeType":"StructuredDocumentation","src":"12082:553:17","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4358,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:17","nodeType":"FunctionDefinition","parameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4264,"mutability":"mutable","name":"a","nameLocation":"12664:1:17","nodeType":"VariableDeclaration","scope":4358,"src":"12656:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4263,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4266,"mutability":"mutable","name":"n","nameLocation":"12675:1:17","nodeType":"VariableDeclaration","scope":4358,"src":"12667:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:17"},"returnParameters":{"id":4270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4358,"src":"12701:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:17"},"scope":5229,"src":"12640:1919:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4378,"nodeType":"Block","src":"15159:82:17","statements":[{"id":4377,"nodeType":"UncheckedBlock","src":"15169:66:17","statements":[{"expression":{"arguments":[{"id":4370,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"15212:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4371,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"15215:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4374,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"15222:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4368,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"15200:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5229_$","typeString":"type(library Math)"}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:17","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"15200:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4367,"id":4376,"nodeType":"Return","src":"15193:31:17"}]}]},"documentation":{"id":4359,"nodeType":"StructuredDocumentation","src":"14565:514:17","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4379,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:17","nodeType":"FunctionDefinition","parameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4361,"mutability":"mutable","name":"a","nameLocation":"15113:1:17","nodeType":"VariableDeclaration","scope":4379,"src":"15105:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4360,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4363,"mutability":"mutable","name":"p","nameLocation":"15124:1:17","nodeType":"VariableDeclaration","scope":4379,"src":"15116:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:17"},"returnParameters":{"id":4367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4379,"src":"15150:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4365,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:17"},"scope":5229,"src":"15084:157:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4414,"nodeType":"Block","src":"16011:174:17","statements":[{"assignments":[4392,4394],"declarations":[{"constant":false,"id":4392,"mutability":"mutable","name":"success","nameLocation":"16027:7:17","nodeType":"VariableDeclaration","scope":4414,"src":"16022:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4391,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4394,"mutability":"mutable","name":"result","nameLocation":"16044:6:17","nodeType":"VariableDeclaration","scope":4414,"src":"16036:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4400,"initialValue":{"arguments":[{"id":4396,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"16064:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4397,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"16067:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4398,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"16070:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4395,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4439,4521],"referencedDeclaration":4439,"src":"16054:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:17"},{"condition":{"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:17","subExpression":{"id":4401,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"16087:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4411,"nodeType":"IfStatement","src":"16082:74:17","trueBody":{"id":4410,"nodeType":"Block","src":"16096:60:17","statements":[{"expression":{"arguments":[{"expression":{"id":4406,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"16122:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1648_$","typeString":"type(library Panic)"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1615,"src":"16122:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4403,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"16110:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1648_$","typeString":"type(library Panic)"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"16110:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4409,"nodeType":"ExpressionStatement","src":"16110:35:17"}]}},{"expression":{"id":4412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"16172:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4390,"id":4413,"nodeType":"Return","src":"16165:13:17"}]},"documentation":{"id":4380,"nodeType":"StructuredDocumentation","src":"15247:678:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4415,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:17","nodeType":"FunctionDefinition","parameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4382,"mutability":"mutable","name":"b","nameLocation":"15954:1:17","nodeType":"VariableDeclaration","scope":4415,"src":"15946:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4381,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4384,"mutability":"mutable","name":"e","nameLocation":"15965:1:17","nodeType":"VariableDeclaration","scope":4415,"src":"15957:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4383,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4386,"mutability":"mutable","name":"m","nameLocation":"15976:1:17","nodeType":"VariableDeclaration","scope":4415,"src":"15968:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:17"},"returnParameters":{"id":4390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4415,"src":"16002:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4388,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:17"},"scope":5229,"src":"15930:255:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4438,"nodeType":"Block","src":"17039:1493:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"17053:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4436,"nodeType":"IfStatement","src":"17049:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4434,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4428,"id":4435,"nodeType":"Return","src":"17061:17:17"}},{"AST":{"nativeSrc":"17113:1413:17","nodeType":"YulBlock","src":"17113:1413:17","statements":[{"nativeSrc":"17127:22:17","nodeType":"YulVariableDeclaration","src":"17127:22:17","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:17","nodeType":"YulLiteral","src":"17144:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:17","nodeType":"YulIdentifier","src":"17138:5:17"},"nativeSrc":"17138:11:17","nodeType":"YulFunctionCall","src":"17138:11:17"},"variables":[{"name":"ptr","nativeSrc":"17131:3:17","nodeType":"YulTypedName","src":"17131:3:17","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:17","nodeType":"YulIdentifier","src":"18057:3:17"},{"kind":"number","nativeSrc":"18062:4:17","nodeType":"YulLiteral","src":"18062:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:17","nodeType":"YulIdentifier","src":"18050:6:17"},"nativeSrc":"18050:17:17","nodeType":"YulFunctionCall","src":"18050:17:17"},"nativeSrc":"18050:17:17","nodeType":"YulExpressionStatement","src":"18050:17:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:17","nodeType":"YulIdentifier","src":"18091:3:17"},{"kind":"number","nativeSrc":"18096:4:17","nodeType":"YulLiteral","src":"18096:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:17","nodeType":"YulIdentifier","src":"18087:3:17"},"nativeSrc":"18087:14:17","nodeType":"YulFunctionCall","src":"18087:14:17"},{"kind":"number","nativeSrc":"18103:4:17","nodeType":"YulLiteral","src":"18103:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:17","nodeType":"YulIdentifier","src":"18080:6:17"},"nativeSrc":"18080:28:17","nodeType":"YulFunctionCall","src":"18080:28:17"},"nativeSrc":"18080:28:17","nodeType":"YulExpressionStatement","src":"18080:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:17","nodeType":"YulIdentifier","src":"18132:3:17"},{"kind":"number","nativeSrc":"18137:4:17","nodeType":"YulLiteral","src":"18137:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:17","nodeType":"YulIdentifier","src":"18128:3:17"},"nativeSrc":"18128:14:17","nodeType":"YulFunctionCall","src":"18128:14:17"},{"kind":"number","nativeSrc":"18144:4:17","nodeType":"YulLiteral","src":"18144:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:17","nodeType":"YulIdentifier","src":"18121:6:17"},"nativeSrc":"18121:28:17","nodeType":"YulFunctionCall","src":"18121:28:17"},"nativeSrc":"18121:28:17","nodeType":"YulExpressionStatement","src":"18121:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:17","nodeType":"YulIdentifier","src":"18173:3:17"},{"kind":"number","nativeSrc":"18178:4:17","nodeType":"YulLiteral","src":"18178:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:17","nodeType":"YulIdentifier","src":"18169:3:17"},"nativeSrc":"18169:14:17","nodeType":"YulFunctionCall","src":"18169:14:17"},{"name":"b","nativeSrc":"18185:1:17","nodeType":"YulIdentifier","src":"18185:1:17"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:17","nodeType":"YulIdentifier","src":"18162:6:17"},"nativeSrc":"18162:25:17","nodeType":"YulFunctionCall","src":"18162:25:17"},"nativeSrc":"18162:25:17","nodeType":"YulExpressionStatement","src":"18162:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:17","nodeType":"YulIdentifier","src":"18211:3:17"},{"kind":"number","nativeSrc":"18216:4:17","nodeType":"YulLiteral","src":"18216:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:17","nodeType":"YulIdentifier","src":"18207:3:17"},"nativeSrc":"18207:14:17","nodeType":"YulFunctionCall","src":"18207:14:17"},{"name":"e","nativeSrc":"18223:1:17","nodeType":"YulIdentifier","src":"18223:1:17"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:17","nodeType":"YulIdentifier","src":"18200:6:17"},"nativeSrc":"18200:25:17","nodeType":"YulFunctionCall","src":"18200:25:17"},"nativeSrc":"18200:25:17","nodeType":"YulExpressionStatement","src":"18200:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:17","nodeType":"YulIdentifier","src":"18249:3:17"},{"kind":"number","nativeSrc":"18254:4:17","nodeType":"YulLiteral","src":"18254:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:17","nodeType":"YulIdentifier","src":"18245:3:17"},"nativeSrc":"18245:14:17","nodeType":"YulFunctionCall","src":"18245:14:17"},{"name":"m","nativeSrc":"18261:1:17","nodeType":"YulIdentifier","src":"18261:1:17"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:17","nodeType":"YulIdentifier","src":"18238:6:17"},"nativeSrc":"18238:25:17","nodeType":"YulFunctionCall","src":"18238:25:17"},"nativeSrc":"18238:25:17","nodeType":"YulExpressionStatement","src":"18238:25:17"},{"nativeSrc":"18425:57:17","nodeType":"YulAssignment","src":"18425:57:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:17","nodeType":"YulIdentifier","src":"18447:3:17"},"nativeSrc":"18447:5:17","nodeType":"YulFunctionCall","src":"18447:5:17"},{"kind":"number","nativeSrc":"18454:4:17","nodeType":"YulLiteral","src":"18454:4:17","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:17","nodeType":"YulIdentifier","src":"18460:3:17"},{"kind":"number","nativeSrc":"18465:4:17","nodeType":"YulLiteral","src":"18465:4:17","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:17","nodeType":"YulLiteral","src":"18471:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:17","nodeType":"YulLiteral","src":"18477:4:17","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:17","nodeType":"YulIdentifier","src":"18436:10:17"},"nativeSrc":"18436:46:17","nodeType":"YulFunctionCall","src":"18436:46:17"},"variableNames":[{"name":"success","nativeSrc":"18425:7:17","nodeType":"YulIdentifier","src":"18425:7:17"}]},{"nativeSrc":"18495:21:17","nodeType":"YulAssignment","src":"18495:21:17","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:17","nodeType":"YulLiteral","src":"18511:4:17","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:17","nodeType":"YulIdentifier","src":"18505:5:17"},"nativeSrc":"18505:11:17","nodeType":"YulFunctionCall","src":"18505:11:17"},"variableNames":[{"name":"result","nativeSrc":"18495:6:17","nodeType":"YulIdentifier","src":"18495:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4418,"isOffset":false,"isSlot":false,"src":"18185:1:17","valueSize":1},{"declaration":4420,"isOffset":false,"isSlot":false,"src":"18223:1:17","valueSize":1},{"declaration":4422,"isOffset":false,"isSlot":false,"src":"18261:1:17","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"18495:6:17","valueSize":1},{"declaration":4425,"isOffset":false,"isSlot":false,"src":"18425:7:17","valueSize":1}],"flags":["memory-safe"],"id":4437,"nodeType":"InlineAssembly","src":"17088:1438:17"}]},"documentation":{"id":4416,"nodeType":"StructuredDocumentation","src":"16191:738:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4439,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:17","nodeType":"FunctionDefinition","parameters":{"id":4423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4418,"mutability":"mutable","name":"b","nameLocation":"16961:1:17","nodeType":"VariableDeclaration","scope":4439,"src":"16953:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4417,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4420,"mutability":"mutable","name":"e","nameLocation":"16972:1:17","nodeType":"VariableDeclaration","scope":4439,"src":"16964:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4422,"mutability":"mutable","name":"m","nameLocation":"16983:1:17","nodeType":"VariableDeclaration","scope":4439,"src":"16975:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4421,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:17"},"returnParameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4425,"mutability":"mutable","name":"success","nameLocation":"17014:7:17","nodeType":"VariableDeclaration","scope":4439,"src":"17009:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4424,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4427,"mutability":"mutable","name":"result","nameLocation":"17031:6:17","nodeType":"VariableDeclaration","scope":4439,"src":"17023:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:17"},"scope":5229,"src":"16934:1598:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4474,"nodeType":"Block","src":"18729:179:17","statements":[{"assignments":[4452,4454],"declarations":[{"constant":false,"id":4452,"mutability":"mutable","name":"success","nameLocation":"18745:7:17","nodeType":"VariableDeclaration","scope":4474,"src":"18740:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4451,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4454,"mutability":"mutable","name":"result","nameLocation":"18767:6:17","nodeType":"VariableDeclaration","scope":4474,"src":"18754:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4453,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4460,"initialValue":{"arguments":[{"id":4456,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"18787:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4457,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"18790:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4458,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"18793:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4455,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4439,4521],"referencedDeclaration":4521,"src":"18777:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:17"},{"condition":{"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:17","subExpression":{"id":4461,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"18810:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4471,"nodeType":"IfStatement","src":"18805:74:17","trueBody":{"id":4470,"nodeType":"Block","src":"18819:60:17","statements":[{"expression":{"arguments":[{"expression":{"id":4466,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"18845:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1648_$","typeString":"type(library Panic)"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1615,"src":"18845:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4463,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"18833:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1648_$","typeString":"type(library Panic)"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"18833:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4469,"nodeType":"ExpressionStatement","src":"18833:35:17"}]}},{"expression":{"id":4472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"18895:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4450,"id":4473,"nodeType":"Return","src":"18888:13:17"}]},"documentation":{"id":4440,"nodeType":"StructuredDocumentation","src":"18538:85:17","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4475,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:17","nodeType":"FunctionDefinition","parameters":{"id":4447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4442,"mutability":"mutable","name":"b","nameLocation":"18657:1:17","nodeType":"VariableDeclaration","scope":4475,"src":"18644:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4441,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4444,"mutability":"mutable","name":"e","nameLocation":"18673:1:17","nodeType":"VariableDeclaration","scope":4475,"src":"18660:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4443,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4446,"mutability":"mutable","name":"m","nameLocation":"18689:1:17","nodeType":"VariableDeclaration","scope":4475,"src":"18676:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4445,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:17"},"returnParameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4475,"src":"18715:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4448,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:17"},"scope":5229,"src":"18628:280:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4520,"nodeType":"Block","src":"19162:771:17","statements":[{"condition":{"arguments":[{"id":4490,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"19187:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4489,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"19176:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4499,"nodeType":"IfStatement","src":"19172:47:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4493,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4488,"id":4498,"nodeType":"Return","src":"19191:28:17"}},{"assignments":[4501],"declarations":[{"constant":false,"id":4501,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:17","nodeType":"VariableDeclaration","scope":4520,"src":"19230:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4504,"initialValue":{"expression":{"id":4502,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"19245:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:17","memberName":"length","nodeType":"MemberAccess","src":"19245:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:17"},{"expression":{"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4487,"src":"19335:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4508,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"19361:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:17","memberName":"length","nodeType":"MemberAccess","src":"19361:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4510,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"19371:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:17","memberName":"length","nodeType":"MemberAccess","src":"19371:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4512,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"19381:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4513,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"19387:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4514,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"19390:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4515,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"19393:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4506,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4518,"nodeType":"ExpressionStatement","src":"19335:60:17"},{"AST":{"nativeSrc":"19431:496:17","nodeType":"YulBlock","src":"19431:496:17","statements":[{"nativeSrc":"19445:32:17","nodeType":"YulVariableDeclaration","src":"19445:32:17","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:17","nodeType":"YulIdentifier","src":"19464:6:17"},{"kind":"number","nativeSrc":"19472:4:17","nodeType":"YulLiteral","src":"19472:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:17","nodeType":"YulIdentifier","src":"19460:3:17"},"nativeSrc":"19460:17:17","nodeType":"YulFunctionCall","src":"19460:17:17"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:17","nodeType":"YulTypedName","src":"19449:7:17","type":""}]},{"nativeSrc":"19567:73:17","nodeType":"YulAssignment","src":"19567:73:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:17","nodeType":"YulIdentifier","src":"19589:3:17"},"nativeSrc":"19589:5:17","nodeType":"YulFunctionCall","src":"19589:5:17"},{"kind":"number","nativeSrc":"19596:4:17","nodeType":"YulLiteral","src":"19596:4:17","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:17","nodeType":"YulIdentifier","src":"19602:7:17"},{"arguments":[{"name":"result","nativeSrc":"19617:6:17","nodeType":"YulIdentifier","src":"19617:6:17"}],"functionName":{"name":"mload","nativeSrc":"19611:5:17","nodeType":"YulIdentifier","src":"19611:5:17"},"nativeSrc":"19611:13:17","nodeType":"YulFunctionCall","src":"19611:13:17"},{"name":"dataPtr","nativeSrc":"19626:7:17","nodeType":"YulIdentifier","src":"19626:7:17"},{"name":"mLen","nativeSrc":"19635:4:17","nodeType":"YulIdentifier","src":"19635:4:17"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:17","nodeType":"YulIdentifier","src":"19578:10:17"},"nativeSrc":"19578:62:17","nodeType":"YulFunctionCall","src":"19578:62:17"},"variableNames":[{"name":"success","nativeSrc":"19567:7:17","nodeType":"YulIdentifier","src":"19567:7:17"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:17","nodeType":"YulIdentifier","src":"19796:6:17"},{"name":"mLen","nativeSrc":"19804:4:17","nodeType":"YulIdentifier","src":"19804:4:17"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:17","nodeType":"YulIdentifier","src":"19789:6:17"},"nativeSrc":"19789:20:17","nodeType":"YulFunctionCall","src":"19789:20:17"},"nativeSrc":"19789:20:17","nodeType":"YulExpressionStatement","src":"19789:20:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:17","nodeType":"YulLiteral","src":"19892:4:17","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:17","nodeType":"YulIdentifier","src":"19902:7:17"},{"name":"mLen","nativeSrc":"19911:4:17","nodeType":"YulIdentifier","src":"19911:4:17"}],"functionName":{"name":"add","nativeSrc":"19898:3:17","nodeType":"YulIdentifier","src":"19898:3:17"},"nativeSrc":"19898:18:17","nodeType":"YulFunctionCall","src":"19898:18:17"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:17","nodeType":"YulIdentifier","src":"19885:6:17"},"nativeSrc":"19885:32:17","nodeType":"YulFunctionCall","src":"19885:32:17"},"nativeSrc":"19885:32:17","nodeType":"YulExpressionStatement","src":"19885:32:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":4501,"isOffset":false,"isSlot":false,"src":"19635:4:17","valueSize":1},{"declaration":4501,"isOffset":false,"isSlot":false,"src":"19804:4:17","valueSize":1},{"declaration":4501,"isOffset":false,"isSlot":false,"src":"19911:4:17","valueSize":1},{"declaration":4487,"isOffset":false,"isSlot":false,"src":"19464:6:17","valueSize":1},{"declaration":4487,"isOffset":false,"isSlot":false,"src":"19617:6:17","valueSize":1},{"declaration":4487,"isOffset":false,"isSlot":false,"src":"19796:6:17","valueSize":1},{"declaration":4485,"isOffset":false,"isSlot":false,"src":"19567:7:17","valueSize":1}],"flags":["memory-safe"],"id":4519,"nodeType":"InlineAssembly","src":"19406:521:17"}]},"documentation":{"id":4476,"nodeType":"StructuredDocumentation","src":"18914:88:17","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4521,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:17","nodeType":"FunctionDefinition","parameters":{"id":4483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4478,"mutability":"mutable","name":"b","nameLocation":"19048:1:17","nodeType":"VariableDeclaration","scope":4521,"src":"19035:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4477,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4480,"mutability":"mutable","name":"e","nameLocation":"19072:1:17","nodeType":"VariableDeclaration","scope":4521,"src":"19059:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4479,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4482,"mutability":"mutable","name":"m","nameLocation":"19096:1:17","nodeType":"VariableDeclaration","scope":4521,"src":"19083:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4481,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:17"},"returnParameters":{"id":4488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"success","nameLocation":"19132:7:17","nodeType":"VariableDeclaration","scope":4521,"src":"19127:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4484,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4487,"mutability":"mutable","name":"result","nameLocation":"19154:6:17","nodeType":"VariableDeclaration","scope":4521,"src":"19141:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4486,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:17"},"scope":5229,"src":"19007:926:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4553,"nodeType":"Block","src":"20088:176:17","statements":[{"body":{"id":4549,"nodeType":"Block","src":"20145:92:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4540,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"20163:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4542,"indexExpression":{"id":4541,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"20173:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4548,"nodeType":"IfStatement","src":"20159:68:17","trueBody":{"id":4547,"nodeType":"Block","src":"20182:45:17","statements":[{"expression":{"hexValue":"66616c7365","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4528,"id":4546,"nodeType":"Return","src":"20200:12:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"20118:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4534,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"20122:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:17","memberName":"length","nodeType":"MemberAccess","src":"20122:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4550,"initializationExpression":{"assignments":[4530],"declarations":[{"constant":false,"id":4530,"mutability":"mutable","name":"i","nameLocation":"20111:1:17","nodeType":"VariableDeclaration","scope":4550,"src":"20103:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4532,"initialValue":{"hexValue":"30","id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:17","subExpression":{"id":4537,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"20142:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4539,"nodeType":"ExpressionStatement","src":"20140:3:17"},"nodeType":"ForStatement","src":"20098:139:17"},{"expression":{"hexValue":"74727565","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4528,"id":4552,"nodeType":"Return","src":"20246:11:17"}]},"documentation":{"id":4522,"nodeType":"StructuredDocumentation","src":"19939:72:17","text":" @dev Returns whether the provided byte array is zero."},"id":4554,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:17","nodeType":"FunctionDefinition","parameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4524,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:17","nodeType":"VariableDeclaration","scope":4554,"src":"20036:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4523,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:17"},"returnParameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4554,"src":"20082:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4526,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:17"},"scope":5229,"src":"20016:248:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4772,"nodeType":"Block","src":"20624:5124:17","statements":[{"id":4771,"nodeType":"UncheckedBlock","src":"20634:5108:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4562,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"20728:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4568,"nodeType":"IfStatement","src":"20724:53:17","trueBody":{"id":4567,"nodeType":"Block","src":"20736:41:17","statements":[{"expression":{"id":4565,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"20761:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4561,"id":4566,"nodeType":"Return","src":"20754:8:17"}]}},{"assignments":[4570],"declarations":[{"constant":false,"id":4570,"mutability":"mutable","name":"aa","nameLocation":"21712:2:17","nodeType":"VariableDeclaration","scope":4771,"src":"21704:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4572,"initialValue":{"id":4571,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"21717:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:17"},{"assignments":[4574],"declarations":[{"constant":false,"id":4574,"mutability":"mutable","name":"xn","nameLocation":"21740:2:17","nodeType":"VariableDeclaration","scope":4771,"src":"21732:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4576,"initialValue":{"hexValue":"31","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4577,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"21765:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4592,"nodeType":"IfStatement","src":"21761:92:17","trueBody":{"id":4591,"nodeType":"Block","src":"21783:70:17","statements":[{"expression":{"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4583,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"21801:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4586,"nodeType":"ExpressionStatement","src":"21801:10:17"},{"expression":{"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4587,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"21829:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4590,"nodeType":"ExpressionStatement","src":"21829:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"21870:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4608,"nodeType":"IfStatement","src":"21866:90:17","trueBody":{"id":4607,"nodeType":"Block","src":"21887:69:17","statements":[{"expression":{"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4599,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"21905:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4602,"nodeType":"ExpressionStatement","src":"21905:9:17"},{"expression":{"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4603,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"21932:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4606,"nodeType":"ExpressionStatement","src":"21932:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4609,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"21973:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4624,"nodeType":"IfStatement","src":"21969:90:17","trueBody":{"id":4623,"nodeType":"Block","src":"21990:69:17","statements":[{"expression":{"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4615,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22008:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4618,"nodeType":"ExpressionStatement","src":"22008:9:17"},{"expression":{"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4619,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"22035:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4622,"nodeType":"ExpressionStatement","src":"22035:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4625,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22076:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4640,"nodeType":"IfStatement","src":"22072:89:17","trueBody":{"id":4639,"nodeType":"Block","src":"22093:68:17","statements":[{"expression":{"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4631,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22111:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4634,"nodeType":"ExpressionStatement","src":"22111:9:17"},{"expression":{"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4635,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"22138:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4638,"nodeType":"ExpressionStatement","src":"22138:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4641,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22178:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4656,"nodeType":"IfStatement","src":"22174:87:17","trueBody":{"id":4655,"nodeType":"Block","src":"22194:67:17","statements":[{"expression":{"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4647,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22212:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4650,"nodeType":"ExpressionStatement","src":"22212:8:17"},{"expression":{"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4651,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"22238:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4654,"nodeType":"ExpressionStatement","src":"22238:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4657,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22278:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4672,"nodeType":"IfStatement","src":"22274:87:17","trueBody":{"id":4671,"nodeType":"Block","src":"22294:67:17","statements":[{"expression":{"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4663,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22312:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4666,"nodeType":"ExpressionStatement","src":"22312:8:17"},{"expression":{"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4667,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"22338:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4670,"nodeType":"ExpressionStatement","src":"22338:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4673,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22378:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4684,"nodeType":"IfStatement","src":"22374:61:17","trueBody":{"id":4683,"nodeType":"Block","src":"22394:41:17","statements":[{"expression":{"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4679,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"22412:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4682,"nodeType":"ExpressionStatement","src":"22412:8:17"}]}},{"expression":{"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4685,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"22855:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4687,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"22865:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4693,"nodeType":"ExpressionStatement","src":"22855:18:17"},{"expression":{"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4694,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"24760:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4695,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"24766:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4696,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"24771:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4697,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"24775:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4704,"nodeType":"ExpressionStatement","src":"24760:23:17"},{"expression":{"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4705,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"24869:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4706,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"24875:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4707,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"24880:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4708,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"24884:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4711,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4715,"nodeType":"ExpressionStatement","src":"24869:23:17"},{"expression":{"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4716,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"24980:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4717,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"24986:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"24991:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4719,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"24995:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4726,"nodeType":"ExpressionStatement","src":"24980:23:17"},{"expression":{"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4727,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"25089:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4728,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"25095:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4729,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"25100:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4730,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"25104:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4737,"nodeType":"ExpressionStatement","src":"25089:23:17"},{"expression":{"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4738,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"25199:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4739,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"25205:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"25210:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4741,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"25214:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4748,"nodeType":"ExpressionStatement","src":"25199:23:17"},{"expression":{"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4749,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"25309:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4750,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"25315:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4751,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"25320:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4752,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"25324:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4759,"nodeType":"ExpressionStatement","src":"25309:23:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4760,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"25698:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"25719:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4764,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"25724:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4765,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"25728:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4761,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"25703:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"25703:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4561,"id":4770,"nodeType":"Return","src":"25691:40:17"}]}]},"documentation":{"id":4555,"nodeType":"StructuredDocumentation","src":"20270:292:17","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4773,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:17","nodeType":"FunctionDefinition","parameters":{"id":4558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4557,"mutability":"mutable","name":"a","nameLocation":"20589:1:17","nodeType":"VariableDeclaration","scope":4773,"src":"20581:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4556,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:17"},"returnParameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4773,"src":"20615:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:17"},"scope":5229,"src":"20567:5181:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4806,"nodeType":"Block","src":"25921:171:17","statements":[{"id":4805,"nodeType":"UncheckedBlock","src":"25931:155:17","statements":[{"assignments":[4785],"declarations":[{"constant":false,"id":4785,"mutability":"mutable","name":"result","nameLocation":"25963:6:17","nodeType":"VariableDeclaration","scope":4805,"src":"25955:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4789,"initialValue":{"arguments":[{"id":4787,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"25977:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4786,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4773,4807],"referencedDeclaration":4773,"src":"25972:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"26000:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4794,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"26042:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}],"id":4793,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"26025:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3620_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"26055:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"26064:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"26073:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4791,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"26009:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"26009:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4783,"id":4804,"nodeType":"Return","src":"25993:82:17"}]}]},"documentation":{"id":4774,"nodeType":"StructuredDocumentation","src":"25754:86:17","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4807,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:17","nodeType":"FunctionDefinition","parameters":{"id":4780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4776,"mutability":"mutable","name":"a","nameLocation":"25867:1:17","nodeType":"VariableDeclaration","scope":4807,"src":"25859:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4775,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4779,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:17","nodeType":"VariableDeclaration","scope":4807,"src":"25870:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"},"typeName":{"id":4778,"nodeType":"UserDefinedTypeName","pathNode":{"id":4777,"name":"Rounding","nameLocations":["25870:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3620,"src":"25870:8:17"},"referencedDeclaration":3620,"src":"25870:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:17"},"returnParameters":{"id":4783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4807,"src":"25912:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4781,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:17"},"scope":5229,"src":"25845:247:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4897,"nodeType":"Block","src":"26281:2334:17","statements":[{"expression":{"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4815,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"26363:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4818,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"26383:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4816,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"26367:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"26367:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4825,"nodeType":"ExpressionStatement","src":"26363:64:17"},{"expression":{"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4826,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"26503:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4829,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"26525:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4830,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"26530:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4827,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"26508:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"26508:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:17","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4839,"nodeType":"ExpressionStatement","src":"26503:56:17"},{"expression":{"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4840,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"26634:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4843,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"26656:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4844,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"26661:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4841,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"26639:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"26639:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:17","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4853,"nodeType":"ExpressionStatement","src":"26634:48:17"},{"expression":{"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4854,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"26757:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4857,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"26779:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4858,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"26784:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4855,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"26762:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"26762:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4867,"nodeType":"ExpressionStatement","src":"26757:44:17"},{"expression":{"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4868,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"26874:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4871,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"26896:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4872,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"26901:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4869,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"26879:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"26879:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4881,"nodeType":"ExpressionStatement","src":"26874:42:17"},{"expression":{"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4882,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"26988:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4885,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"27010:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4886,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"27015:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4883,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"26993:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"26993:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4895,"nodeType":"ExpressionStatement","src":"26988:41:17"},{"AST":{"nativeSrc":"28490:119:17","nodeType":"YulBlock","src":"28490:119:17","statements":[{"nativeSrc":"28504:95:17","nodeType":"YulAssignment","src":"28504:95:17","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:17","nodeType":"YulIdentifier","src":"28512:1:17"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:17","nodeType":"YulIdentifier","src":"28524:1:17"},{"name":"x","nativeSrc":"28527:1:17","nodeType":"YulIdentifier","src":"28527:1:17"}],"functionName":{"name":"shr","nativeSrc":"28520:3:17","nodeType":"YulIdentifier","src":"28520:3:17"},"nativeSrc":"28520:9:17","nodeType":"YulFunctionCall","src":"28520:9:17"},{"kind":"number","nativeSrc":"28531:66:17","nodeType":"YulLiteral","src":"28531:66:17","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:17","nodeType":"YulIdentifier","src":"28515:4:17"},"nativeSrc":"28515:83:17","nodeType":"YulFunctionCall","src":"28515:83:17"}],"functionName":{"name":"or","nativeSrc":"28509:2:17","nodeType":"YulIdentifier","src":"28509:2:17"},"nativeSrc":"28509:90:17","nodeType":"YulFunctionCall","src":"28509:90:17"},"variableNames":[{"name":"r","nativeSrc":"28504:1:17","nodeType":"YulIdentifier","src":"28504:1:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4813,"isOffset":false,"isSlot":false,"src":"28504:1:17","valueSize":1},{"declaration":4813,"isOffset":false,"isSlot":false,"src":"28512:1:17","valueSize":1},{"declaration":4813,"isOffset":false,"isSlot":false,"src":"28524:1:17","valueSize":1},{"declaration":4810,"isOffset":false,"isSlot":false,"src":"28527:1:17","valueSize":1}],"flags":["memory-safe"],"id":4896,"nodeType":"InlineAssembly","src":"28465:144:17"}]},"documentation":{"id":4808,"nodeType":"StructuredDocumentation","src":"26098:119:17","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4898,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:17","nodeType":"FunctionDefinition","parameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4810,"mutability":"mutable","name":"x","nameLocation":"26244:1:17","nodeType":"VariableDeclaration","scope":4898,"src":"26236:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4809,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:17"},"returnParameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"r","nameLocation":"26278:1:17","nodeType":"VariableDeclaration","scope":4898,"src":"26270:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4812,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:17"},"scope":5229,"src":"26222:2393:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4931,"nodeType":"Block","src":"28848:175:17","statements":[{"id":4930,"nodeType":"UncheckedBlock","src":"28858:159:17","statements":[{"assignments":[4910],"declarations":[{"constant":false,"id":4910,"mutability":"mutable","name":"result","nameLocation":"28890:6:17","nodeType":"VariableDeclaration","scope":4930,"src":"28882:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4909,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4914,"initialValue":{"arguments":[{"id":4912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"28904:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4911,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4898,4932],"referencedDeclaration":4898,"src":"28899:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"28931:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4919,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"28973:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}],"id":4918,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"28956:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3620_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4910,"src":"28991:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"29000:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4916,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"28940:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"28940:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4908,"id":4929,"nodeType":"Return","src":"28924:82:17"}]}]},"documentation":{"id":4899,"nodeType":"StructuredDocumentation","src":"28621:142:17","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4932,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:17","nodeType":"FunctionDefinition","parameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4901,"mutability":"mutable","name":"value","nameLocation":"28790:5:17","nodeType":"VariableDeclaration","scope":4932,"src":"28782:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4900,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4904,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:17","nodeType":"VariableDeclaration","scope":4932,"src":"28797:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"},"typeName":{"id":4903,"nodeType":"UserDefinedTypeName","pathNode":{"id":4902,"name":"Rounding","nameLocations":["28797:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3620,"src":"28797:8:17"},"referencedDeclaration":3620,"src":"28797:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:17"},"returnParameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4932,"src":"28839:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4906,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:17"},"scope":5229,"src":"28768:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5060,"nodeType":"Block","src":"29216:854:17","statements":[{"assignments":[4941],"declarations":[{"constant":false,"id":4941,"mutability":"mutable","name":"result","nameLocation":"29234:6:17","nodeType":"VariableDeclaration","scope":5060,"src":"29226:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4940,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4943,"initialValue":{"hexValue":"30","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:17"},{"id":5057,"nodeType":"UncheckedBlock","src":"29254:787:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"29282:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4960,"nodeType":"IfStatement","src":"29278:103:17","trueBody":{"id":4959,"nodeType":"Block","src":"29301:80:17","statements":[{"expression":{"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"29319:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4954,"nodeType":"ExpressionStatement","src":"29319:17:17"},{"expression":{"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4955,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"29354:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4958,"nodeType":"ExpressionStatement","src":"29354:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"29398:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4977,"nodeType":"IfStatement","src":"29394:103:17","trueBody":{"id":4976,"nodeType":"Block","src":"29417:80:17","statements":[{"expression":{"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"29435:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4971,"nodeType":"ExpressionStatement","src":"29435:17:17"},{"expression":{"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4972,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"29470:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4975,"nodeType":"ExpressionStatement","src":"29470:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"29514:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4994,"nodeType":"IfStatement","src":"29510:103:17","trueBody":{"id":4993,"nodeType":"Block","src":"29533:80:17","statements":[{"expression":{"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"29551:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4988,"nodeType":"ExpressionStatement","src":"29551:17:17"},{"expression":{"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4989,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"29586:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4992,"nodeType":"ExpressionStatement","src":"29586:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"29630:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5011,"nodeType":"IfStatement","src":"29626:100:17","trueBody":{"id":5010,"nodeType":"Block","src":"29648:78:17","statements":[{"expression":{"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"29666:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5005,"nodeType":"ExpressionStatement","src":"29666:16:17"},{"expression":{"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"29700:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5009,"nodeType":"ExpressionStatement","src":"29700:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"29743:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5028,"nodeType":"IfStatement","src":"29739:100:17","trueBody":{"id":5027,"nodeType":"Block","src":"29761:78:17","statements":[{"expression":{"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"29779:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5022,"nodeType":"ExpressionStatement","src":"29779:16:17"},{"expression":{"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"29813:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5026,"nodeType":"ExpressionStatement","src":"29813:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"29856:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5045,"nodeType":"IfStatement","src":"29852:100:17","trueBody":{"id":5044,"nodeType":"Block","src":"29874:78:17","statements":[{"expression":{"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"29892:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5039,"nodeType":"ExpressionStatement","src":"29892:16:17"},{"expression":{"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5040,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"29926:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5043,"nodeType":"ExpressionStatement","src":"29926:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"29969:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5056,"nodeType":"IfStatement","src":"29965:66:17","trueBody":{"id":5055,"nodeType":"Block","src":"29987:44:17","statements":[{"expression":{"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"30005:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5054,"nodeType":"ExpressionStatement","src":"30005:11:17"}]}}]},{"expression":{"id":5058,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"30057:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4939,"id":5059,"nodeType":"Return","src":"30050:13:17"}]},"documentation":{"id":4933,"nodeType":"StructuredDocumentation","src":"29029:120:17","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5061,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:17","nodeType":"FunctionDefinition","parameters":{"id":4936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4935,"mutability":"mutable","name":"value","nameLocation":"29177:5:17","nodeType":"VariableDeclaration","scope":5061,"src":"29169:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4934,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:17"},"returnParameters":{"id":4939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5061,"src":"29207:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4937,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:17"},"scope":5229,"src":"29154:916:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5094,"nodeType":"Block","src":"30305:177:17","statements":[{"id":5093,"nodeType":"UncheckedBlock","src":"30315:161:17","statements":[{"assignments":[5073],"declarations":[{"constant":false,"id":5073,"mutability":"mutable","name":"result","nameLocation":"30347:6:17","nodeType":"VariableDeclaration","scope":5093,"src":"30339:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5072,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5077,"initialValue":{"arguments":[{"id":5075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"30362:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5074,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5061,5095],"referencedDeclaration":5061,"src":"30356:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"30389:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5082,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"30431:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}],"id":5081,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"30414:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3620_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5085,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"30450:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"30459:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5079,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"30398:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"30398:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5071,"id":5092,"nodeType":"Return","src":"30382:83:17"}]}]},"documentation":{"id":5062,"nodeType":"StructuredDocumentation","src":"30076:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5095,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:17","nodeType":"FunctionDefinition","parameters":{"id":5068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"value","nameLocation":"30247:5:17","nodeType":"VariableDeclaration","scope":5095,"src":"30239:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5067,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:17","nodeType":"VariableDeclaration","scope":5095,"src":"30254:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"},"typeName":{"id":5066,"nodeType":"UserDefinedTypeName","pathNode":{"id":5065,"name":"Rounding","nameLocations":["30254:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3620,"src":"30254:8:17"},"referencedDeclaration":3620,"src":"30254:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:17"},"returnParameters":{"id":5071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5095,"src":"30296:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5069,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:17"},"scope":5229,"src":"30224:258:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5171,"nodeType":"Block","src":"30800:675:17","statements":[{"expression":{"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5103,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"30882:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5106,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"30902:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5104,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"30886:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"30886:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5113,"nodeType":"ExpressionStatement","src":"30882:64:17"},{"expression":{"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5114,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"31022:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5117,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"31044:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5118,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"31049:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5120,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5115,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"31027:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"31027:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:17","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5127,"nodeType":"ExpressionStatement","src":"31022:56:17"},{"expression":{"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5128,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"31153:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5131,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"31175:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5132,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"31180:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5129,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"31158:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"31158:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:17","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5141,"nodeType":"ExpressionStatement","src":"31153:48:17"},{"expression":{"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5142,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"31276:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5145,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"31298:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5146,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"31303:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5143,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"31281:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"31281:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5155,"nodeType":"ExpressionStatement","src":"31276:44:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5156,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"31426:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5159,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5162,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"31453:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5163,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"31458:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5160,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"31436:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"31436:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5102,"id":5170,"nodeType":"Return","src":"31418:50:17"}]},"documentation":{"id":5096,"nodeType":"StructuredDocumentation","src":"30488:246:17","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5172,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:17","nodeType":"FunctionDefinition","parameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5098,"mutability":"mutable","name":"x","nameLocation":"30763:1:17","nodeType":"VariableDeclaration","scope":5172,"src":"30755:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5097,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:17"},"returnParameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5101,"mutability":"mutable","name":"r","nameLocation":"30797:1:17","nodeType":"VariableDeclaration","scope":5172,"src":"30789:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5100,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:17"},"scope":5229,"src":"30739:736:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5208,"nodeType":"Block","src":"31712:184:17","statements":[{"id":5207,"nodeType":"UncheckedBlock","src":"31722:168:17","statements":[{"assignments":[5184],"declarations":[{"constant":false,"id":5184,"mutability":"mutable","name":"result","nameLocation":"31754:6:17","nodeType":"VariableDeclaration","scope":5207,"src":"31746:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5183,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5188,"initialValue":{"arguments":[{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"31770:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5185,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5172,5209],"referencedDeclaration":5172,"src":"31763:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5189,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"31797:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5193,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"31839:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}],"id":5192,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"31822:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3620_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"31858:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"31873:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5190,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"31806:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"31806:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5182,"id":5206,"nodeType":"Return","src":"31790:89:17"}]}]},"documentation":{"id":5173,"nodeType":"StructuredDocumentation","src":"31481:144:17","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5209,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:17","nodeType":"FunctionDefinition","parameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"value","nameLocation":"31654:5:17","nodeType":"VariableDeclaration","scope":5209,"src":"31646:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5174,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5178,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:17","nodeType":"VariableDeclaration","scope":5209,"src":"31661:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"},"typeName":{"id":5177,"nodeType":"UserDefinedTypeName","pathNode":{"id":5176,"name":"Rounding","nameLocations":["31661:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3620,"src":"31661:8:17"},"referencedDeclaration":3620,"src":"31661:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:17"},"returnParameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5209,"src":"31703:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5180,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:17"},"scope":5229,"src":"31630:266:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5227,"nodeType":"Block","src":"32094:48:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5220,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"32117:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}],"id":5219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5218,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:17","typeDescriptions":{}}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5217,"id":5226,"nodeType":"Return","src":"32104:31:17"}]},"documentation":{"id":5210,"nodeType":"StructuredDocumentation","src":"31902:113:17","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5228,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:17","nodeType":"FunctionDefinition","parameters":{"id":5214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5213,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:17","nodeType":"VariableDeclaration","scope":5228,"src":"32046:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"},"typeName":{"id":5212,"nodeType":"UserDefinedTypeName","pathNode":{"id":5211,"name":"Rounding","nameLocations":["32046:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3620,"src":"32046:8:17"},"referencedDeclaration":3620,"src":"32046:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3620","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:17"},"returnParameters":{"id":5217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5228,"src":"32088:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5215,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:17"},"scope":5229,"src":"32020:122:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5230,"src":"281:31863:17","usedErrors":[],"usedEvents":[]}],"src":"103:32042:17"},"id":17},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6994]},"id":6995,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5232,"nodeType":"StructuredDocumentation","src":"218:550:18","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6994,"linearizedBaseContracts":[6994],"name":"SafeCast","nameLocation":"777:8:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5233,"nodeType":"StructuredDocumentation","src":"792:68:18","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5239,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:18","nodeType":"ErrorDefinition","parameters":{"id":5238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5235,"mutability":"mutable","name":"bits","nameLocation":"908:4:18","nodeType":"VariableDeclaration","scope":5239,"src":"902:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5234,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5237,"mutability":"mutable","name":"value","nameLocation":"922:5:18","nodeType":"VariableDeclaration","scope":5239,"src":"914:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5236,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:18"},"src":"865:64:18"},{"documentation":{"id":5240,"nodeType":"StructuredDocumentation","src":"935:75:18","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5244,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:18","nodeType":"ErrorDefinition","parameters":{"id":5243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5242,"mutability":"mutable","name":"value","nameLocation":"1056:5:18","nodeType":"VariableDeclaration","scope":5244,"src":"1049:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5241,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:18"},"src":"1015:48:18"},{"documentation":{"id":5245,"nodeType":"StructuredDocumentation","src":"1069:67:18","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5251,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:18","nodeType":"ErrorDefinition","parameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5247,"mutability":"mutable","name":"bits","nameLocation":"1183:4:18","nodeType":"VariableDeclaration","scope":5251,"src":"1177:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5246,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5249,"mutability":"mutable","name":"value","nameLocation":"1196:5:18","nodeType":"VariableDeclaration","scope":5251,"src":"1189:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5248,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:18"},"src":"1141:62:18"},{"documentation":{"id":5252,"nodeType":"StructuredDocumentation","src":"1209:75:18","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5256,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:18","nodeType":"ErrorDefinition","parameters":{"id":5255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5254,"mutability":"mutable","name":"value","nameLocation":"1331:5:18","nodeType":"VariableDeclaration","scope":5256,"src":"1323:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:18"},"src":"1289:49:18"},{"body":{"id":5283,"nodeType":"Block","src":"1695:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"1709:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5266,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5265,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:18","memberName":"max","nodeType":"MemberAccess","src":"1717:17:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5277,"nodeType":"IfStatement","src":"1705:105:18","trueBody":{"id":5276,"nodeType":"Block","src":"1736:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"1793:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5271,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"1757:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5275,"nodeType":"RevertStatement","src":"1750:49:18"}]}},{"expression":{"arguments":[{"id":5280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"1834:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5278,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:18","typeDescriptions":{}}},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5263,"id":5282,"nodeType":"Return","src":"1819:21:18"}]},"documentation":{"id":5257,"nodeType":"StructuredDocumentation","src":"1344:280:18","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5284,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:18","nodeType":"FunctionDefinition","parameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"value","nameLocation":"1656:5:18","nodeType":"VariableDeclaration","scope":5284,"src":"1648:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:18"},"returnParameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5284,"src":"1686:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5261,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:18"},"scope":6994,"src":"1629:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5311,"nodeType":"Block","src":"2204:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"2218:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5294,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5293,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:18","memberName":"max","nodeType":"MemberAccess","src":"2226:17:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5305,"nodeType":"IfStatement","src":"2214:105:18","trueBody":{"id":5304,"nodeType":"Block","src":"2245:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"2302:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5299,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"2266:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5303,"nodeType":"RevertStatement","src":"2259:49:18"}]}},{"expression":{"arguments":[{"id":5308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"2343:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5306,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:18","typeDescriptions":{}}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5291,"id":5310,"nodeType":"Return","src":"2328:21:18"}]},"documentation":{"id":5285,"nodeType":"StructuredDocumentation","src":"1853:280:18","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5312,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:18","nodeType":"FunctionDefinition","parameters":{"id":5288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5287,"mutability":"mutable","name":"value","nameLocation":"2165:5:18","nodeType":"VariableDeclaration","scope":5312,"src":"2157:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5286,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:18"},"returnParameters":{"id":5291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5312,"src":"2195:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5289,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:18"},"scope":6994,"src":"2138:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5339,"nodeType":"Block","src":"2713:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"2727:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5322,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5321,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:18","memberName":"max","nodeType":"MemberAccess","src":"2735:17:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5333,"nodeType":"IfStatement","src":"2723:105:18","trueBody":{"id":5332,"nodeType":"Block","src":"2754:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"2811:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5327,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"2775:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5331,"nodeType":"RevertStatement","src":"2768:49:18"}]}},{"expression":{"arguments":[{"id":5336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"2852:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5334,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:18","typeDescriptions":{}}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5319,"id":5338,"nodeType":"Return","src":"2837:21:18"}]},"documentation":{"id":5313,"nodeType":"StructuredDocumentation","src":"2362:280:18","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5340,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:18","nodeType":"FunctionDefinition","parameters":{"id":5316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5315,"mutability":"mutable","name":"value","nameLocation":"2674:5:18","nodeType":"VariableDeclaration","scope":5340,"src":"2666:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5314,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:18"},"returnParameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5340,"src":"2704:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5317,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:18"},"scope":6994,"src":"2647:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5367,"nodeType":"Block","src":"3222:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"3236:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5350,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5349,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:18","memberName":"max","nodeType":"MemberAccess","src":"3244:17:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5361,"nodeType":"IfStatement","src":"3232:105:18","trueBody":{"id":5360,"nodeType":"Block","src":"3263:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"3320:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5355,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"3284:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5359,"nodeType":"RevertStatement","src":"3277:49:18"}]}},{"expression":{"arguments":[{"id":5364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"3361:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5362,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:18","typeDescriptions":{}}},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5347,"id":5366,"nodeType":"Return","src":"3346:21:18"}]},"documentation":{"id":5341,"nodeType":"StructuredDocumentation","src":"2871:280:18","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5368,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:18","nodeType":"FunctionDefinition","parameters":{"id":5344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5343,"mutability":"mutable","name":"value","nameLocation":"3183:5:18","nodeType":"VariableDeclaration","scope":5368,"src":"3175:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5342,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:18"},"returnParameters":{"id":5347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5368,"src":"3213:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5345,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:18"},"scope":6994,"src":"3156:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5395,"nodeType":"Block","src":"3731:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"3745:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5378,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5377,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:18","memberName":"max","nodeType":"MemberAccess","src":"3753:17:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5389,"nodeType":"IfStatement","src":"3741:105:18","trueBody":{"id":5388,"nodeType":"Block","src":"3772:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"3829:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5383,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"3793:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5387,"nodeType":"RevertStatement","src":"3786:49:18"}]}},{"expression":{"arguments":[{"id":5392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"3870:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5390,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:18","typeDescriptions":{}}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5375,"id":5394,"nodeType":"Return","src":"3855:21:18"}]},"documentation":{"id":5369,"nodeType":"StructuredDocumentation","src":"3380:280:18","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5396,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:18","nodeType":"FunctionDefinition","parameters":{"id":5372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5371,"mutability":"mutable","name":"value","nameLocation":"3692:5:18","nodeType":"VariableDeclaration","scope":5396,"src":"3684:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5370,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:18"},"returnParameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5396,"src":"3722:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5373,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:18"},"scope":6994,"src":"3665:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5423,"nodeType":"Block","src":"4240:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"4254:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5406,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5405,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:18","memberName":"max","nodeType":"MemberAccess","src":"4262:17:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5417,"nodeType":"IfStatement","src":"4250:105:18","trueBody":{"id":5416,"nodeType":"Block","src":"4281:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"4338:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5411,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"4302:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5415,"nodeType":"RevertStatement","src":"4295:49:18"}]}},{"expression":{"arguments":[{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"4379:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5418,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:18","typeDescriptions":{}}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5403,"id":5422,"nodeType":"Return","src":"4364:21:18"}]},"documentation":{"id":5397,"nodeType":"StructuredDocumentation","src":"3889:280:18","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5424,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:18","nodeType":"FunctionDefinition","parameters":{"id":5400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"value","nameLocation":"4201:5:18","nodeType":"VariableDeclaration","scope":5424,"src":"4193:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5398,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:18"},"returnParameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5424,"src":"4231:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5401,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:18"},"scope":6994,"src":"4174:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5451,"nodeType":"Block","src":"4749:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"4763:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5434,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5433,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:18","memberName":"max","nodeType":"MemberAccess","src":"4771:17:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5445,"nodeType":"IfStatement","src":"4759:105:18","trueBody":{"id":5444,"nodeType":"Block","src":"4790:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"4847:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5439,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"4811:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5443,"nodeType":"RevertStatement","src":"4804:49:18"}]}},{"expression":{"arguments":[{"id":5448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"4888:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5446,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:18","typeDescriptions":{}}},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5431,"id":5450,"nodeType":"Return","src":"4873:21:18"}]},"documentation":{"id":5425,"nodeType":"StructuredDocumentation","src":"4398:280:18","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5452,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:18","nodeType":"FunctionDefinition","parameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"value","nameLocation":"4710:5:18","nodeType":"VariableDeclaration","scope":5452,"src":"4702:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:18"},"returnParameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5452,"src":"4740:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5429,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:18"},"scope":6994,"src":"4683:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5479,"nodeType":"Block","src":"5258:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"5272:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5462,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5461,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:18","memberName":"max","nodeType":"MemberAccess","src":"5280:17:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5473,"nodeType":"IfStatement","src":"5268:105:18","trueBody":{"id":5472,"nodeType":"Block","src":"5299:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"5356:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5467,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"5320:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5471,"nodeType":"RevertStatement","src":"5313:49:18"}]}},{"expression":{"arguments":[{"id":5476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"5397:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5474,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:18","typeDescriptions":{}}},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5459,"id":5478,"nodeType":"Return","src":"5382:21:18"}]},"documentation":{"id":5453,"nodeType":"StructuredDocumentation","src":"4907:280:18","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5480,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:18","nodeType":"FunctionDefinition","parameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"value","nameLocation":"5219:5:18","nodeType":"VariableDeclaration","scope":5480,"src":"5211:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:18"},"returnParameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5480,"src":"5249:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5457,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:18"},"scope":6994,"src":"5192:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5507,"nodeType":"Block","src":"5767:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"5781:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5490,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5489,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:18","memberName":"max","nodeType":"MemberAccess","src":"5789:17:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5501,"nodeType":"IfStatement","src":"5777:105:18","trueBody":{"id":5500,"nodeType":"Block","src":"5808:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"5865:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5495,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"5829:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5499,"nodeType":"RevertStatement","src":"5822:49:18"}]}},{"expression":{"arguments":[{"id":5504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5483,"src":"5906:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5502,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:18","typeDescriptions":{}}},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5487,"id":5506,"nodeType":"Return","src":"5891:21:18"}]},"documentation":{"id":5481,"nodeType":"StructuredDocumentation","src":"5416:280:18","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5508,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:18","nodeType":"FunctionDefinition","parameters":{"id":5484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"value","nameLocation":"5728:5:18","nodeType":"VariableDeclaration","scope":5508,"src":"5720:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:18"},"returnParameters":{"id":5487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5508,"src":"5758:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5485,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:18"},"scope":6994,"src":"5701:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5535,"nodeType":"Block","src":"6276:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"6290:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5518,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5517,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:18","memberName":"max","nodeType":"MemberAccess","src":"6298:17:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5529,"nodeType":"IfStatement","src":"6286:105:18","trueBody":{"id":5528,"nodeType":"Block","src":"6317:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"6374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5523,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"6338:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5527,"nodeType":"RevertStatement","src":"6331:49:18"}]}},{"expression":{"arguments":[{"id":5532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"6415:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5530,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:18","typeDescriptions":{}}},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5515,"id":5534,"nodeType":"Return","src":"6400:21:18"}]},"documentation":{"id":5509,"nodeType":"StructuredDocumentation","src":"5925:280:18","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5536,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:18","nodeType":"FunctionDefinition","parameters":{"id":5512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"value","nameLocation":"6237:5:18","nodeType":"VariableDeclaration","scope":5536,"src":"6229:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5510,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:18"},"returnParameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5536,"src":"6267:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5513,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:18"},"scope":6994,"src":"6210:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5563,"nodeType":"Block","src":"6785:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"6799:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5546,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5545,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:18","memberName":"max","nodeType":"MemberAccess","src":"6807:17:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5557,"nodeType":"IfStatement","src":"6795:105:18","trueBody":{"id":5556,"nodeType":"Block","src":"6826:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"6883:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5551,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"6847:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5555,"nodeType":"RevertStatement","src":"6840:49:18"}]}},{"expression":{"arguments":[{"id":5560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"6924:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5558,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:18","typeDescriptions":{}}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5543,"id":5562,"nodeType":"Return","src":"6909:21:18"}]},"documentation":{"id":5537,"nodeType":"StructuredDocumentation","src":"6434:280:18","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5564,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:18","nodeType":"FunctionDefinition","parameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"value","nameLocation":"6746:5:18","nodeType":"VariableDeclaration","scope":5564,"src":"6738:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5538,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:18"},"returnParameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5564,"src":"6776:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5541,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:18"},"scope":6994,"src":"6719:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5591,"nodeType":"Block","src":"7294:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"7308:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5574,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5573,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:18","memberName":"max","nodeType":"MemberAccess","src":"7316:17:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5585,"nodeType":"IfStatement","src":"7304:105:18","trueBody":{"id":5584,"nodeType":"Block","src":"7335:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"7392:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5579,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"7356:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5583,"nodeType":"RevertStatement","src":"7349:49:18"}]}},{"expression":{"arguments":[{"id":5588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"7433:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5586,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:18","typeDescriptions":{}}},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5571,"id":5590,"nodeType":"Return","src":"7418:21:18"}]},"documentation":{"id":5565,"nodeType":"StructuredDocumentation","src":"6943:280:18","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5592,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:18","nodeType":"FunctionDefinition","parameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5567,"mutability":"mutable","name":"value","nameLocation":"7255:5:18","nodeType":"VariableDeclaration","scope":5592,"src":"7247:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5566,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:18"},"returnParameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5592,"src":"7285:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5569,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:18"},"scope":6994,"src":"7228:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5619,"nodeType":"Block","src":"7803:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"7817:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5602,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5601,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:18","memberName":"max","nodeType":"MemberAccess","src":"7825:17:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5613,"nodeType":"IfStatement","src":"7813:105:18","trueBody":{"id":5612,"nodeType":"Block","src":"7844:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"7901:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5607,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"7865:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5611,"nodeType":"RevertStatement","src":"7858:49:18"}]}},{"expression":{"arguments":[{"id":5616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"7942:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5614,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:18","typeDescriptions":{}}},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5599,"id":5618,"nodeType":"Return","src":"7927:21:18"}]},"documentation":{"id":5593,"nodeType":"StructuredDocumentation","src":"7452:280:18","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5620,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:18","nodeType":"FunctionDefinition","parameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"value","nameLocation":"7764:5:18","nodeType":"VariableDeclaration","scope":5620,"src":"7756:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5594,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:18"},"returnParameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5620,"src":"7794:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5597,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:18"},"scope":6994,"src":"7737:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5647,"nodeType":"Block","src":"8312:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"8326:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5630,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5629,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:18","memberName":"max","nodeType":"MemberAccess","src":"8334:17:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5641,"nodeType":"IfStatement","src":"8322:105:18","trueBody":{"id":5640,"nodeType":"Block","src":"8353:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"8410:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5635,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"8374:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5639,"nodeType":"RevertStatement","src":"8367:49:18"}]}},{"expression":{"arguments":[{"id":5644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"8451:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5642,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:18","typeDescriptions":{}}},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5627,"id":5646,"nodeType":"Return","src":"8436:21:18"}]},"documentation":{"id":5621,"nodeType":"StructuredDocumentation","src":"7961:280:18","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5648,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:18","nodeType":"FunctionDefinition","parameters":{"id":5624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5623,"mutability":"mutable","name":"value","nameLocation":"8273:5:18","nodeType":"VariableDeclaration","scope":5648,"src":"8265:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:18"},"returnParameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5648,"src":"8303:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5625,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:18"},"scope":6994,"src":"8246:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5675,"nodeType":"Block","src":"8821:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"8835:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5658,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5657,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:18","memberName":"max","nodeType":"MemberAccess","src":"8843:17:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5669,"nodeType":"IfStatement","src":"8831:105:18","trueBody":{"id":5668,"nodeType":"Block","src":"8862:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"8919:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5663,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"8883:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5667,"nodeType":"RevertStatement","src":"8876:49:18"}]}},{"expression":{"arguments":[{"id":5672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"8960:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5670,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:18","typeDescriptions":{}}},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5655,"id":5674,"nodeType":"Return","src":"8945:21:18"}]},"documentation":{"id":5649,"nodeType":"StructuredDocumentation","src":"8470:280:18","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5676,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:18","nodeType":"FunctionDefinition","parameters":{"id":5652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"value","nameLocation":"8782:5:18","nodeType":"VariableDeclaration","scope":5676,"src":"8774:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5650,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:18"},"returnParameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5676,"src":"8812:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5653,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:18"},"scope":6994,"src":"8755:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5703,"nodeType":"Block","src":"9330:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"9344:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5686,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5685,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:18","memberName":"max","nodeType":"MemberAccess","src":"9352:17:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5697,"nodeType":"IfStatement","src":"9340:105:18","trueBody":{"id":5696,"nodeType":"Block","src":"9371:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"9428:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5691,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"9392:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5695,"nodeType":"RevertStatement","src":"9385:49:18"}]}},{"expression":{"arguments":[{"id":5700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"9469:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5698,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:18","typeDescriptions":{}}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5683,"id":5702,"nodeType":"Return","src":"9454:21:18"}]},"documentation":{"id":5677,"nodeType":"StructuredDocumentation","src":"8979:280:18","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5704,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:18","nodeType":"FunctionDefinition","parameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"value","nameLocation":"9291:5:18","nodeType":"VariableDeclaration","scope":5704,"src":"9283:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5678,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:18"},"returnParameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5704,"src":"9321:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5681,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:18"},"scope":6994,"src":"9264:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5731,"nodeType":"Block","src":"9839:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"9853:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5714,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5713,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:18","memberName":"max","nodeType":"MemberAccess","src":"9861:17:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5725,"nodeType":"IfStatement","src":"9849:105:18","trueBody":{"id":5724,"nodeType":"Block","src":"9880:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"9937:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5719,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"9901:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5723,"nodeType":"RevertStatement","src":"9894:49:18"}]}},{"expression":{"arguments":[{"id":5728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"9978:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5726,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:18","typeDescriptions":{}}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5711,"id":5730,"nodeType":"Return","src":"9963:21:18"}]},"documentation":{"id":5705,"nodeType":"StructuredDocumentation","src":"9488:280:18","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5732,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:18","nodeType":"FunctionDefinition","parameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"value","nameLocation":"9800:5:18","nodeType":"VariableDeclaration","scope":5732,"src":"9792:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5706,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:18"},"returnParameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5732,"src":"9830:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5709,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:18"},"scope":6994,"src":"9773:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5759,"nodeType":"Block","src":"10348:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"10362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5742,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5741,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:18","memberName":"max","nodeType":"MemberAccess","src":"10370:17:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5753,"nodeType":"IfStatement","src":"10358:105:18","trueBody":{"id":5752,"nodeType":"Block","src":"10389:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"10446:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5747,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"10410:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5751,"nodeType":"RevertStatement","src":"10403:49:18"}]}},{"expression":{"arguments":[{"id":5756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"10487:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5754,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:18","typeDescriptions":{}}},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5739,"id":5758,"nodeType":"Return","src":"10472:21:18"}]},"documentation":{"id":5733,"nodeType":"StructuredDocumentation","src":"9997:280:18","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5760,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:18","nodeType":"FunctionDefinition","parameters":{"id":5736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5735,"mutability":"mutable","name":"value","nameLocation":"10309:5:18","nodeType":"VariableDeclaration","scope":5760,"src":"10301:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5734,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:18"},"returnParameters":{"id":5739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5760,"src":"10339:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5737,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:18"},"scope":6994,"src":"10282:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5787,"nodeType":"Block","src":"10857:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"10871:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5770,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5769,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:18","memberName":"max","nodeType":"MemberAccess","src":"10879:17:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5781,"nodeType":"IfStatement","src":"10867:105:18","trueBody":{"id":5780,"nodeType":"Block","src":"10898:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"10955:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5775,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"10919:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5779,"nodeType":"RevertStatement","src":"10912:49:18"}]}},{"expression":{"arguments":[{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"10996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5782,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:18","typeDescriptions":{}}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5767,"id":5786,"nodeType":"Return","src":"10981:21:18"}]},"documentation":{"id":5761,"nodeType":"StructuredDocumentation","src":"10506:280:18","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5788,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:18","nodeType":"FunctionDefinition","parameters":{"id":5764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"value","nameLocation":"10818:5:18","nodeType":"VariableDeclaration","scope":5788,"src":"10810:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5762,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:18"},"returnParameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5788,"src":"10848:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5765,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:18"},"scope":6994,"src":"10791:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5815,"nodeType":"Block","src":"11360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"11374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5798,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5797,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:18","memberName":"max","nodeType":"MemberAccess","src":"11382:16:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5809,"nodeType":"IfStatement","src":"11370:103:18","trueBody":{"id":5808,"nodeType":"Block","src":"11400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"11456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5803,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"11421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5807,"nodeType":"RevertStatement","src":"11414:48:18"}]}},{"expression":{"arguments":[{"id":5812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"11496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5810,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:18","typeDescriptions":{}}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5795,"id":5814,"nodeType":"Return","src":"11482:20:18"}]},"documentation":{"id":5789,"nodeType":"StructuredDocumentation","src":"11015:276:18","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5816,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"value","nameLocation":"11322:5:18","nodeType":"VariableDeclaration","scope":5816,"src":"11314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5790,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:18"},"returnParameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5816,"src":"11352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5793,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:18"},"scope":6994,"src":"11296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5843,"nodeType":"Block","src":"11860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"11874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5826,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5825,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:18","memberName":"max","nodeType":"MemberAccess","src":"11882:16:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5837,"nodeType":"IfStatement","src":"11870:103:18","trueBody":{"id":5836,"nodeType":"Block","src":"11900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"11956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5831,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"11921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5835,"nodeType":"RevertStatement","src":"11914:48:18"}]}},{"expression":{"arguments":[{"id":5840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"11996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5838,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:18","typeDescriptions":{}}},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5823,"id":5842,"nodeType":"Return","src":"11982:20:18"}]},"documentation":{"id":5817,"nodeType":"StructuredDocumentation","src":"11515:276:18","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5844,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"mutability":"mutable","name":"value","nameLocation":"11822:5:18","nodeType":"VariableDeclaration","scope":5844,"src":"11814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5818,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:18"},"returnParameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5844,"src":"11852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5821,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:18"},"scope":6994,"src":"11796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5871,"nodeType":"Block","src":"12360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"12374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5854,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5853,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:18","memberName":"max","nodeType":"MemberAccess","src":"12382:16:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5865,"nodeType":"IfStatement","src":"12370:103:18","trueBody":{"id":5864,"nodeType":"Block","src":"12400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"12456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5859,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"12421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5863,"nodeType":"RevertStatement","src":"12414:48:18"}]}},{"expression":{"arguments":[{"id":5868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"12496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5866,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:18","typeDescriptions":{}}},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5851,"id":5870,"nodeType":"Return","src":"12482:20:18"}]},"documentation":{"id":5845,"nodeType":"StructuredDocumentation","src":"12015:276:18","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5872,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5847,"mutability":"mutable","name":"value","nameLocation":"12322:5:18","nodeType":"VariableDeclaration","scope":5872,"src":"12314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5846,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:18"},"returnParameters":{"id":5851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5872,"src":"12352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5849,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:18"},"scope":6994,"src":"12296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5899,"nodeType":"Block","src":"12860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"12874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5882,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5881,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:18","memberName":"max","nodeType":"MemberAccess","src":"12882:16:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5893,"nodeType":"IfStatement","src":"12870:103:18","trueBody":{"id":5892,"nodeType":"Block","src":"12900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"12956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5887,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"12921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5891,"nodeType":"RevertStatement","src":"12914:48:18"}]}},{"expression":{"arguments":[{"id":5896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"12996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5894,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:18","typeDescriptions":{}}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5879,"id":5898,"nodeType":"Return","src":"12982:20:18"}]},"documentation":{"id":5873,"nodeType":"StructuredDocumentation","src":"12515:276:18","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5900,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"mutability":"mutable","name":"value","nameLocation":"12822:5:18","nodeType":"VariableDeclaration","scope":5900,"src":"12814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5874,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:18"},"returnParameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5900,"src":"12852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5877,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:18"},"scope":6994,"src":"12796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5927,"nodeType":"Block","src":"13360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"13374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5910,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5909,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:18","memberName":"max","nodeType":"MemberAccess","src":"13382:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5921,"nodeType":"IfStatement","src":"13370:103:18","trueBody":{"id":5920,"nodeType":"Block","src":"13400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"13456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5915,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"13421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5919,"nodeType":"RevertStatement","src":"13414:48:18"}]}},{"expression":{"arguments":[{"id":5924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"13496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5922,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:18","typeDescriptions":{}}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5907,"id":5926,"nodeType":"Return","src":"13482:20:18"}]},"documentation":{"id":5901,"nodeType":"StructuredDocumentation","src":"13015:276:18","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5928,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5903,"mutability":"mutable","name":"value","nameLocation":"13322:5:18","nodeType":"VariableDeclaration","scope":5928,"src":"13314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5902,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:18"},"returnParameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5928,"src":"13352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5905,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:18"},"scope":6994,"src":"13296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5955,"nodeType":"Block","src":"13860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"13874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5938,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5937,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:18","memberName":"max","nodeType":"MemberAccess","src":"13882:16:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5949,"nodeType":"IfStatement","src":"13870:103:18","trueBody":{"id":5948,"nodeType":"Block","src":"13900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"13956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5943,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"13921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5947,"nodeType":"RevertStatement","src":"13914:48:18"}]}},{"expression":{"arguments":[{"id":5952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"13996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5950,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:18","typeDescriptions":{}}},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5935,"id":5954,"nodeType":"Return","src":"13982:20:18"}]},"documentation":{"id":5929,"nodeType":"StructuredDocumentation","src":"13515:276:18","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5956,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5931,"mutability":"mutable","name":"value","nameLocation":"13822:5:18","nodeType":"VariableDeclaration","scope":5956,"src":"13814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5930,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:18"},"returnParameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5956,"src":"13852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5933,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:18"},"scope":6994,"src":"13796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5983,"nodeType":"Block","src":"14360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"14374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5966,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5965,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:18","memberName":"max","nodeType":"MemberAccess","src":"14382:16:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5977,"nodeType":"IfStatement","src":"14370:103:18","trueBody":{"id":5976,"nodeType":"Block","src":"14400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"14456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5971,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"14421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5975,"nodeType":"RevertStatement","src":"14414:48:18"}]}},{"expression":{"arguments":[{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"14496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5978,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:18","typeDescriptions":{}}},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5963,"id":5982,"nodeType":"Return","src":"14482:20:18"}]},"documentation":{"id":5957,"nodeType":"StructuredDocumentation","src":"14015:276:18","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5984,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"value","nameLocation":"14322:5:18","nodeType":"VariableDeclaration","scope":5984,"src":"14314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5958,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:18"},"returnParameters":{"id":5963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5984,"src":"14352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5961,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:18"},"scope":6994,"src":"14296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6011,"nodeType":"Block","src":"14860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"14874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5994,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5993,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:18","memberName":"max","nodeType":"MemberAccess","src":"14882:16:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6005,"nodeType":"IfStatement","src":"14870:103:18","trueBody":{"id":6004,"nodeType":"Block","src":"14900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"14956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5999,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"14921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6003,"nodeType":"RevertStatement","src":"14914:48:18"}]}},{"expression":{"arguments":[{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"14996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6006,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:18","typeDescriptions":{}}},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5991,"id":6010,"nodeType":"Return","src":"14982:20:18"}]},"documentation":{"id":5985,"nodeType":"StructuredDocumentation","src":"14515:276:18","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6012,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"value","nameLocation":"14822:5:18","nodeType":"VariableDeclaration","scope":6012,"src":"14814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5986,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:18"},"returnParameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6012,"src":"14852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5989,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:18"},"scope":6994,"src":"14796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6039,"nodeType":"Block","src":"15360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"15374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6022,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6021,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:18","memberName":"max","nodeType":"MemberAccess","src":"15382:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6033,"nodeType":"IfStatement","src":"15370:103:18","trueBody":{"id":6032,"nodeType":"Block","src":"15400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"15456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6027,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"15421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6031,"nodeType":"RevertStatement","src":"15414:48:18"}]}},{"expression":{"arguments":[{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"15496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6034,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:18","typeDescriptions":{}}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6019,"id":6038,"nodeType":"Return","src":"15482:20:18"}]},"documentation":{"id":6013,"nodeType":"StructuredDocumentation","src":"15015:276:18","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6040,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:18","nodeType":"FunctionDefinition","parameters":{"id":6016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6015,"mutability":"mutable","name":"value","nameLocation":"15322:5:18","nodeType":"VariableDeclaration","scope":6040,"src":"15314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6014,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:18"},"returnParameters":{"id":6019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6040,"src":"15352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6017,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:18"},"scope":6994,"src":"15296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6067,"nodeType":"Block","src":"15860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"15874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6050,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6049,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:18","memberName":"max","nodeType":"MemberAccess","src":"15882:16:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6061,"nodeType":"IfStatement","src":"15870:103:18","trueBody":{"id":6060,"nodeType":"Block","src":"15900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"15956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6055,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"15921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6059,"nodeType":"RevertStatement","src":"15914:48:18"}]}},{"expression":{"arguments":[{"id":6064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"15996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6062,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:18","typeDescriptions":{}}},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6047,"id":6066,"nodeType":"Return","src":"15982:20:18"}]},"documentation":{"id":6041,"nodeType":"StructuredDocumentation","src":"15515:276:18","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6068,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:18","nodeType":"FunctionDefinition","parameters":{"id":6044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6043,"mutability":"mutable","name":"value","nameLocation":"15822:5:18","nodeType":"VariableDeclaration","scope":6068,"src":"15814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6042,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:18"},"returnParameters":{"id":6047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6068,"src":"15852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6045,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:18"},"scope":6994,"src":"15796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6095,"nodeType":"Block","src":"16360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"16374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6078,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6077,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:18","memberName":"max","nodeType":"MemberAccess","src":"16382:16:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6089,"nodeType":"IfStatement","src":"16370:103:18","trueBody":{"id":6088,"nodeType":"Block","src":"16400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"16456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6083,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"16421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6087,"nodeType":"RevertStatement","src":"16414:48:18"}]}},{"expression":{"arguments":[{"id":6092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"16496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6090,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:18","typeDescriptions":{}}},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6075,"id":6094,"nodeType":"Return","src":"16482:20:18"}]},"documentation":{"id":6069,"nodeType":"StructuredDocumentation","src":"16015:276:18","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6096,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:18","nodeType":"FunctionDefinition","parameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"value","nameLocation":"16322:5:18","nodeType":"VariableDeclaration","scope":6096,"src":"16314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6070,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:18"},"returnParameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6096,"src":"16352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6073,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:18"},"scope":6994,"src":"16296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6123,"nodeType":"Block","src":"16854:146:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"16868:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6106,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6105,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:18","memberName":"max","nodeType":"MemberAccess","src":"16876:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6117,"nodeType":"IfStatement","src":"16864:101:18","trueBody":{"id":6116,"nodeType":"Block","src":"16893:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"16948:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6111,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"16914:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6115,"nodeType":"RevertStatement","src":"16907:47:18"}]}},{"expression":{"arguments":[{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"16987:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6118,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:18","typeDescriptions":{}}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6103,"id":6122,"nodeType":"Return","src":"16974:19:18"}]},"documentation":{"id":6097,"nodeType":"StructuredDocumentation","src":"16515:272:18","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6124,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:18","nodeType":"FunctionDefinition","parameters":{"id":6100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6099,"mutability":"mutable","name":"value","nameLocation":"16817:5:18","nodeType":"VariableDeclaration","scope":6124,"src":"16809:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6098,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:18"},"returnParameters":{"id":6103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6124,"src":"16847:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6101,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:18"},"scope":6994,"src":"16792:208:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6146,"nodeType":"Block","src":"17236:128:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"17250:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6140,"nodeType":"IfStatement","src":"17246:81:18","trueBody":{"id":6139,"nodeType":"Block","src":"17261:66:18","statements":[{"errorCall":{"arguments":[{"id":6136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"17310:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6135,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"17282:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6138,"nodeType":"RevertStatement","src":"17275:41:18"}]}},{"expression":{"arguments":[{"id":6143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"17351:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6141,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:18","typeDescriptions":{}}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6131,"id":6145,"nodeType":"Return","src":"17336:21:18"}]},"documentation":{"id":6125,"nodeType":"StructuredDocumentation","src":"17006:160:18","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6147,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:18","nodeType":"FunctionDefinition","parameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6127,"mutability":"mutable","name":"value","nameLocation":"17197:5:18","nodeType":"VariableDeclaration","scope":6147,"src":"17190:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6126,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:18"},"returnParameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6147,"src":"17227:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6129,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:18"},"scope":6994,"src":"17171:193:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6172,"nodeType":"Block","src":"17761:150:18","statements":[{"expression":{"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6155,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"17771:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"17791:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6156,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:18","typeDescriptions":{}}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6161,"nodeType":"ExpressionStatement","src":"17771:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6162,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"17811:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"17825:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6171,"nodeType":"IfStatement","src":"17807:98:18","trueBody":{"id":6170,"nodeType":"Block","src":"17832:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"17888:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6165,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"17853:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6169,"nodeType":"RevertStatement","src":"17846:48:18"}]}}]},"documentation":{"id":6148,"nodeType":"StructuredDocumentation","src":"17370:312:18","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6173,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:18","nodeType":"FunctionDefinition","parameters":{"id":6151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6150,"mutability":"mutable","name":"value","nameLocation":"17712:5:18","nodeType":"VariableDeclaration","scope":6173,"src":"17705:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6149,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:18"},"returnParameters":{"id":6154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6153,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:18","nodeType":"VariableDeclaration","scope":6173,"src":"17742:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6152,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:18"},"scope":6994,"src":"17687:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6198,"nodeType":"Block","src":"18308:150:18","statements":[{"expression":{"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6181,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"18318:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"18338:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6182,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:18","typeDescriptions":{}}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6187,"nodeType":"ExpressionStatement","src":"18318:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6188,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"18358:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"18372:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6197,"nodeType":"IfStatement","src":"18354:98:18","trueBody":{"id":6196,"nodeType":"Block","src":"18379:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6176,"src":"18435:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6191,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"18400:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6195,"nodeType":"RevertStatement","src":"18393:48:18"}]}}]},"documentation":{"id":6174,"nodeType":"StructuredDocumentation","src":"17917:312:18","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6199,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:18","nodeType":"FunctionDefinition","parameters":{"id":6177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6176,"mutability":"mutable","name":"value","nameLocation":"18259:5:18","nodeType":"VariableDeclaration","scope":6199,"src":"18252:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6175,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:18"},"returnParameters":{"id":6180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6179,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:18","nodeType":"VariableDeclaration","scope":6199,"src":"18289:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6178,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:18"},"scope":6994,"src":"18234:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6224,"nodeType":"Block","src":"18855:150:18","statements":[{"expression":{"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"18865:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"18885:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6208,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:18","typeDescriptions":{}}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6213,"nodeType":"ExpressionStatement","src":"18865:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6214,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"18905:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"18919:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6223,"nodeType":"IfStatement","src":"18901:98:18","trueBody":{"id":6222,"nodeType":"Block","src":"18926:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"18982:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6217,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"18947:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6221,"nodeType":"RevertStatement","src":"18940:48:18"}]}}]},"documentation":{"id":6200,"nodeType":"StructuredDocumentation","src":"18464:312:18","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6225,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:18","nodeType":"FunctionDefinition","parameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"value","nameLocation":"18806:5:18","nodeType":"VariableDeclaration","scope":6225,"src":"18799:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6201,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:18"},"returnParameters":{"id":6206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6205,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:18","nodeType":"VariableDeclaration","scope":6225,"src":"18836:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6204,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:18"},"scope":6994,"src":"18781:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6250,"nodeType":"Block","src":"19402:150:18","statements":[{"expression":{"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"19412:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"19432:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6234,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:18","typeDescriptions":{}}},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6239,"nodeType":"ExpressionStatement","src":"19412:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6240,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"19452:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"19466:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6249,"nodeType":"IfStatement","src":"19448:98:18","trueBody":{"id":6248,"nodeType":"Block","src":"19473:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6228,"src":"19529:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6243,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"19494:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6247,"nodeType":"RevertStatement","src":"19487:48:18"}]}}]},"documentation":{"id":6226,"nodeType":"StructuredDocumentation","src":"19011:312:18","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6251,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:18","nodeType":"FunctionDefinition","parameters":{"id":6229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6228,"mutability":"mutable","name":"value","nameLocation":"19353:5:18","nodeType":"VariableDeclaration","scope":6251,"src":"19346:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6227,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:18"},"returnParameters":{"id":6232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6231,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:18","nodeType":"VariableDeclaration","scope":6251,"src":"19383:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6230,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:18"},"scope":6994,"src":"19328:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6276,"nodeType":"Block","src":"19949:150:18","statements":[{"expression":{"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6259,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"19959:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"19979:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6260,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:18","typeDescriptions":{}}},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6265,"nodeType":"ExpressionStatement","src":"19959:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6266,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"19999:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"20013:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6275,"nodeType":"IfStatement","src":"19995:98:18","trueBody":{"id":6274,"nodeType":"Block","src":"20020:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"20076:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6269,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"20041:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6273,"nodeType":"RevertStatement","src":"20034:48:18"}]}}]},"documentation":{"id":6252,"nodeType":"StructuredDocumentation","src":"19558:312:18","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6277,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:18","nodeType":"FunctionDefinition","parameters":{"id":6255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6254,"mutability":"mutable","name":"value","nameLocation":"19900:5:18","nodeType":"VariableDeclaration","scope":6277,"src":"19893:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6253,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:18"},"returnParameters":{"id":6258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6257,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:18","nodeType":"VariableDeclaration","scope":6277,"src":"19930:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6256,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:18"},"scope":6994,"src":"19875:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6302,"nodeType":"Block","src":"20496:150:18","statements":[{"expression":{"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6285,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"20506:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"20526:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6286,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:18","typeDescriptions":{}}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6291,"nodeType":"ExpressionStatement","src":"20506:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6292,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"20546:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"20560:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6301,"nodeType":"IfStatement","src":"20542:98:18","trueBody":{"id":6300,"nodeType":"Block","src":"20567:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"20623:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6295,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"20588:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6299,"nodeType":"RevertStatement","src":"20581:48:18"}]}}]},"documentation":{"id":6278,"nodeType":"StructuredDocumentation","src":"20105:312:18","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6303,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:18","nodeType":"FunctionDefinition","parameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"value","nameLocation":"20447:5:18","nodeType":"VariableDeclaration","scope":6303,"src":"20440:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6279,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:18"},"returnParameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:18","nodeType":"VariableDeclaration","scope":6303,"src":"20477:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6282,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:18"},"scope":6994,"src":"20422:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6328,"nodeType":"Block","src":"21043:150:18","statements":[{"expression":{"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6311,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"21053:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"21073:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6312,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:18","typeDescriptions":{}}},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6317,"nodeType":"ExpressionStatement","src":"21053:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6318,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"21093:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"21107:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6327,"nodeType":"IfStatement","src":"21089:98:18","trueBody":{"id":6326,"nodeType":"Block","src":"21114:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"21170:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6321,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"21135:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6325,"nodeType":"RevertStatement","src":"21128:48:18"}]}}]},"documentation":{"id":6304,"nodeType":"StructuredDocumentation","src":"20652:312:18","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6329,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:18","nodeType":"FunctionDefinition","parameters":{"id":6307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6306,"mutability":"mutable","name":"value","nameLocation":"20994:5:18","nodeType":"VariableDeclaration","scope":6329,"src":"20987:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6305,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:18"},"returnParameters":{"id":6310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6309,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:18","nodeType":"VariableDeclaration","scope":6329,"src":"21024:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6308,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:18"},"scope":6994,"src":"20969:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6354,"nodeType":"Block","src":"21590:150:18","statements":[{"expression":{"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"21600:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"21620:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6338,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:18","typeDescriptions":{}}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6343,"nodeType":"ExpressionStatement","src":"21600:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6344,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"21640:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"21654:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6353,"nodeType":"IfStatement","src":"21636:98:18","trueBody":{"id":6352,"nodeType":"Block","src":"21661:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"21717:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6347,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"21682:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6351,"nodeType":"RevertStatement","src":"21675:48:18"}]}}]},"documentation":{"id":6330,"nodeType":"StructuredDocumentation","src":"21199:312:18","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6355,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:18","nodeType":"FunctionDefinition","parameters":{"id":6333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6332,"mutability":"mutable","name":"value","nameLocation":"21541:5:18","nodeType":"VariableDeclaration","scope":6355,"src":"21534:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6331,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:18"},"returnParameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:18","nodeType":"VariableDeclaration","scope":6355,"src":"21571:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6334,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:18"},"scope":6994,"src":"21516:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6380,"nodeType":"Block","src":"22137:150:18","statements":[{"expression":{"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"22147:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"22167:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6364,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:18","typeDescriptions":{}}},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6369,"nodeType":"ExpressionStatement","src":"22147:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6370,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"22187:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"22201:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6379,"nodeType":"IfStatement","src":"22183:98:18","trueBody":{"id":6378,"nodeType":"Block","src":"22208:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"22264:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6373,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"22229:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6377,"nodeType":"RevertStatement","src":"22222:48:18"}]}}]},"documentation":{"id":6356,"nodeType":"StructuredDocumentation","src":"21746:312:18","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6381,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:18","nodeType":"FunctionDefinition","parameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6358,"mutability":"mutable","name":"value","nameLocation":"22088:5:18","nodeType":"VariableDeclaration","scope":6381,"src":"22081:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6357,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:18"},"returnParameters":{"id":6362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6361,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:18","nodeType":"VariableDeclaration","scope":6381,"src":"22118:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6360,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:18"},"scope":6994,"src":"22063:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6406,"nodeType":"Block","src":"22684:150:18","statements":[{"expression":{"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6389,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"22694:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6384,"src":"22714:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6390,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:18","typeDescriptions":{}}},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6395,"nodeType":"ExpressionStatement","src":"22694:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6396,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"22734:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6384,"src":"22748:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6405,"nodeType":"IfStatement","src":"22730:98:18","trueBody":{"id":6404,"nodeType":"Block","src":"22755:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6384,"src":"22811:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6399,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"22776:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6403,"nodeType":"RevertStatement","src":"22769:48:18"}]}}]},"documentation":{"id":6382,"nodeType":"StructuredDocumentation","src":"22293:312:18","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6407,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:18","nodeType":"FunctionDefinition","parameters":{"id":6385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6384,"mutability":"mutable","name":"value","nameLocation":"22635:5:18","nodeType":"VariableDeclaration","scope":6407,"src":"22628:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6383,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:18"},"returnParameters":{"id":6388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6387,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:18","nodeType":"VariableDeclaration","scope":6407,"src":"22665:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6386,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:18"},"scope":6994,"src":"22610:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6432,"nodeType":"Block","src":"23231:150:18","statements":[{"expression":{"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6415,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"23241:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"23261:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6416,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:18","typeDescriptions":{}}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6421,"nodeType":"ExpressionStatement","src":"23241:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6422,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"23281:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"23295:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6431,"nodeType":"IfStatement","src":"23277:98:18","trueBody":{"id":6430,"nodeType":"Block","src":"23302:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"23358:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6425,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"23323:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6429,"nodeType":"RevertStatement","src":"23316:48:18"}]}}]},"documentation":{"id":6408,"nodeType":"StructuredDocumentation","src":"22840:312:18","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6433,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:18","nodeType":"FunctionDefinition","parameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6410,"mutability":"mutable","name":"value","nameLocation":"23182:5:18","nodeType":"VariableDeclaration","scope":6433,"src":"23175:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6409,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:18"},"returnParameters":{"id":6414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6413,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:18","nodeType":"VariableDeclaration","scope":6433,"src":"23212:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6412,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:18"},"scope":6994,"src":"23157:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6458,"nodeType":"Block","src":"23778:150:18","statements":[{"expression":{"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6441,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"23788:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"23808:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6442,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:18","typeDescriptions":{}}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6447,"nodeType":"ExpressionStatement","src":"23788:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6448,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"23828:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"23842:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6457,"nodeType":"IfStatement","src":"23824:98:18","trueBody":{"id":6456,"nodeType":"Block","src":"23849:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"23905:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6451,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"23870:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6455,"nodeType":"RevertStatement","src":"23863:48:18"}]}}]},"documentation":{"id":6434,"nodeType":"StructuredDocumentation","src":"23387:312:18","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6459,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:18","nodeType":"FunctionDefinition","parameters":{"id":6437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6436,"mutability":"mutable","name":"value","nameLocation":"23729:5:18","nodeType":"VariableDeclaration","scope":6459,"src":"23722:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6435,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:18"},"returnParameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:18","nodeType":"VariableDeclaration","scope":6459,"src":"23759:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6438,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:18"},"scope":6994,"src":"23704:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6484,"nodeType":"Block","src":"24325:150:18","statements":[{"expression":{"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6467,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"24335:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"24355:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6468,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:18","typeDescriptions":{}}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6473,"nodeType":"ExpressionStatement","src":"24335:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6474,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"24375:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"24389:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6483,"nodeType":"IfStatement","src":"24371:98:18","trueBody":{"id":6482,"nodeType":"Block","src":"24396:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"24452:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6477,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"24417:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6481,"nodeType":"RevertStatement","src":"24410:48:18"}]}}]},"documentation":{"id":6460,"nodeType":"StructuredDocumentation","src":"23934:312:18","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6485,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:18","nodeType":"FunctionDefinition","parameters":{"id":6463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6462,"mutability":"mutable","name":"value","nameLocation":"24276:5:18","nodeType":"VariableDeclaration","scope":6485,"src":"24269:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6461,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:18"},"returnParameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:18","nodeType":"VariableDeclaration","scope":6485,"src":"24306:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6464,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:18"},"scope":6994,"src":"24251:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6510,"nodeType":"Block","src":"24872:150:18","statements":[{"expression":{"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6493,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"24882:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"24902:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6494,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:18","typeDescriptions":{}}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6499,"nodeType":"ExpressionStatement","src":"24882:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6500,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"24922:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"24936:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6509,"nodeType":"IfStatement","src":"24918:98:18","trueBody":{"id":6508,"nodeType":"Block","src":"24943:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"24999:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6503,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"24964:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6507,"nodeType":"RevertStatement","src":"24957:48:18"}]}}]},"documentation":{"id":6486,"nodeType":"StructuredDocumentation","src":"24481:312:18","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6511,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:18","nodeType":"FunctionDefinition","parameters":{"id":6489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6488,"mutability":"mutable","name":"value","nameLocation":"24823:5:18","nodeType":"VariableDeclaration","scope":6511,"src":"24816:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6487,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:18"},"returnParameters":{"id":6492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6491,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:18","nodeType":"VariableDeclaration","scope":6511,"src":"24853:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6490,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:18"},"scope":6994,"src":"24798:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6536,"nodeType":"Block","src":"25419:150:18","statements":[{"expression":{"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6519,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"25429:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"25449:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6520,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:18","typeDescriptions":{}}},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6525,"nodeType":"ExpressionStatement","src":"25429:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6526,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"25469:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"25483:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6535,"nodeType":"IfStatement","src":"25465:98:18","trueBody":{"id":6534,"nodeType":"Block","src":"25490:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"25546:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6529,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"25511:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6533,"nodeType":"RevertStatement","src":"25504:48:18"}]}}]},"documentation":{"id":6512,"nodeType":"StructuredDocumentation","src":"25028:312:18","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6537,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:18","nodeType":"FunctionDefinition","parameters":{"id":6515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6514,"mutability":"mutable","name":"value","nameLocation":"25370:5:18","nodeType":"VariableDeclaration","scope":6537,"src":"25363:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6513,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:18"},"returnParameters":{"id":6518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6517,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:18","nodeType":"VariableDeclaration","scope":6537,"src":"25400:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6516,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:18"},"scope":6994,"src":"25345:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6562,"nodeType":"Block","src":"25966:150:18","statements":[{"expression":{"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6545,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"25976:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"25996:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6546,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:18","typeDescriptions":{}}},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6551,"nodeType":"ExpressionStatement","src":"25976:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6552,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"26016:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"26030:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6561,"nodeType":"IfStatement","src":"26012:98:18","trueBody":{"id":6560,"nodeType":"Block","src":"26037:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"26093:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6555,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"26058:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6559,"nodeType":"RevertStatement","src":"26051:48:18"}]}}]},"documentation":{"id":6538,"nodeType":"StructuredDocumentation","src":"25575:312:18","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6563,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:18","nodeType":"FunctionDefinition","parameters":{"id":6541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6540,"mutability":"mutable","name":"value","nameLocation":"25917:5:18","nodeType":"VariableDeclaration","scope":6563,"src":"25910:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6539,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:18"},"returnParameters":{"id":6544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6543,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:18","nodeType":"VariableDeclaration","scope":6563,"src":"25947:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6542,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:18"},"scope":6994,"src":"25892:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6588,"nodeType":"Block","src":"26513:150:18","statements":[{"expression":{"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6571,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"26523:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"26543:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6572,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:18","typeDescriptions":{}}},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6577,"nodeType":"ExpressionStatement","src":"26523:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6578,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"26563:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"26577:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6587,"nodeType":"IfStatement","src":"26559:98:18","trueBody":{"id":6586,"nodeType":"Block","src":"26584:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"26640:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6581,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"26605:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6585,"nodeType":"RevertStatement","src":"26598:48:18"}]}}]},"documentation":{"id":6564,"nodeType":"StructuredDocumentation","src":"26122:312:18","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6589,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:18","nodeType":"FunctionDefinition","parameters":{"id":6567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"mutability":"mutable","name":"value","nameLocation":"26464:5:18","nodeType":"VariableDeclaration","scope":6589,"src":"26457:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6565,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:18"},"returnParameters":{"id":6570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6569,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:18","nodeType":"VariableDeclaration","scope":6589,"src":"26494:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6568,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:18"},"scope":6994,"src":"26439:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6614,"nodeType":"Block","src":"27060:150:18","statements":[{"expression":{"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6597,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"27070:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"27090:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6598,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:18","typeDescriptions":{}}},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6603,"nodeType":"ExpressionStatement","src":"27070:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6604,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"27110:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"27124:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6613,"nodeType":"IfStatement","src":"27106:98:18","trueBody":{"id":6612,"nodeType":"Block","src":"27131:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"27187:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6607,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"27152:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6611,"nodeType":"RevertStatement","src":"27145:48:18"}]}}]},"documentation":{"id":6590,"nodeType":"StructuredDocumentation","src":"26669:312:18","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6615,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:18","nodeType":"FunctionDefinition","parameters":{"id":6593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6592,"mutability":"mutable","name":"value","nameLocation":"27011:5:18","nodeType":"VariableDeclaration","scope":6615,"src":"27004:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6591,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:18"},"returnParameters":{"id":6596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6595,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:18","nodeType":"VariableDeclaration","scope":6615,"src":"27041:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6594,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:18"},"scope":6994,"src":"26986:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6640,"nodeType":"Block","src":"27607:150:18","statements":[{"expression":{"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6623,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"27617:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"27637:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6624,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:18","typeDescriptions":{}}},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6629,"nodeType":"ExpressionStatement","src":"27617:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6630,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"27657:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"27671:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6639,"nodeType":"IfStatement","src":"27653:98:18","trueBody":{"id":6638,"nodeType":"Block","src":"27678:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"27734:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6633,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"27699:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6637,"nodeType":"RevertStatement","src":"27692:48:18"}]}}]},"documentation":{"id":6616,"nodeType":"StructuredDocumentation","src":"27216:312:18","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6641,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:18","nodeType":"FunctionDefinition","parameters":{"id":6619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6618,"mutability":"mutable","name":"value","nameLocation":"27558:5:18","nodeType":"VariableDeclaration","scope":6641,"src":"27551:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6617,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:18"},"returnParameters":{"id":6622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6621,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:18","nodeType":"VariableDeclaration","scope":6641,"src":"27588:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6620,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:18"},"scope":6994,"src":"27533:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6666,"nodeType":"Block","src":"28147:148:18","statements":[{"expression":{"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6649,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"28157:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6644,"src":"28176:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6650,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:18","typeDescriptions":{}}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6655,"nodeType":"ExpressionStatement","src":"28157:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6656,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"28196:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6644,"src":"28210:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6665,"nodeType":"IfStatement","src":"28192:97:18","trueBody":{"id":6664,"nodeType":"Block","src":"28217:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6644,"src":"28272:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6659,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"28238:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6663,"nodeType":"RevertStatement","src":"28231:47:18"}]}}]},"documentation":{"id":6642,"nodeType":"StructuredDocumentation","src":"27763:307:18","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6667,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:18","nodeType":"FunctionDefinition","parameters":{"id":6645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6644,"mutability":"mutable","name":"value","nameLocation":"28099:5:18","nodeType":"VariableDeclaration","scope":6667,"src":"28092:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6643,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:18"},"returnParameters":{"id":6648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6647,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:18","nodeType":"VariableDeclaration","scope":6667,"src":"28129:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6646,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:18"},"scope":6994,"src":"28075:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6692,"nodeType":"Block","src":"28685:148:18","statements":[{"expression":{"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6675,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"28695:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"28714:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6676,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:18","typeDescriptions":{}}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6681,"nodeType":"ExpressionStatement","src":"28695:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6682,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"28734:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"28748:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6691,"nodeType":"IfStatement","src":"28730:97:18","trueBody":{"id":6690,"nodeType":"Block","src":"28755:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"28810:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6685,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"28776:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6689,"nodeType":"RevertStatement","src":"28769:47:18"}]}}]},"documentation":{"id":6668,"nodeType":"StructuredDocumentation","src":"28301:307:18","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6693,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:18","nodeType":"FunctionDefinition","parameters":{"id":6671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6670,"mutability":"mutable","name":"value","nameLocation":"28637:5:18","nodeType":"VariableDeclaration","scope":6693,"src":"28630:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6669,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:18"},"returnParameters":{"id":6674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6673,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:18","nodeType":"VariableDeclaration","scope":6693,"src":"28667:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6672,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:18"},"scope":6994,"src":"28613:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6718,"nodeType":"Block","src":"29223:148:18","statements":[{"expression":{"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6701,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"29233:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"29252:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6702,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:18","typeDescriptions":{}}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6707,"nodeType":"ExpressionStatement","src":"29233:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6708,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"29272:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"29286:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6717,"nodeType":"IfStatement","src":"29268:97:18","trueBody":{"id":6716,"nodeType":"Block","src":"29293:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"29348:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6711,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"29314:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6715,"nodeType":"RevertStatement","src":"29307:47:18"}]}}]},"documentation":{"id":6694,"nodeType":"StructuredDocumentation","src":"28839:307:18","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6719,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:18","nodeType":"FunctionDefinition","parameters":{"id":6697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6696,"mutability":"mutable","name":"value","nameLocation":"29175:5:18","nodeType":"VariableDeclaration","scope":6719,"src":"29168:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6695,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:18"},"returnParameters":{"id":6700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6699,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:18","nodeType":"VariableDeclaration","scope":6719,"src":"29205:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6698,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:18"},"scope":6994,"src":"29151:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6744,"nodeType":"Block","src":"29761:148:18","statements":[{"expression":{"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6727,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"29771:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"29790:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6728,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:18","typeDescriptions":{}}},"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6733,"nodeType":"ExpressionStatement","src":"29771:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6734,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"29810:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"29824:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6743,"nodeType":"IfStatement","src":"29806:97:18","trueBody":{"id":6742,"nodeType":"Block","src":"29831:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"29886:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6737,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"29852:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6741,"nodeType":"RevertStatement","src":"29845:47:18"}]}}]},"documentation":{"id":6720,"nodeType":"StructuredDocumentation","src":"29377:307:18","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6745,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:18","nodeType":"FunctionDefinition","parameters":{"id":6723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6722,"mutability":"mutable","name":"value","nameLocation":"29713:5:18","nodeType":"VariableDeclaration","scope":6745,"src":"29706:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6721,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:18"},"returnParameters":{"id":6726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6725,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:18","nodeType":"VariableDeclaration","scope":6745,"src":"29743:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6724,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:18"},"scope":6994,"src":"29689:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6770,"nodeType":"Block","src":"30299:148:18","statements":[{"expression":{"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6753,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"30309:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"30328:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6754,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:18","typeDescriptions":{}}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6759,"nodeType":"ExpressionStatement","src":"30309:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6760,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"30348:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"30362:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6769,"nodeType":"IfStatement","src":"30344:97:18","trueBody":{"id":6768,"nodeType":"Block","src":"30369:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"30424:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6763,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"30390:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6767,"nodeType":"RevertStatement","src":"30383:47:18"}]}}]},"documentation":{"id":6746,"nodeType":"StructuredDocumentation","src":"29915:307:18","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6771,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:18","nodeType":"FunctionDefinition","parameters":{"id":6749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6748,"mutability":"mutable","name":"value","nameLocation":"30251:5:18","nodeType":"VariableDeclaration","scope":6771,"src":"30244:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6747,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:18"},"returnParameters":{"id":6752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6751,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:18","nodeType":"VariableDeclaration","scope":6771,"src":"30281:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6750,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:18"},"scope":6994,"src":"30227:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6796,"nodeType":"Block","src":"30837:148:18","statements":[{"expression":{"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6779,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"30847:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"30866:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6780,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:18","typeDescriptions":{}}},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6785,"nodeType":"ExpressionStatement","src":"30847:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6786,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"30886:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"30900:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6795,"nodeType":"IfStatement","src":"30882:97:18","trueBody":{"id":6794,"nodeType":"Block","src":"30907:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"30962:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6789,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"30928:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6793,"nodeType":"RevertStatement","src":"30921:47:18"}]}}]},"documentation":{"id":6772,"nodeType":"StructuredDocumentation","src":"30453:307:18","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6797,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:18","nodeType":"FunctionDefinition","parameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6774,"mutability":"mutable","name":"value","nameLocation":"30789:5:18","nodeType":"VariableDeclaration","scope":6797,"src":"30782:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6773,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:18"},"returnParameters":{"id":6778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:18","nodeType":"VariableDeclaration","scope":6797,"src":"30819:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6776,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:18"},"scope":6994,"src":"30765:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6822,"nodeType":"Block","src":"31375:148:18","statements":[{"expression":{"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6805,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"31385:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"31404:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6806,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:18","typeDescriptions":{}}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6811,"nodeType":"ExpressionStatement","src":"31385:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6812,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"31424:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"31438:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6821,"nodeType":"IfStatement","src":"31420:97:18","trueBody":{"id":6820,"nodeType":"Block","src":"31445:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"31500:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6815,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"31466:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6819,"nodeType":"RevertStatement","src":"31459:47:18"}]}}]},"documentation":{"id":6798,"nodeType":"StructuredDocumentation","src":"30991:307:18","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6823,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:18","nodeType":"FunctionDefinition","parameters":{"id":6801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6800,"mutability":"mutable","name":"value","nameLocation":"31327:5:18","nodeType":"VariableDeclaration","scope":6823,"src":"31320:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6799,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:18"},"returnParameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:18","nodeType":"VariableDeclaration","scope":6823,"src":"31357:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6802,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:18"},"scope":6994,"src":"31303:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6848,"nodeType":"Block","src":"31913:148:18","statements":[{"expression":{"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6831,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"31923:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"31942:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6832,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:18","typeDescriptions":{}}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6837,"nodeType":"ExpressionStatement","src":"31923:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6838,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"31962:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"31976:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6847,"nodeType":"IfStatement","src":"31958:97:18","trueBody":{"id":6846,"nodeType":"Block","src":"31983:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"32038:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6841,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"32004:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6845,"nodeType":"RevertStatement","src":"31997:47:18"}]}}]},"documentation":{"id":6824,"nodeType":"StructuredDocumentation","src":"31529:307:18","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6849,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:18","nodeType":"FunctionDefinition","parameters":{"id":6827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6826,"mutability":"mutable","name":"value","nameLocation":"31865:5:18","nodeType":"VariableDeclaration","scope":6849,"src":"31858:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6825,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:18"},"returnParameters":{"id":6830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:18","nodeType":"VariableDeclaration","scope":6849,"src":"31895:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6828,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:18"},"scope":6994,"src":"31841:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6874,"nodeType":"Block","src":"32451:148:18","statements":[{"expression":{"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6857,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"32461:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"32480:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6858,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:18","typeDescriptions":{}}},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6863,"nodeType":"ExpressionStatement","src":"32461:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6864,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"32500:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"32514:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6873,"nodeType":"IfStatement","src":"32496:97:18","trueBody":{"id":6872,"nodeType":"Block","src":"32521:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"32576:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6867,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"32542:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6871,"nodeType":"RevertStatement","src":"32535:47:18"}]}}]},"documentation":{"id":6850,"nodeType":"StructuredDocumentation","src":"32067:307:18","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6875,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:18","nodeType":"FunctionDefinition","parameters":{"id":6853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6852,"mutability":"mutable","name":"value","nameLocation":"32403:5:18","nodeType":"VariableDeclaration","scope":6875,"src":"32396:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6851,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:18"},"returnParameters":{"id":6856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6855,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:18","nodeType":"VariableDeclaration","scope":6875,"src":"32433:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6854,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:18"},"scope":6994,"src":"32379:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6900,"nodeType":"Block","src":"32989:148:18","statements":[{"expression":{"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6883,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"32999:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"33018:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6884,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:18","typeDescriptions":{}}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6889,"nodeType":"ExpressionStatement","src":"32999:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6890,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"33038:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"33052:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6899,"nodeType":"IfStatement","src":"33034:97:18","trueBody":{"id":6898,"nodeType":"Block","src":"33059:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"33114:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6893,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"33080:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6897,"nodeType":"RevertStatement","src":"33073:47:18"}]}}]},"documentation":{"id":6876,"nodeType":"StructuredDocumentation","src":"32605:307:18","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6901,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:18","nodeType":"FunctionDefinition","parameters":{"id":6879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"value","nameLocation":"32941:5:18","nodeType":"VariableDeclaration","scope":6901,"src":"32934:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6877,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:18"},"returnParameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6881,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:18","nodeType":"VariableDeclaration","scope":6901,"src":"32971:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6880,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:18"},"scope":6994,"src":"32917:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6926,"nodeType":"Block","src":"33527:148:18","statements":[{"expression":{"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6909,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"33537:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"33556:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6910,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:18","typeDescriptions":{}}},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6915,"nodeType":"ExpressionStatement","src":"33537:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6916,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"33576:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"33590:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6925,"nodeType":"IfStatement","src":"33572:97:18","trueBody":{"id":6924,"nodeType":"Block","src":"33597:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"33652:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6919,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"33618:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6923,"nodeType":"RevertStatement","src":"33611:47:18"}]}}]},"documentation":{"id":6902,"nodeType":"StructuredDocumentation","src":"33143:307:18","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6927,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:18","nodeType":"FunctionDefinition","parameters":{"id":6905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6904,"mutability":"mutable","name":"value","nameLocation":"33479:5:18","nodeType":"VariableDeclaration","scope":6927,"src":"33472:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6903,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:18"},"returnParameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:18","nodeType":"VariableDeclaration","scope":6927,"src":"33509:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6906,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:18"},"scope":6994,"src":"33455:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6952,"nodeType":"Block","src":"34058:146:18","statements":[{"expression":{"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6935,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"34068:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"34086:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6936,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:18","typeDescriptions":{}}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6941,"nodeType":"ExpressionStatement","src":"34068:24:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6942,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"34106:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"34120:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6951,"nodeType":"IfStatement","src":"34102:96:18","trueBody":{"id":6950,"nodeType":"Block","src":"34127:71:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"34181:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6945,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"34148:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6949,"nodeType":"RevertStatement","src":"34141:46:18"}]}}]},"documentation":{"id":6928,"nodeType":"StructuredDocumentation","src":"33681:302:18","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6953,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:18","nodeType":"FunctionDefinition","parameters":{"id":6931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6930,"mutability":"mutable","name":"value","nameLocation":"34011:5:18","nodeType":"VariableDeclaration","scope":6953,"src":"34004:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6929,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:18"},"returnParameters":{"id":6934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6933,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:18","nodeType":"VariableDeclaration","scope":6953,"src":"34041:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6932,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:18"},"scope":6994,"src":"33988:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6982,"nodeType":"Block","src":"34444:250:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"34557:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6965,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6964,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:18","memberName":"max","nodeType":"MemberAccess","src":"34573:16:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6962,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:18","typeDescriptions":{}}},"id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6976,"nodeType":"IfStatement","src":"34553:105:18","trueBody":{"id":6975,"nodeType":"Block","src":"34592:66:18","statements":[{"errorCall":{"arguments":[{"id":6972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"34641:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6971,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"34613:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6974,"nodeType":"RevertStatement","src":"34606:41:18"}]}},{"expression":{"arguments":[{"id":6979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"34681:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6977,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:18","typeDescriptions":{}}},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6960,"id":6981,"nodeType":"Return","src":"34667:20:18"}]},"documentation":{"id":6954,"nodeType":"StructuredDocumentation","src":"34210:165:18","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6983,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:18","nodeType":"FunctionDefinition","parameters":{"id":6957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6956,"mutability":"mutable","name":"value","nameLocation":"34406:5:18","nodeType":"VariableDeclaration","scope":6983,"src":"34398:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6955,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:18"},"returnParameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6983,"src":"34436:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6958,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:18"},"scope":6994,"src":"34380:314:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6992,"nodeType":"Block","src":"34853:87:18","statements":[{"AST":{"nativeSrc":"34888:46:18","nodeType":"YulBlock","src":"34888:46:18","statements":[{"nativeSrc":"34902:22:18","nodeType":"YulAssignment","src":"34902:22:18","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:18","nodeType":"YulIdentifier","src":"34921:1:18"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:18","nodeType":"YulIdentifier","src":"34914:6:18"},"nativeSrc":"34914:9:18","nodeType":"YulFunctionCall","src":"34914:9:18"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:18","nodeType":"YulIdentifier","src":"34907:6:18"},"nativeSrc":"34907:17:18","nodeType":"YulFunctionCall","src":"34907:17:18"},"variableNames":[{"name":"u","nativeSrc":"34902:1:18","nodeType":"YulIdentifier","src":"34902:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6986,"isOffset":false,"isSlot":false,"src":"34921:1:18","valueSize":1},{"declaration":6989,"isOffset":false,"isSlot":false,"src":"34902:1:18","valueSize":1}],"flags":["memory-safe"],"id":6991,"nodeType":"InlineAssembly","src":"34863:71:18"}]},"documentation":{"id":6984,"nodeType":"StructuredDocumentation","src":"34700:90:18","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6993,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:18","nodeType":"FunctionDefinition","parameters":{"id":6987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6986,"mutability":"mutable","name":"b","nameLocation":"34816:1:18","nodeType":"VariableDeclaration","scope":6993,"src":"34811:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6985,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:18"},"returnParameters":{"id":6990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6989,"mutability":"mutable","name":"u","nameLocation":"34850:1:18","nodeType":"VariableDeclaration","scope":6993,"src":"34842:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6988,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:18"},"scope":6994,"src":"34795:145:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6995,"src":"769:34173:18","usedErrors":[5239,5244,5251,5256],"usedEvents":[]}],"src":"192:34751:18"},"id":18},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6994],"SignedMath":[7138]},"id":7139,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6996,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7139,"sourceUnit":6995,"src":"135:40:19","symbolAliases":[{"foreign":{"id":6997,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"143:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6999,"nodeType":"StructuredDocumentation","src":"177:80:19","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7138,"linearizedBaseContracts":[7138],"name":"SignedMath","nameLocation":"266:10:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":7028,"nodeType":"Block","src":"746:215:19","statements":[{"id":7027,"nodeType":"UncheckedBlock","src":"756:199:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7011,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"894:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7012,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"900:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7013,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"904:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7020,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"932:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7018,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6994,"src":"916:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6994_$","typeString":"type(library SafeCast)"}},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6993,"src":"916:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7016,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:19","typeDescriptions":{}}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7010,"id":7026,"nodeType":"Return","src":"887:57:19"}]}]},"documentation":{"id":7000,"nodeType":"StructuredDocumentation","src":"283:374:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7029,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:19","nodeType":"FunctionDefinition","parameters":{"id":7007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7002,"mutability":"mutable","name":"condition","nameLocation":"684:9:19","nodeType":"VariableDeclaration","scope":7029,"src":"679:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7001,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7004,"mutability":"mutable","name":"a","nameLocation":"702:1:19","nodeType":"VariableDeclaration","scope":7029,"src":"695:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7003,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7006,"mutability":"mutable","name":"b","nameLocation":"712:1:19","nodeType":"VariableDeclaration","scope":7029,"src":"705:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7005,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:19"},"returnParameters":{"id":7010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7029,"src":"738:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7008,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:19"},"scope":7138,"src":"662:299:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7047,"nodeType":"Block","src":"1102:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7040,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"1127:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7041,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"1131:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7043,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"1134:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7044,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"1137:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7039,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"1119:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7038,"id":7046,"nodeType":"Return","src":"1112:27:19"}]},"documentation":{"id":7030,"nodeType":"StructuredDocumentation","src":"967:66:19","text":" @dev Returns the largest of two signed numbers."},"id":7048,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:19","nodeType":"FunctionDefinition","parameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7032,"mutability":"mutable","name":"a","nameLocation":"1058:1:19","nodeType":"VariableDeclaration","scope":7048,"src":"1051:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7031,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7034,"mutability":"mutable","name":"b","nameLocation":"1068:1:19","nodeType":"VariableDeclaration","scope":7048,"src":"1061:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7033,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:19"},"returnParameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7048,"src":"1094:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7036,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:19"},"scope":7138,"src":"1038:108:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7066,"nodeType":"Block","src":"1288:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7059,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7051,"src":"1313:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7060,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"1317:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7062,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7051,"src":"1320:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7063,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"1323:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7058,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"1305:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7057,"id":7065,"nodeType":"Return","src":"1298:27:19"}]},"documentation":{"id":7049,"nodeType":"StructuredDocumentation","src":"1152:67:19","text":" @dev Returns the smallest of two signed numbers."},"id":7067,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:19","nodeType":"FunctionDefinition","parameters":{"id":7054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7051,"mutability":"mutable","name":"a","nameLocation":"1244:1:19","nodeType":"VariableDeclaration","scope":7067,"src":"1237:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7050,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7053,"mutability":"mutable","name":"b","nameLocation":"1254:1:19","nodeType":"VariableDeclaration","scope":7067,"src":"1247:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7052,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:19"},"returnParameters":{"id":7057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7067,"src":"1280:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7055,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:19"},"scope":7138,"src":"1224:108:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7110,"nodeType":"Block","src":"1537:162:19","statements":[{"assignments":[7078],"declarations":[{"constant":false,"id":7078,"mutability":"mutable","name":"x","nameLocation":"1606:1:19","nodeType":"VariableDeclaration","scope":7110,"src":"1599:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7077,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7091,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7079,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"1611:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7080,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1615:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7083,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"1622:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7084,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1626:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:19"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7092,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"1651:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7097,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"1671:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:19","typeDescriptions":{}}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7093,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:19","typeDescriptions":{}}},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7102,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"1685:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7103,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1689:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7076,"id":7109,"nodeType":"Return","src":"1644:48:19"}]},"documentation":{"id":7068,"nodeType":"StructuredDocumentation","src":"1338:126:19","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7111,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:19","nodeType":"FunctionDefinition","parameters":{"id":7073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7070,"mutability":"mutable","name":"a","nameLocation":"1493:1:19","nodeType":"VariableDeclaration","scope":7111,"src":"1486:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7069,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7072,"mutability":"mutable","name":"b","nameLocation":"1503:1:19","nodeType":"VariableDeclaration","scope":7111,"src":"1496:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7071,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:19"},"returnParameters":{"id":7076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7111,"src":"1529:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7074,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:19"},"scope":7138,"src":"1469:230:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7136,"nodeType":"Block","src":"1843:767:19","statements":[{"id":7135,"nodeType":"UncheckedBlock","src":"1853:751:19","statements":[{"assignments":[7120],"declarations":[{"constant":false,"id":7120,"mutability":"mutable","name":"mask","nameLocation":"2424:4:19","nodeType":"VariableDeclaration","scope":7135,"src":"2417:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7119,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7124,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7121,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"2431:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7127,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"2576:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7128,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"2580:4:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7131,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"2588:4:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7125,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:19","typeDescriptions":{}}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7118,"id":7134,"nodeType":"Return","src":"2560:33:19"}]}]},"documentation":{"id":7112,"nodeType":"StructuredDocumentation","src":"1705:78:19","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7137,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:19","nodeType":"FunctionDefinition","parameters":{"id":7115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7114,"mutability":"mutable","name":"n","nameLocation":"1808:1:19","nodeType":"VariableDeclaration","scope":7137,"src":"1801:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7113,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:19"},"returnParameters":{"id":7118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7137,"src":"1834:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:19"},"scope":7138,"src":"1788:822:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7139,"src":"258:2354:19","usedErrors":[],"usedEvents":[]}],"src":"109:2504:19"},"id":19},"contracts/SuperBridgeL2.sol":{"ast":{"absolutePath":"contracts/SuperBridgeL2.sol","exportedSymbols":{"ECDSA":[3522],"Initializable":[462],"MessageHashUtils":[3608],"OwnableUpgradeable":[194],"PausableUpgradeable":[850],"ReentrancyGuardUpgradeable":[979],"SuperBridgeL2":[8169],"UUPSUpgradeable":[644]},"id":8170,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7140,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"33:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":7142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8170,"sourceUnit":3523,"src":"61:77:20","symbolAliases":[{"foreign":{"id":7141,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"70:5:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":7144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8170,"sourceUnit":3609,"src":"140:99:20","symbolAliases":[{"foreign":{"id":7143,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"149:16:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":7146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8170,"sourceUnit":980,"src":"241:118:20","symbolAliases":[{"foreign":{"id":7145,"name":"ReentrancyGuardUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"250:26:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":7148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8170,"sourceUnit":463,"src":"361:98:20","symbolAliases":[{"foreign":{"id":7147,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"370:13:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":7150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8170,"sourceUnit":645,"src":"461:102:20","symbolAliases":[{"foreign":{"id":7149,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"470:15:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":7152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8170,"sourceUnit":195,"src":"565:103:20","symbolAliases":[{"foreign":{"id":7151,"name":"OwnableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"574:18:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","id":7154,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8170,"sourceUnit":851,"src":"670:104:20","symbolAliases":[{"foreign":{"id":7153,"name":"PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"679:19:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7156,"name":"Initializable","nameLocations":["959:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"959:13:20"},"id":7157,"nodeType":"InheritanceSpecifier","src":"959:13:20"},{"baseName":{"id":7158,"name":"UUPSUpgradeable","nameLocations":["980:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":644,"src":"980:15:20"},"id":7159,"nodeType":"InheritanceSpecifier","src":"980:15:20"},{"baseName":{"id":7160,"name":"OwnableUpgradeable","nameLocations":["1003:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"1003:18:20"},"id":7161,"nodeType":"InheritanceSpecifier","src":"1003:18:20"},{"baseName":{"id":7162,"name":"ReentrancyGuardUpgradeable","nameLocations":["1029:26:20"],"nodeType":"IdentifierPath","referencedDeclaration":979,"src":"1029:26:20"},"id":7163,"nodeType":"InheritanceSpecifier","src":"1029:26:20"},{"baseName":{"id":7164,"name":"PausableUpgradeable","nameLocations":["1062:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":850,"src":"1062:19:20"},"id":7165,"nodeType":"InheritanceSpecifier","src":"1062:19:20"}],"canonicalName":"SuperBridgeL2","contractDependencies":[],"contractKind":"contract","documentation":{"id":7155,"nodeType":"StructuredDocumentation","src":"778:147:20","text":" @title SuperBridgeL2 - L2 to L1 Bridge with Timelock\n @notice Handles native token bridging from L2 to L1 with validator signatures"},"fullyImplemented":true,"id":8169,"linearizedBaseContracts":[8169,850,979,194,690,644,1010,462],"name":"SuperBridgeL2","nameLocation":"936:13:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"46904840","id":7167,"mutability":"mutable","name":"feeRecipient","nameLocation":"1206:12:20","nodeType":"VariableDeclaration","scope":8169,"src":"1191:27:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7166,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"bf333f2c","id":7170,"mutability":"constant","name":"FEE_BPS","nameLocation":"1249:7:20","nodeType":"VariableDeclaration","scope":8169,"src":"1225:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1225:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353030","id":7169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1259:3:20","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"public"},{"constant":true,"functionSelector":"e1a45218","id":7173,"mutability":"constant","name":"BPS_DENOMINATOR","nameLocation":"1299:15:20","nodeType":"VariableDeclaration","scope":8169,"src":"1275:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1275:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":7172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1317:5:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":true,"functionSelector":"7d57900a","id":7176,"mutability":"constant","name":"REFUND_TIMEOUT","nameLocation":"1353:14:20","nodeType":"VariableDeclaration","scope":8169,"src":"1329:51:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7174,"name":"uint256","nodeType":"ElementaryTypeName","src":"1329:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":7175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1370:10:20","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_1800_by_1","typeString":"int_const 1800"},"value":"30"},"visibility":"public"},{"constant":true,"functionSelector":"1a179692","id":7179,"mutability":"constant","name":"MIN_SIGNATURES","nameLocation":"1411:14:20","nodeType":"VariableDeclaration","scope":8169,"src":"1387:42:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1387:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":7178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1428:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"3f4218e0","id":7183,"mutability":"mutable","name":"isFeeExempt","nameLocation":"1487:11:20","nodeType":"VariableDeclaration","scope":8169,"src":"1455:43:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7182,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7180,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1455:24:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7181,"name":"bool","nodeType":"ElementaryTypeName","src":"1474:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"2f7801f4","id":7187,"mutability":"mutable","name":"userNonces","nameLocation":"1540:10:20","nodeType":"VariableDeclaration","scope":8169,"src":"1505:45:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7186,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7184,"name":"address","nodeType":"ElementaryTypeName","src":"1513:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1505:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1524:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"canonicalName":"SuperBridgeL2.Status","id":7191,"members":[{"id":7188,"name":"Pending","nameLocation":"1577:7:20","nodeType":"EnumValue","src":"1577:7:20"},{"id":7189,"name":"Completed","nameLocation":"1586:9:20","nodeType":"EnumValue","src":"1586:9:20"},{"id":7190,"name":"Refunded","nameLocation":"1597:8:20","nodeType":"EnumValue","src":"1597:8:20"}],"name":"Status","nameLocation":"1568:6:20","nodeType":"EnumDefinition","src":"1563:44:20"},{"canonicalName":"SuperBridgeL2.Transfer","id":7203,"members":[{"constant":false,"id":7193,"mutability":"mutable","name":"user","nameLocation":"1654:4:20","nodeType":"VariableDeclaration","scope":7203,"src":"1646:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7192,"name":"address","nodeType":"ElementaryTypeName","src":"1646:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7195,"mutability":"mutable","name":"originalAmount","nameLocation":"1677:14:20","nodeType":"VariableDeclaration","scope":7203,"src":"1669:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1669:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7197,"mutability":"mutable","name":"bridgedAmount","nameLocation":"1710:13:20","nodeType":"VariableDeclaration","scope":7203,"src":"1702:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1702:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7199,"mutability":"mutable","name":"timestamp","nameLocation":"1742:9:20","nodeType":"VariableDeclaration","scope":7203,"src":"1734:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1734:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7202,"mutability":"mutable","name":"status","nameLocation":"1769:6:20","nodeType":"VariableDeclaration","scope":7203,"src":"1762:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"},"typeName":{"id":7201,"nodeType":"UserDefinedTypeName","pathNode":{"id":7200,"name":"Status","nameLocations":["1762:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":7191,"src":"1762:6:20"},"referencedDeclaration":7191,"src":"1762:6:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}},"visibility":"internal"}],"name":"Transfer","nameLocation":"1626:8:20","nodeType":"StructDefinition","scope":8169,"src":"1619:164:20","visibility":"public"},{"constant":false,"functionSelector":"3c64f04b","id":7208,"mutability":"mutable","name":"transfers","nameLocation":"1831:9:20","nodeType":"VariableDeclaration","scope":8169,"src":"1795:45:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Transfer_$7203_storage_$","typeString":"mapping(bytes32 => struct SuperBridgeL2.Transfer)"},"typeName":{"id":7207,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1803:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1795:28:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Transfer_$7203_storage_$","typeString":"mapping(bytes32 => struct SuperBridgeL2.Transfer)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7206,"nodeType":"UserDefinedTypeName","pathNode":{"id":7205,"name":"Transfer","nameLocations":["1814:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":7203,"src":"1814:8:20"},"referencedDeclaration":7203,"src":"1814:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer"}}},"visibility":"public"},{"constant":false,"functionSelector":"d5f50582","id":7212,"mutability":"mutable","name":"isValidSigner","nameLocation":"1879:13:20","nodeType":"VariableDeclaration","scope":8169,"src":"1847:45:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7211,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7209,"name":"address","nodeType":"ElementaryTypeName","src":"1855:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1847:24:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7210,"name":"bool","nodeType":"ElementaryTypeName","src":"1866:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"12679fed","id":7214,"mutability":"mutable","name":"numSigners","nameLocation":"1914:10:20","nodeType":"VariableDeclaration","scope":8169,"src":"1899:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1899:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8c879fb9","id":7216,"mutability":"mutable","name":"upgradeTimelock","nameLocation":"1975:15:20","nodeType":"VariableDeclaration","scope":8169,"src":"1960:30:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7215,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d8c17114","id":7220,"mutability":"mutable","name":"pendingUpgrades","nameLocation":"2032:15:20","nodeType":"VariableDeclaration","scope":8169,"src":"1997:50:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":7219,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2005:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1997:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2016:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"09705de8","id":7224,"mutability":"mutable","name":"emergencyOperators","nameLocation":"2119:18:20","nodeType":"VariableDeclaration","scope":8169,"src":"2087:50:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7223,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7221,"name":"address","nodeType":"ElementaryTypeName","src":"2095:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2087:24:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7222,"name":"bool","nodeType":"ElementaryTypeName","src":"2106:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"72070b81","id":7226,"mutability":"mutable","name":"emergencyWithdrawDelay","nameLocation":"2159:22:20","nodeType":"VariableDeclaration","scope":8169,"src":"2144:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2144:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"de9b9488","id":7228,"mutability":"mutable","name":"emergencyWithdrawTime","nameLocation":"2203:21:20","nodeType":"VariableDeclaration","scope":8169,"src":"2188:36:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2188:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"54fd4d50","id":7230,"mutability":"mutable","name":"version","nameLocation":"2251:7:20","nodeType":"VariableDeclaration","scope":8169,"src":"2237:21:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7229,"name":"string","nodeType":"ElementaryTypeName","src":"2237:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"anonymous":false,"eventSelector":"719ab00511e884d1ea4921ee843132435dc006b0bb7f8b67fb693b621e45bb53","id":7242,"name":"BridgeInitiated","nameLocation":"2310:15:20","nodeType":"EventDefinition","parameters":{"id":7241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7232,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2352:4:20","nodeType":"VariableDeclaration","scope":7242,"src":"2336:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7231,"name":"address","nodeType":"ElementaryTypeName","src":"2336:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7234,"indexed":false,"mutability":"mutable","name":"originalAmount","nameLocation":"2375:14:20","nodeType":"VariableDeclaration","scope":7242,"src":"2367:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7233,"name":"uint256","nodeType":"ElementaryTypeName","src":"2367:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7236,"indexed":false,"mutability":"mutable","name":"bridgedAmount","nameLocation":"2408:13:20","nodeType":"VariableDeclaration","scope":7242,"src":"2400:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7235,"name":"uint256","nodeType":"ElementaryTypeName","src":"2400:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7238,"indexed":false,"mutability":"mutable","name":"transferId","nameLocation":"2440:10:20","nodeType":"VariableDeclaration","scope":7242,"src":"2432:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2432:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7240,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2469:9:20","nodeType":"VariableDeclaration","scope":7242,"src":"2461:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7239,"name":"uint256","nodeType":"ElementaryTypeName","src":"2461:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:160:20"},"src":"2304:182:20"},{"anonymous":false,"eventSelector":"3a5e0271cd79026f0993aa13e6dd17d1f34284aa2340c1d2c33653b9a4433ee9","id":7250,"name":"BridgeCompleted","nameLocation":"2498:15:20","nodeType":"EventDefinition","parameters":{"id":7249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7244,"indexed":true,"mutability":"mutable","name":"transferId","nameLocation":"2530:10:20","nodeType":"VariableDeclaration","scope":7250,"src":"2514:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2514:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7246,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2550:4:20","nodeType":"VariableDeclaration","scope":7250,"src":"2542:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7245,"name":"address","nodeType":"ElementaryTypeName","src":"2542:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7248,"indexed":false,"mutability":"mutable","name":"bridgedAmount","nameLocation":"2564:13:20","nodeType":"VariableDeclaration","scope":7250,"src":"2556:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2556:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2513:65:20"},"src":"2492:87:20"},{"anonymous":false,"eventSelector":"f552ca82e113ac3c539c3d617f29fcd19c172a0c75dad017555c9e109f7fe183","id":7258,"name":"Refunded","nameLocation":"2591:8:20","nodeType":"EventDefinition","parameters":{"id":7257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7252,"indexed":true,"mutability":"mutable","name":"transferId","nameLocation":"2616:10:20","nodeType":"VariableDeclaration","scope":7258,"src":"2600:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2600:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7254,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2636:4:20","nodeType":"VariableDeclaration","scope":7258,"src":"2628:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7253,"name":"address","nodeType":"ElementaryTypeName","src":"2628:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7256,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2650:6:20","nodeType":"VariableDeclaration","scope":7258,"src":"2642:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7255,"name":"uint256","nodeType":"ElementaryTypeName","src":"2642:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2599:58:20"},"src":"2585:73:20"},{"anonymous":false,"eventSelector":"4d5771454588f51370a8a2e7e151354b6de0dc3159b14821b4ad76bc04c28bc7","id":7264,"name":"FeeExemptUpdated","nameLocation":"2670:16:20","nodeType":"EventDefinition","parameters":{"id":7263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7260,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2703:4:20","nodeType":"VariableDeclaration","scope":7264,"src":"2687:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7259,"name":"address","nodeType":"ElementaryTypeName","src":"2687:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7262,"indexed":false,"mutability":"mutable","name":"exempt","nameLocation":"2714:6:20","nodeType":"VariableDeclaration","scope":7264,"src":"2709:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7261,"name":"bool","nodeType":"ElementaryTypeName","src":"2709:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2686:35:20"},"src":"2664:58:20"},{"anonymous":false,"eventSelector":"763b63b30e91c843bb39e4379603697003d3b7c1f192619cd782fa33bdc44396","id":7270,"name":"ValidatorUpdated","nameLocation":"2734:16:20","nodeType":"EventDefinition","parameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7266,"indexed":true,"mutability":"mutable","name":"validator","nameLocation":"2767:9:20","nodeType":"VariableDeclaration","scope":7270,"src":"2751:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7265,"name":"address","nodeType":"ElementaryTypeName","src":"2751:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7268,"indexed":false,"mutability":"mutable","name":"isValid","nameLocation":"2783:7:20","nodeType":"VariableDeclaration","scope":7270,"src":"2778:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7267,"name":"bool","nodeType":"ElementaryTypeName","src":"2778:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2750:41:20"},"src":"2728:64:20"},{"anonymous":false,"eventSelector":"aaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3","id":7276,"name":"FeeRecipientUpdated","nameLocation":"2804:19:20","nodeType":"EventDefinition","parameters":{"id":7275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7272,"indexed":false,"mutability":"mutable","name":"oldRecipient","nameLocation":"2832:12:20","nodeType":"VariableDeclaration","scope":7276,"src":"2824:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7271,"name":"address","nodeType":"ElementaryTypeName","src":"2824:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7274,"indexed":false,"mutability":"mutable","name":"newRecipient","nameLocation":"2854:12:20","nodeType":"VariableDeclaration","scope":7276,"src":"2846:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7273,"name":"address","nodeType":"ElementaryTypeName","src":"2846:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2823:44:20"},"src":"2798:70:20"},{"anonymous":false,"eventSelector":"79e2dca331f93c0d9119556c8a471734e6bc8470283391068f156e9a6d3cd3e6","id":7284,"name":"UpgradeScheduled","nameLocation":"2880:16:20","nodeType":"EventDefinition","parameters":{"id":7283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7278,"indexed":true,"mutability":"mutable","name":"upgradeHash","nameLocation":"2913:11:20","nodeType":"VariableDeclaration","scope":7284,"src":"2897:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2897:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7280,"indexed":false,"mutability":"mutable","name":"newImplementation","nameLocation":"2934:17:20","nodeType":"VariableDeclaration","scope":7284,"src":"2926:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7279,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7282,"indexed":false,"mutability":"mutable","name":"executeTime","nameLocation":"2961:11:20","nodeType":"VariableDeclaration","scope":7284,"src":"2953:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2953:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2896:77:20"},"src":"2874:100:20"},{"anonymous":false,"eventSelector":"1b011fae1a8fa8755c05a1200229cf94f1218002d660dae8eca1e796db11e212","id":7290,"name":"UpgradeExecuted","nameLocation":"2986:15:20","nodeType":"EventDefinition","parameters":{"id":7289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7286,"indexed":true,"mutability":"mutable","name":"upgradeHash","nameLocation":"3018:11:20","nodeType":"VariableDeclaration","scope":7290,"src":"3002:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3002:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7288,"indexed":false,"mutability":"mutable","name":"newImplementation","nameLocation":"3039:17:20","nodeType":"VariableDeclaration","scope":7290,"src":"3031:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7287,"name":"address","nodeType":"ElementaryTypeName","src":"3031:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3001:56:20"},"src":"2980:78:20"},{"anonymous":false,"eventSelector":"3e9cac94b7c7db9b86df56321e6f7e3e88a6c87fc15fd825df1492cf69e33551","id":7296,"name":"TimelockUpdated","nameLocation":"3070:15:20","nodeType":"EventDefinition","parameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7292,"indexed":false,"mutability":"mutable","name":"oldTimelock","nameLocation":"3094:11:20","nodeType":"VariableDeclaration","scope":7296,"src":"3086:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7291,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7294,"indexed":false,"mutability":"mutable","name":"newTimelock","nameLocation":"3115:11:20","nodeType":"VariableDeclaration","scope":7296,"src":"3107:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3107:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3085:42:20"},"src":"3064:64:20"},{"errorSelector":"2c5211c6","id":7298,"name":"InvalidAmount","nameLocation":"3179:13:20","nodeType":"ErrorDefinition","parameters":{"id":7297,"nodeType":"ParameterList","parameters":[],"src":"3192:2:20"},"src":"3173:22:20"},{"errorSelector":"ea8e4eb5","id":7300,"name":"NotAuthorized","nameLocation":"3207:13:20","nodeType":"ErrorDefinition","parameters":{"id":7299,"nodeType":"ParameterList","parameters":[],"src":"3220:2:20"},"src":"3201:22:20"},{"errorSelector":"475a2535","id":7302,"name":"AlreadyFinalized","nameLocation":"3235:16:20","nodeType":"ErrorDefinition","parameters":{"id":7301,"nodeType":"ParameterList","parameters":[],"src":"3251:2:20"},"src":"3229:25:20"},{"errorSelector":"3b2a862c","id":7304,"name":"InvalidTransferId","nameLocation":"3266:17:20","nodeType":"ErrorDefinition","parameters":{"id":7303,"nodeType":"ParameterList","parameters":[],"src":"3283:2:20"},"src":"3260:26:20"},{"errorSelector":"815e1d64","id":7306,"name":"InvalidSigner","nameLocation":"3298:13:20","nodeType":"ErrorDefinition","parameters":{"id":7305,"nodeType":"ParameterList","parameters":[],"src":"3311:2:20"},"src":"3292:22:20"},{"errorSelector":"54ac7bfc","id":7308,"name":"NotAuthorizedSigner","nameLocation":"3326:19:20","nodeType":"ErrorDefinition","parameters":{"id":7307,"nodeType":"ParameterList","parameters":[],"src":"3345:2:20"},"src":"3320:28:20"},{"errorSelector":"8044bb33","id":7310,"name":"DuplicateSigner","nameLocation":"3360:15:20","nodeType":"ErrorDefinition","parameters":{"id":7309,"nodeType":"ParameterList","parameters":[],"src":"3375:2:20"},"src":"3354:24:20"},{"errorSelector":"e246dc63","id":7312,"name":"NotEnoughSignatures","nameLocation":"3390:19:20","nodeType":"ErrorDefinition","parameters":{"id":7311,"nodeType":"ParameterList","parameters":[],"src":"3409:2:20"},"src":"3384:28:20"},{"errorSelector":"096dc0e1","id":7314,"name":"ForwardFailed","nameLocation":"3424:13:20","nodeType":"ErrorDefinition","parameters":{"id":7313,"nodeType":"ParameterList","parameters":[],"src":"3437:2:20"},"src":"3418:22:20"},{"errorSelector":"3742d1f6","id":7316,"name":"NotRefundable","nameLocation":"3452:13:20","nodeType":"ErrorDefinition","parameters":{"id":7315,"nodeType":"ParameterList","parameters":[],"src":"3465:2:20"},"src":"3446:22:20"},{"errorSelector":"3e87cffd","id":7318,"name":"NotYourTransfer","nameLocation":"3480:15:20","nodeType":"ErrorDefinition","parameters":{"id":7317,"nodeType":"ParameterList","parameters":[],"src":"3495:2:20"},"src":"3474:24:20"},{"errorSelector":"0b4d6981","id":7320,"name":"RefundNotAvailable","nameLocation":"3510:18:20","nodeType":"ErrorDefinition","parameters":{"id":7319,"nodeType":"ParameterList","parameters":[],"src":"3528:2:20"},"src":"3504:27:20"},{"errorSelector":"f0c49d44","id":7322,"name":"RefundFailed","nameLocation":"3543:12:20","nodeType":"ErrorDefinition","parameters":{"id":7321,"nodeType":"ParameterList","parameters":[],"src":"3555:2:20"},"src":"3537:21:20"},{"errorSelector":"f8d10e82","id":7324,"name":"InvalidTimelock","nameLocation":"3570:15:20","nodeType":"ErrorDefinition","parameters":{"id":7323,"nodeType":"ParameterList","parameters":[],"src":"3585:2:20"},"src":"3564:24:20"},{"errorSelector":"1bada802","id":7326,"name":"UpgradeNotReady","nameLocation":"3600:15:20","nodeType":"ErrorDefinition","parameters":{"id":7325,"nodeType":"ParameterList","parameters":[],"src":"3615:2:20"},"src":"3594:24:20"},{"errorSelector":"e1af1e2e","id":7328,"name":"UpgradeNotScheduled","nameLocation":"3630:19:20","nodeType":"ErrorDefinition","parameters":{"id":7327,"nodeType":"ParameterList","parameters":[],"src":"3649:2:20"},"src":"3624:28:20"},{"body":{"id":7335,"nodeType":"Block","src":"3728:41:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7332,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"3739:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7334,"nodeType":"ExpressionStatement","src":"3739:22:20"}]},"documentation":{"id":7329,"nodeType":"StructuredDocumentation","src":"3660:48:20","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":7336,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7330,"nodeType":"ParameterList","parameters":[],"src":"3725:2:20"},"returnParameters":{"id":7331,"nodeType":"ParameterList","parameters":[],"src":"3728:0:20"},"scope":8169,"src":"3714:55:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7398,"nodeType":"Block","src":"3890:700:20","statements":[{"expression":{"arguments":[{"expression":{"id":7346,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3916:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3920:6:20","memberName":"sender","nodeType":"MemberAccess","src":"3916:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7345,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"3901:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3901:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7349,"nodeType":"ExpressionStatement","src":"3901:26:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7350,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"3938:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3938:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7352,"nodeType":"ExpressionStatement","src":"3938:24:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7353,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3973:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7355,"nodeType":"ExpressionStatement","src":"3973:24:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7356,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"4008:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4008:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7358,"nodeType":"ExpressionStatement","src":"4008:17:20"},{"expression":{"id":7361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7359,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"4046:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7360,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"4061:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4046:28:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7362,"nodeType":"ExpressionStatement","src":"4046:28:20"},{"expression":{"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7363,"name":"upgradeTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"4085:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7364,"name":"_upgradeTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"4103:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4085:34:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7366,"nodeType":"ExpressionStatement","src":"4085:34:20"},{"expression":{"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7367,"name":"emergencyWithdrawDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"4155:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3234","id":7368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4180:8:20","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"24"},"src":"4155:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7370,"nodeType":"ExpressionStatement","src":"4155:33:20"},{"expression":{"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7371,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"4199:7:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"312e302e30","id":7372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4209:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c","typeString":"literal_string \"1.0.0\""},"value":"1.0.0"},"src":"4199:17:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7374,"nodeType":"ExpressionStatement","src":"4199:17:20"},{"expression":{"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7375,"name":"isFeeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"4280:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7377,"indexExpression":{"hexValue":"307831374361426338303031613330383030383335444438323036434542306334624139304235393133","id":7376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x17CaBc8001a30800835DD8206CEB0c4bA90B5913"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4280:55:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4338:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4280:62:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7380,"nodeType":"ExpressionStatement","src":"4280:62:20"},{"expression":{"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7381,"name":"isValidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"4396:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7383,"indexExpression":{"hexValue":"307837336146356265334442343643653362376335304664383333423943363031383066333339343439","id":7382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4410:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x73aF5be3DB46Ce3b7c50Fd833B9C60180f339449"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4396:57:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4456:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4396:64:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7386,"nodeType":"ExpressionStatement","src":"4396:64:20"},{"expression":{"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7387,"name":"numSigners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"4471:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":7388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4484:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4471:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7390,"nodeType":"ExpressionStatement","src":"4471:14:20"},{"expression":{"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7391,"name":"emergencyOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"4545:18:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7394,"indexExpression":{"expression":{"id":7392,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4564:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:20","memberName":"sender","nodeType":"MemberAccess","src":"4564:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4545:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4578:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4545:37:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7397,"nodeType":"ExpressionStatement","src":"4545:37:20"}]},"functionSelector":"cd6dc687","id":7399,"implemented":true,"kind":"function","modifiers":[{"id":7343,"kind":"modifierInvocation","modifierName":{"id":7342,"name":"initializer","nameLocations":["3878:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"3878:11:20"},"nodeType":"ModifierInvocation","src":"3878:11:20"}],"name":"initialize","nameLocation":"3786:10:20","nodeType":"FunctionDefinition","parameters":{"id":7341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7338,"mutability":"mutable","name":"_feeRecipient","nameLocation":"3815:13:20","nodeType":"VariableDeclaration","scope":7399,"src":"3807:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7337,"name":"address","nodeType":"ElementaryTypeName","src":"3807:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7340,"mutability":"mutable","name":"_upgradeTimelock","nameLocation":"3847:16:20","nodeType":"VariableDeclaration","scope":7399,"src":"3839:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7339,"name":"uint256","nodeType":"ElementaryTypeName","src":"3839:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3796:74:20"},"returnParameters":{"id":7344,"nodeType":"ParameterList","parameters":[],"src":"3890:0:20"},"scope":8169,"src":"3777:813:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7436,"nodeType":"Block","src":"4729:320:20","statements":[{"assignments":[7407],"declarations":[{"constant":false,"id":7407,"mutability":"mutable","name":"upgradeHash","nameLocation":"4748:11:20","nodeType":"VariableDeclaration","scope":7436,"src":"4740:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4740:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7416,"initialValue":{"arguments":[{"arguments":[{"id":7411,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"4789:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7412,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4808:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4814:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"4808:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7409,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4772:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4776:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"4772:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4772:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7408,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4762:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4762:63:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4740:85:20"},{"assignments":[7418],"declarations":[{"constant":false,"id":7418,"mutability":"mutable","name":"executeTime","nameLocation":"4844:11:20","nodeType":"VariableDeclaration","scope":7436,"src":"4836:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7417,"name":"uint256","nodeType":"ElementaryTypeName","src":"4836:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7423,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7419,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4858:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4864:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"4858:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7421,"name":"upgradeTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"4876:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4836:55:20"},{"expression":{"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7424,"name":"pendingUpgrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"4912:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7426,"indexExpression":{"id":7425,"name":"upgradeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"4928:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4912:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7427,"name":"executeTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"4943:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4912:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7429,"nodeType":"ExpressionStatement","src":"4912:42:20"},{"eventCall":{"arguments":[{"id":7431,"name":"upgradeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7407,"src":"4997:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7432,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"5010:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7433,"name":"executeTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"5029:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7430,"name":"UpgradeScheduled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7284,"src":"4980:16:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7435,"nodeType":"EmitStatement","src":"4975:66:20"}]},"functionSelector":"0c80447a","id":7437,"implemented":true,"kind":"function","modifiers":[{"id":7404,"kind":"modifierInvocation","modifierName":{"id":7403,"name":"onlyOwner","nameLocations":["4719:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"4719:9:20"},"nodeType":"ModifierInvocation","src":"4719:9:20"}],"name":"scheduleUpgrade","nameLocation":"4667:15:20","nodeType":"FunctionDefinition","parameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7401,"mutability":"mutable","name":"newImplementation","nameLocation":"4691:17:20","nodeType":"VariableDeclaration","scope":7437,"src":"4683:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7400,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:27:20"},"returnParameters":{"id":7405,"nodeType":"ParameterList","parameters":[],"src":"4729:0:20"},"scope":8169,"src":"4658:391:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7487,"nodeType":"Block","src":"5149:441:20","statements":[{"assignments":[7447],"declarations":[{"constant":false,"id":7447,"mutability":"mutable","name":"upgradeHash","nameLocation":"5168:11:20","nodeType":"VariableDeclaration","scope":7487,"src":"5160:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5160:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7455,"initialValue":{"arguments":[{"arguments":[{"id":7451,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"5209:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7452,"name":"scheduleTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"5228:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7449,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5192:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5196:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"5192:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5192:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7448,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5182:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5160:82:20"},{"assignments":[7457],"declarations":[{"constant":false,"id":7457,"mutability":"mutable","name":"executeTime","nameLocation":"5261:11:20","nodeType":"VariableDeclaration","scope":7487,"src":"5253:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5253:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7461,"initialValue":{"baseExpression":{"id":7458,"name":"pendingUpgrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"5275:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7460,"indexExpression":{"id":7459,"name":"upgradeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"5291:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5275:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5253:50:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7462,"name":"executeTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"5328:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5343:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5328:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7468,"nodeType":"IfStatement","src":"5324:50:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7465,"name":"UpgradeNotScheduled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"5353:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5353:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7467,"nodeType":"RevertStatement","src":"5346:28:20"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7469,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5389:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5395:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"5389:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7471,"name":"executeTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"5407:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5389:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7476,"nodeType":"IfStatement","src":"5385:59:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7473,"name":"UpgradeNotReady","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"5427:15:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7475,"nodeType":"RevertStatement","src":"5420:24:20"}},{"expression":{"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5465:35:20","subExpression":{"baseExpression":{"id":7477,"name":"pendingUpgrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"5472:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7479,"indexExpression":{"id":7478,"name":"upgradeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"5488:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5472:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7481,"nodeType":"ExpressionStatement","src":"5465:35:20"},{"eventCall":{"arguments":[{"id":7483,"name":"upgradeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"5551:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7484,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"5564:17:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7482,"name":"UpgradeExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"5535:15:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7486,"nodeType":"EmitStatement","src":"5530:52:20"}]},"functionSelector":"3e718e83","id":7488,"implemented":true,"kind":"function","modifiers":[{"id":7444,"kind":"modifierInvocation","modifierName":{"id":7443,"name":"onlyOwner","nameLocations":["5139:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"5139:9:20"},"nodeType":"ModifierInvocation","src":"5139:9:20"}],"name":"executeUpgrade","nameLocation":"5066:14:20","nodeType":"FunctionDefinition","parameters":{"id":7442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7439,"mutability":"mutable","name":"newImplementation","nameLocation":"5089:17:20","nodeType":"VariableDeclaration","scope":7488,"src":"5081:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7438,"name":"address","nodeType":"ElementaryTypeName","src":"5081:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7441,"mutability":"mutable","name":"scheduleTime","nameLocation":"5116:12:20","nodeType":"VariableDeclaration","scope":7488,"src":"5108:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7440,"name":"uint256","nodeType":"ElementaryTypeName","src":"5108:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5080:49:20"},"returnParameters":{"id":7445,"nodeType":"ParameterList","parameters":[],"src":"5149:0:20"},"scope":8169,"src":"5057:533:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7515,"nodeType":"Block","src":"5662:252:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7495,"name":"newTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"5677:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"333030","id":7496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5691:3:20","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"src":"5677:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7501,"nodeType":"IfStatement","src":"5673:47:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7498,"name":"InvalidTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"5703:15:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5703:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7500,"nodeType":"RevertStatement","src":"5696:24:20"}},{"assignments":[7503],"declarations":[{"constant":false,"id":7503,"mutability":"mutable","name":"oldTimelock","nameLocation":"5770:11:20","nodeType":"VariableDeclaration","scope":7515,"src":"5762:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7502,"name":"uint256","nodeType":"ElementaryTypeName","src":"5762:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7505,"initialValue":{"id":7504,"name":"upgradeTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"5784:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5762:37:20"},{"expression":{"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7506,"name":"upgradeTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"5810:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7507,"name":"newTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"5828:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5810:29:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7509,"nodeType":"ExpressionStatement","src":"5810:29:20"},{"eventCall":{"arguments":[{"id":7511,"name":"oldTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"5881:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7512,"name":"newTimelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"5894:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7510,"name":"TimelockUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"5865:15:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5865:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7514,"nodeType":"EmitStatement","src":"5860:46:20"}]},"functionSelector":"fa1ccffd","id":7516,"implemented":true,"kind":"function","modifiers":[{"id":7493,"kind":"modifierInvocation","modifierName":{"id":7492,"name":"onlyOwner","nameLocations":["5652:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"5652:9:20"},"nodeType":"ModifierInvocation","src":"5652:9:20"}],"name":"updateTimelock","nameLocation":"5607:14:20","nodeType":"FunctionDefinition","parameters":{"id":7491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7490,"mutability":"mutable","name":"newTimelock","nameLocation":"5630:11:20","nodeType":"VariableDeclaration","scope":7516,"src":"5622:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7489,"name":"uint256","nodeType":"ElementaryTypeName","src":"5622:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5621:21:20"},"returnParameters":{"id":7494,"nodeType":"ParameterList","parameters":[],"src":"5662:0:20"},"scope":8169,"src":"5598:316:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7536,"nodeType":"Block","src":"6038:91:20","statements":[{"expression":{"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7525,"name":"isFeeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"6049:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7527,"indexExpression":{"id":7526,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"6061:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6049:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7528,"name":"exempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"6069:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6049:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7530,"nodeType":"ExpressionStatement","src":"6049:26:20"},{"eventCall":{"arguments":[{"id":7532,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"6108:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7533,"name":"exempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"6114:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7531,"name":"FeeExemptUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"6091:16:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6091:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7535,"nodeType":"EmitStatement","src":"6086:35:20"}]},"functionSelector":"8ebfc796","id":7537,"implemented":true,"kind":"function","modifiers":[{"id":7523,"kind":"modifierInvocation","modifierName":{"id":7522,"name":"onlyOwner","nameLocations":["6028:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6028:9:20"},"nodeType":"ModifierInvocation","src":"6028:9:20"}],"name":"setFeeExempt","nameLocation":"5979:12:20","nodeType":"FunctionDefinition","parameters":{"id":7521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7518,"mutability":"mutable","name":"user","nameLocation":"6000:4:20","nodeType":"VariableDeclaration","scope":7537,"src":"5992:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7517,"name":"address","nodeType":"ElementaryTypeName","src":"5992:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7520,"mutability":"mutable","name":"exempt","nameLocation":"6011:6:20","nodeType":"VariableDeclaration","scope":7537,"src":"6006:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7519,"name":"bool","nodeType":"ElementaryTypeName","src":"6006:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5991:27:20"},"returnParameters":{"id":7524,"nodeType":"ParameterList","parameters":[],"src":"6038:0:20"},"scope":8169,"src":"5970:159:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7579,"nodeType":"Block","src":"6211:283:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7546,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"6226:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6237:25:20","subExpression":{"baseExpression":{"id":7547,"name":"isValidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"6238:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7549,"indexExpression":{"id":7548,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7539,"src":"6252:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6238:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6226:36:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6313:8:20","subExpression":{"id":7556,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"6314:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"baseExpression":{"id":7558,"name":"isValidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"6325:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7560,"indexExpression":{"id":7559,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7539,"src":"6339:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6325:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6313:36:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7566,"nodeType":"IfStatement","src":"6309:81:20","trueBody":{"id":7565,"nodeType":"Block","src":"6351:39:20","statements":[{"expression":{"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"6366:12:20","subExpression":{"id":7562,"name":"numSigners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"6366:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7564,"nodeType":"ExpressionStatement","src":"6366:12:20"}]}},"id":7567,"nodeType":"IfStatement","src":"6222:168:20","trueBody":{"id":7555,"nodeType":"Block","src":"6264:39:20","statements":[{"expression":{"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6279:12:20","subExpression":{"id":7552,"name":"numSigners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"6279:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7554,"nodeType":"ExpressionStatement","src":"6279:12:20"}]}},{"expression":{"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7568,"name":"isValidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"6400:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7570,"indexExpression":{"id":7569,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7539,"src":"6414:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6400:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7571,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"6427:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6400:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7573,"nodeType":"ExpressionStatement","src":"6400:34:20"},{"eventCall":{"arguments":[{"id":7575,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7539,"src":"6467:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7576,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"6478:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7574,"name":"ValidatorUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"6450:16:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6450:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7578,"nodeType":"EmitStatement","src":"6445:41:20"}]},"functionSelector":"4623c91d","id":7580,"implemented":true,"kind":"function","modifiers":[{"id":7544,"kind":"modifierInvocation","modifierName":{"id":7543,"name":"onlyOwner","nameLocations":["6201:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6201:9:20"},"nodeType":"ModifierInvocation","src":"6201:9:20"}],"name":"setValidator","nameLocation":"6146:12:20","nodeType":"FunctionDefinition","parameters":{"id":7542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7539,"mutability":"mutable","name":"validator","nameLocation":"6167:9:20","nodeType":"VariableDeclaration","scope":7580,"src":"6159:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7538,"name":"address","nodeType":"ElementaryTypeName","src":"6159:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7541,"mutability":"mutable","name":"isValid","nameLocation":"6183:7:20","nodeType":"VariableDeclaration","scope":7580,"src":"6178:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7540,"name":"bool","nodeType":"ElementaryTypeName","src":"6178:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6158:33:20"},"returnParameters":{"id":7545,"nodeType":"ParameterList","parameters":[],"src":"6211:0:20"},"scope":8169,"src":"6137:357:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7600,"nodeType":"Block","src":"6569:157:20","statements":[{"assignments":[7588],"declarations":[{"constant":false,"id":7588,"mutability":"mutable","name":"oldRecipient","nameLocation":"6588:12:20","nodeType":"VariableDeclaration","scope":7600,"src":"6580:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7587,"name":"address","nodeType":"ElementaryTypeName","src":"6580:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7590,"initialValue":{"id":7589,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"6603:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6580:35:20"},{"expression":{"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7591,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"6626:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7592,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"6641:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6626:28:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7594,"nodeType":"ExpressionStatement","src":"6626:28:20"},{"eventCall":{"arguments":[{"id":7596,"name":"oldRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7588,"src":"6690:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7597,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"6704:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7595,"name":"FeeRecipientUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"6670:19:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6670:48:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7599,"nodeType":"EmitStatement","src":"6665:53:20"}]},"functionSelector":"e74b981b","id":7601,"implemented":true,"kind":"function","modifiers":[{"id":7585,"kind":"modifierInvocation","modifierName":{"id":7584,"name":"onlyOwner","nameLocations":["6559:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6559:9:20"},"nodeType":"ModifierInvocation","src":"6559:9:20"}],"name":"setFeeRecipient","nameLocation":"6511:15:20","nodeType":"FunctionDefinition","parameters":{"id":7583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7582,"mutability":"mutable","name":"_feeRecipient","nameLocation":"6535:13:20","nodeType":"VariableDeclaration","scope":7601,"src":"6527:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7581,"name":"address","nodeType":"ElementaryTypeName","src":"6527:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6526:23:20"},"returnParameters":{"id":7586,"nodeType":"ParameterList","parameters":[],"src":"6569:0:20"},"scope":8169,"src":"6502:224:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7616,"nodeType":"Block","src":"6814:56:20","statements":[{"expression":{"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7610,"name":"emergencyOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"6825:18:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7612,"indexExpression":{"id":7611,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"6844:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6825:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7613,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"6856:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6825:37:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7615,"nodeType":"ExpressionStatement","src":"6825:37:20"}]},"functionSelector":"02e88899","id":7617,"implemented":true,"kind":"function","modifiers":[{"id":7608,"kind":"modifierInvocation","modifierName":{"id":7607,"name":"onlyOwner","nameLocations":["6804:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6804:9:20"},"nodeType":"ModifierInvocation","src":"6804:9:20"}],"name":"setEmergencyOperator","nameLocation":"6743:20:20","nodeType":"FunctionDefinition","parameters":{"id":7606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7603,"mutability":"mutable","name":"operator","nameLocation":"6772:8:20","nodeType":"VariableDeclaration","scope":7617,"src":"6764:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7602,"name":"address","nodeType":"ElementaryTypeName","src":"6764:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7605,"mutability":"mutable","name":"status","nameLocation":"6787:6:20","nodeType":"VariableDeclaration","scope":7617,"src":"6782:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7604,"name":"bool","nodeType":"ElementaryTypeName","src":"6782:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6763:31:20"},"returnParameters":{"id":7609,"nodeType":"ParameterList","parameters":[],"src":"6814:0:20"},"scope":8169,"src":"6734:136:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7632,"nodeType":"Block","src":"6913:97:20","statements":[{"condition":{"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6928:31:20","subExpression":{"baseExpression":{"id":7620,"name":"emergencyOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"6929:18:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7623,"indexExpression":{"expression":{"id":7621,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6948:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6952:6:20","memberName":"sender","nodeType":"MemberAccess","src":"6948:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6929:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7628,"nodeType":"IfStatement","src":"6924:59:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7625,"name":"NotAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7300,"src":"6968:13:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6968:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7627,"nodeType":"RevertStatement","src":"6961:22:20"}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7629,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"6994:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6994:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7631,"nodeType":"ExpressionStatement","src":"6994:8:20"}]},"functionSelector":"51858e27","id":7633,"implemented":true,"kind":"function","modifiers":[],"name":"emergencyPause","nameLocation":"6887:14:20","nodeType":"FunctionDefinition","parameters":{"id":7618,"nodeType":"ParameterList","parameters":[],"src":"6901:2:20"},"returnParameters":{"id":7619,"nodeType":"ParameterList","parameters":[],"src":"6913:0:20"},"scope":8169,"src":"6878:132:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7641,"nodeType":"Block","src":"7056:29:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7638,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"7067:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7067:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7640,"nodeType":"ExpressionStatement","src":"7067:10:20"}]},"functionSelector":"3f4ba83a","id":7642,"implemented":true,"kind":"function","modifiers":[{"id":7636,"kind":"modifierInvocation","modifierName":{"id":7635,"name":"onlyOwner","nameLocations":["7046:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"7046:9:20"},"nodeType":"ModifierInvocation","src":"7046:9:20"}],"name":"unpause","nameLocation":"7027:7:20","nodeType":"FunctionDefinition","parameters":{"id":7634,"nodeType":"ParameterList","parameters":[],"src":"7034:2:20"},"returnParameters":{"id":7637,"nodeType":"ParameterList","parameters":[],"src":"7056:0:20"},"scope":8169,"src":"7018:67:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7744,"nodeType":"Block","src":"7204:912:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7649,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7219:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7223:5:20","memberName":"value","nodeType":"MemberAccess","src":"7219:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7232:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7219:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7656,"nodeType":"IfStatement","src":"7215:42:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7653,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"7242:13:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7242:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7655,"nodeType":"RevertStatement","src":"7235:22:20"}},{"assignments":[7658],"declarations":[{"constant":false,"id":7658,"mutability":"mutable","name":"fee","nameLocation":"7286:3:20","nodeType":"VariableDeclaration","scope":7744,"src":"7278:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7657,"name":"uint256","nodeType":"ElementaryTypeName","src":"7278:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7660,"initialValue":{"hexValue":"30","id":7659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7278:15:20"},{"assignments":[7662],"declarations":[{"constant":false,"id":7662,"mutability":"mutable","name":"bridged","nameLocation":"7312:7:20","nodeType":"VariableDeclaration","scope":7744,"src":"7304:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7661,"name":"uint256","nodeType":"ElementaryTypeName","src":"7304:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7665,"initialValue":{"expression":{"id":7663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7322:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7326:5:20","memberName":"value","nodeType":"MemberAccess","src":"7322:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7304:27:20"},{"condition":{"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7356:24:20","subExpression":{"baseExpression":{"id":7666,"name":"isFeeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"7357:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7669,"indexExpression":{"expression":{"id":7667,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7369:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7373:6:20","memberName":"sender","nodeType":"MemberAccess","src":"7369:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7357:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7689,"nodeType":"IfStatement","src":"7352:142:20","trueBody":{"id":7688,"nodeType":"Block","src":"7382:112:20","statements":[{"expression":{"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7671,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"7397:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7672,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7404:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7408:5:20","memberName":"value","nodeType":"MemberAccess","src":"7404:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7674,"name":"FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"7416:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7404:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7676,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7403:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7677,"name":"BPS_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"7427:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7403:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7397:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7680,"nodeType":"ExpressionStatement","src":"7397:45:20"},{"expression":{"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7681,"name":"bridged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7662,"src":"7457:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7682,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7467:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7471:5:20","memberName":"value","nodeType":"MemberAccess","src":"7467:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7684,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7658,"src":"7479:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7467:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7457:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7687,"nodeType":"ExpressionStatement","src":"7457:25:20"}]}},{"assignments":[7691],"declarations":[{"constant":false,"id":7691,"mutability":"mutable","name":"nonce","nameLocation":"7522:5:20","nodeType":"VariableDeclaration","scope":7744,"src":"7514:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7690,"name":"uint256","nodeType":"ElementaryTypeName","src":"7514:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7697,"initialValue":{"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7530:24:20","subExpression":{"baseExpression":{"id":7692,"name":"userNonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"7530:10:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7695,"indexExpression":{"expression":{"id":7693,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7541:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7545:6:20","memberName":"sender","nodeType":"MemberAccess","src":"7541:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7530:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7514:40:20"},{"assignments":[7699],"declarations":[{"constant":false,"id":7699,"mutability":"mutable","name":"transferId","nameLocation":"7573:10:20","nodeType":"VariableDeclaration","scope":7744,"src":"7565:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7565:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7716,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":7703,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7627:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7631:6:20","memberName":"sender","nodeType":"MemberAccess","src":"7627:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7705,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7653:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7657:5:20","memberName":"value","nodeType":"MemberAccess","src":"7653:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7707,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7678:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7684:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"7678:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7709,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"7709:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7712,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7737:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_SuperBridgeL2_$8169","typeString":"contract SuperBridgeL2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperBridgeL2_$8169","typeString":"contract SuperBridgeL2"}],"id":7711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7729:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7710,"name":"address","nodeType":"ElementaryTypeName","src":"7729:7:20","typeDescriptions":{}}},"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7729:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7701,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7596:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7600:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"7596:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7596:157:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7700,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7586:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7586:168:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7565:189:20"},{"expression":{"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7717,"name":"transfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"7775:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Transfer_$7203_storage_$","typeString":"mapping(bytes32 => struct SuperBridgeL2.Transfer storage ref)"}},"id":7719,"indexExpression":{"id":7718,"name":"transferId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"7785:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7775:21:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage","typeString":"struct SuperBridgeL2.Transfer storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7721,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7829:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7833:6:20","memberName":"sender","nodeType":"MemberAccess","src":"7829:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7723,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7870:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7874:5:20","memberName":"value","nodeType":"MemberAccess","src":"7870:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7725,"name":"bridged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7662,"src":"7909:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7726,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7942:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7948:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"7942:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7728,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"7980:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7191_$","typeString":"type(enum SuperBridgeL2.Status)"}},"id":7729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7987:7:20","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":7188,"src":"7980:14:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}],"id":7720,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"7799:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Transfer_$7203_storage_ptr_$","typeString":"type(struct SuperBridgeL2.Transfer storage pointer)"}},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7823:4:20","7854:14:20","7894:13:20","7931:9:20","7972:6:20"],"names":["user","originalAmount","bridgedAmount","timestamp","status"],"nodeType":"FunctionCall","src":"7799:207:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_memory_ptr","typeString":"struct SuperBridgeL2.Transfer memory"}},"src":"7775:231:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage","typeString":"struct SuperBridgeL2.Transfer storage ref"}},"id":7732,"nodeType":"ExpressionStatement","src":"7775:231:20"},{"eventCall":{"arguments":[{"expression":{"id":7734,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8048:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8052:6:20","memberName":"sender","nodeType":"MemberAccess","src":"8048:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7736,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8060:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8064:5:20","memberName":"value","nodeType":"MemberAccess","src":"8060:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7738,"name":"bridged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7662,"src":"8071:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7739,"name":"transferId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"8080:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7740,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8092:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8098:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"8092:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7733,"name":"BridgeInitiated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"8032:15:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,bytes32,uint256)"}},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8032:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7743,"nodeType":"EmitStatement","src":"8027:81:20"}]},"functionSelector":"e78cea92","id":7745,"implemented":true,"kind":"function","modifiers":[{"id":7645,"kind":"modifierInvocation","modifierName":{"id":7644,"name":"nonReentrant","nameLocations":["7177:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":919,"src":"7177:12:20"},"nodeType":"ModifierInvocation","src":"7177:12:20"},{"id":7647,"kind":"modifierInvocation","modifierName":{"id":7646,"name":"whenNotPaused","nameLocations":["7190:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":740,"src":"7190:13:20"},"nodeType":"ModifierInvocation","src":"7190:13:20"}],"name":"bridge","nameLocation":"7151:6:20","nodeType":"FunctionDefinition","parameters":{"id":7643,"nodeType":"ParameterList","parameters":[],"src":"7157:2:20"},"returnParameters":{"id":7648,"nodeType":"ParameterList","parameters":[],"src":"7204:0:20"},"scope":8169,"src":"7142:974:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7938,"nodeType":"Block","src":"8289:1395:20","statements":[{"assignments":[7762],"declarations":[{"constant":false,"id":7762,"mutability":"mutable","name":"t","nameLocation":"8317:1:20","nodeType":"VariableDeclaration","scope":7938,"src":"8300:18:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer"},"typeName":{"id":7761,"nodeType":"UserDefinedTypeName","pathNode":{"id":7760,"name":"Transfer","nameLocations":["8300:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":7203,"src":"8300:8:20"},"referencedDeclaration":7203,"src":"8300:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer"}},"visibility":"internal"}],"id":7766,"initialValue":{"baseExpression":{"id":7763,"name":"transfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"8321:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Transfer_$7203_storage_$","typeString":"mapping(bytes32 => struct SuperBridgeL2.Transfer storage ref)"}},"id":7765,"indexExpression":{"id":7764,"name":"transferId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"8331:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8321:21:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage","typeString":"struct SuperBridgeL2.Transfer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8300:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7767,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"8357:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer storage pointer"}},"id":7768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8359:6:20","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"8357:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7769,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"8369:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7191_$","typeString":"type(enum SuperBridgeL2.Status)"}},"id":7770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8376:7:20","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":7188,"src":"8369:14:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}},"src":"8357:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7775,"nodeType":"IfStatement","src":"8353:57:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7772,"name":"AlreadyFinalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"8392:16:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8392:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7774,"nodeType":"RevertStatement","src":"8385:25:20"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7776,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"8425:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer storage pointer"}},"id":7777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8427:4:20","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":7193,"src":"8425:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8443:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8435:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7778,"name":"address","nodeType":"ElementaryTypeName","src":"8435:7:20","typeDescriptions":{}}},"id":7781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8435:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8425:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7786,"nodeType":"IfStatement","src":"8421:52:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7783,"name":"InvalidTransferId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"8454:17:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8454:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7785,"nodeType":"RevertStatement","src":"8447:26:20"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7787,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"8488:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8499:6:20","memberName":"length","nodeType":"MemberAccess","src":"8488:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7789,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"8509:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8517:6:20","memberName":"length","nodeType":"MemberAccess","src":"8509:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8488:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7795,"nodeType":"IfStatement","src":"8484:63:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7792,"name":"InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"8532:13:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8532:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7794,"nodeType":"RevertStatement","src":"8525:22:20"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7796,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"8562:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8573:6:20","memberName":"length","nodeType":"MemberAccess","src":"8562:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7798,"name":"MIN_SIGNATURES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"8582:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8562:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7803,"nodeType":"IfStatement","src":"8558:68:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7800,"name":"NotEnoughSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"8605:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8605:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7802,"nodeType":"RevertStatement","src":"8598:28:20"}},{"assignments":[7805],"declarations":[{"constant":false,"id":7805,"mutability":"mutable","name":"rawHash","nameLocation":"8647:7:20","nodeType":"VariableDeclaration","scope":7938,"src":"8639:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8639:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7820,"initialValue":{"arguments":[{"arguments":[{"id":7809,"name":"transferId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"8698:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7810,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"8724:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer storage pointer"}},"id":7811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8726:4:20","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":7193,"src":"8724:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7812,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"8746:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer storage pointer"}},"id":7813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8748:13:20","memberName":"bridgedAmount","nodeType":"MemberAccess","referencedDeclaration":7197,"src":"8746:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7816,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8784:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_SuperBridgeL2_$8169","typeString":"contract SuperBridgeL2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperBridgeL2_$8169","typeString":"contract SuperBridgeL2"}],"id":7815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8776:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7814,"name":"address","nodeType":"ElementaryTypeName","src":"8776:7:20","typeDescriptions":{}}},"id":7817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7807,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8667:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8671:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"8667:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8667:133:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7806,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8657:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8657:144:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8639:162:20"},{"assignments":[7822],"declarations":[{"constant":false,"id":7822,"mutability":"mutable","name":"messageHash","nameLocation":"8820:11:20","nodeType":"VariableDeclaration","scope":7938,"src":"8812:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8812:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7827,"initialValue":{"arguments":[{"id":7825,"name":"rawHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"8874:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7823,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"8834:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3608_$","typeString":"type(library MessageHashUtils)"}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8851:22:20","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":3537,"src":"8834:39:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":7826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8834:48:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8812:70:20"},{"assignments":[7832],"declarations":[{"constant":false,"id":7832,"mutability":"mutable","name":"seen","nameLocation":"8912:4:20","nodeType":"VariableDeclaration","scope":7938,"src":"8895:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7830,"name":"address","nodeType":"ElementaryTypeName","src":"8895:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7831,"nodeType":"ArrayTypeName","src":"8895:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":7839,"initialValue":{"arguments":[{"expression":{"id":7836,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"8933:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8941:6:20","memberName":"length","nodeType":"MemberAccess","src":"8933:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8919:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":7833,"name":"address","nodeType":"ElementaryTypeName","src":"8923:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7834,"nodeType":"ArrayTypeName","src":"8923:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":7838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8919:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8895:53:20"},{"body":{"id":7905,"nodeType":"Block","src":"9017:407:20","statements":[{"assignments":[7852],"declarations":[{"constant":false,"id":7852,"mutability":"mutable","name":"recovered","nameLocation":"9040:9:20","nodeType":"VariableDeclaration","scope":7905,"src":"9032:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7851,"name":"address","nodeType":"ElementaryTypeName","src":"9032:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7860,"initialValue":{"arguments":[{"id":7855,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7822,"src":"9066:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":7856,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"9079:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":7858,"indexExpression":{"id":7857,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"9090:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9079:13:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":7853,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"9052:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3522_$","typeString":"type(library ECDSA)"}},"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9058:7:20","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3278,"src":"9052:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9052:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9032:61:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7861,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"9112:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"baseExpression":{"id":7862,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7753,"src":"9125:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7864,"indexExpression":{"id":7863,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"9133:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9125:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9112:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7869,"nodeType":"IfStatement","src":"9108:51:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7866,"name":"InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7306,"src":"9144:13:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9144:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7868,"nodeType":"RevertStatement","src":"9137:22:20"}},{"condition":{"id":7873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9178:25:20","subExpression":{"baseExpression":{"id":7870,"name":"isValidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"9179:13:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7872,"indexExpression":{"id":7871,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"9193:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9179:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7877,"nodeType":"IfStatement","src":"9174:59:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7874,"name":"NotAuthorizedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7308,"src":"9212:19:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9212:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7876,"nodeType":"RevertStatement","src":"9205:28:20"}},{"body":{"id":7897,"nodeType":"Block","src":"9294:85:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7888,"name":"seen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7832,"src":"9317:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7890,"indexExpression":{"id":7889,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"9322:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9317:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7891,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"9328:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9317:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7896,"nodeType":"IfStatement","src":"9313:50:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7893,"name":"DuplicateSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"9346:15:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9346:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7895,"nodeType":"RevertStatement","src":"9339:24:20"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7882,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"9282:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7883,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"9286:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9282:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7898,"initializationExpression":{"assignments":[7879],"declarations":[{"constant":false,"id":7879,"mutability":"mutable","name":"j","nameLocation":"9275:1:20","nodeType":"VariableDeclaration","scope":7898,"src":"9267:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7878,"name":"uint256","nodeType":"ElementaryTypeName","src":"9267:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7881,"initialValue":{"hexValue":"30","id":7880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9279:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9267:13:20"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9289:3:20","subExpression":{"id":7885,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"9289:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7887,"nodeType":"ExpressionStatement","src":"9289:3:20"},"nodeType":"ForStatement","src":"9262:117:20"},{"expression":{"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7899,"name":"seen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7832,"src":"9393:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7901,"indexExpression":{"id":7900,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"9398:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9393:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7902,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"9403:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9393:19:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7904,"nodeType":"ExpressionStatement","src":"9393:19:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7844,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"8989:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7845,"name":"signatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"8993:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9004:6:20","memberName":"length","nodeType":"MemberAccess","src":"8993:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8989:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7906,"initializationExpression":{"assignments":[7841],"declarations":[{"constant":false,"id":7841,"mutability":"mutable","name":"i","nameLocation":"8982:1:20","nodeType":"VariableDeclaration","scope":7906,"src":"8974:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7840,"name":"uint256","nodeType":"ElementaryTypeName","src":"8974:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7843,"initialValue":{"hexValue":"30","id":7842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8986:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8974:13:20"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9012:3:20","subExpression":{"id":7848,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"9012:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7850,"nodeType":"ExpressionStatement","src":"9012:3:20"},"nodeType":"ForStatement","src":"8969:455:20"},{"expression":{"id":7912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7907,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"9444:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer storage pointer"}},"id":7909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9446:6:20","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"9444:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7910,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"9455:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7191_$","typeString":"type(enum SuperBridgeL2.Status)"}},"id":7911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9462:9:20","memberName":"Completed","nodeType":"MemberAccess","referencedDeclaration":7189,"src":"9455:16:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}},"src":"9444:27:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}},"id":7913,"nodeType":"ExpressionStatement","src":"9444:27:20"},{"assignments":[7915,null],"declarations":[{"constant":false,"id":7915,"mutability":"mutable","name":"sent","nameLocation":"9498:4:20","nodeType":"VariableDeclaration","scope":7938,"src":"9493:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7914,"name":"bool","nodeType":"ElementaryTypeName","src":"9493:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7923,"initialValue":{"arguments":[{"hexValue":"","id":7921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9551:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7916,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"9508:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9521:4:20","memberName":"call","nodeType":"MemberAccess","src":"9508:17:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":7918,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"9533:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer storage pointer"}},"id":7919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9535:14:20","memberName":"originalAmount","nodeType":"MemberAccess","referencedDeclaration":7195,"src":"9533:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9508:42:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9508:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9492:62:20"},{"condition":{"id":7925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9569:5:20","subExpression":{"id":7924,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7915,"src":"9570:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7929,"nodeType":"IfStatement","src":"9565:33:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7926,"name":"ForwardFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"9583:13:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7928,"nodeType":"RevertStatement","src":"9576:22:20"}},{"eventCall":{"arguments":[{"id":7931,"name":"transferId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"9640:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7932,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"9652:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer storage pointer"}},"id":7933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9654:4:20","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":7193,"src":"9652:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7934,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"9660:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer storage pointer"}},"id":7935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9662:13:20","memberName":"bridgedAmount","nodeType":"MemberAccess","referencedDeclaration":7197,"src":"9660:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7930,"name":"BridgeCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7250,"src":"9624:15:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":7936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9624:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7937,"nodeType":"EmitStatement","src":"9619:57:20"}]},"functionSelector":"ca9e4453","id":7939,"implemented":true,"kind":"function","modifiers":[{"id":7756,"kind":"modifierInvocation","modifierName":{"id":7755,"name":"nonReentrant","nameLocations":["8262:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":919,"src":"8262:12:20"},"nodeType":"ModifierInvocation","src":"8262:12:20"},{"id":7758,"kind":"modifierInvocation","modifierName":{"id":7757,"name":"whenNotPaused","nameLocations":["8275:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":740,"src":"8275:13:20"},"nodeType":"ModifierInvocation","src":"8275:13:20"}],"name":"complete","nameLocation":"8133:8:20","nodeType":"FunctionDefinition","parameters":{"id":7754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7747,"mutability":"mutable","name":"transferId","nameLocation":"8160:10:20","nodeType":"VariableDeclaration","scope":7939,"src":"8152:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8152:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7750,"mutability":"mutable","name":"signatures","nameLocation":"8198:10:20","nodeType":"VariableDeclaration","scope":7939,"src":"8181:27:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":7748,"name":"bytes","nodeType":"ElementaryTypeName","src":"8181:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":7749,"nodeType":"ArrayTypeName","src":"8181:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":7753,"mutability":"mutable","name":"signers","nameLocation":"8238:7:20","nodeType":"VariableDeclaration","scope":7939,"src":"8219:26:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7751,"name":"address","nodeType":"ElementaryTypeName","src":"8219:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7752,"nodeType":"ArrayTypeName","src":"8219:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8141:111:20"},"returnParameters":{"id":7759,"nodeType":"ParameterList","parameters":[],"src":"8289:0:20"},"scope":8169,"src":"8124:1560:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8017,"nodeType":"Block","src":"9750:549:20","statements":[{"assignments":[7948],"declarations":[{"constant":false,"id":7948,"mutability":"mutable","name":"t","nameLocation":"9778:1:20","nodeType":"VariableDeclaration","scope":8017,"src":"9761:18:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer"},"typeName":{"id":7947,"nodeType":"UserDefinedTypeName","pathNode":{"id":7946,"name":"Transfer","nameLocations":["9761:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":7203,"src":"9761:8:20"},"referencedDeclaration":7203,"src":"9761:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer"}},"visibility":"internal"}],"id":7952,"initialValue":{"baseExpression":{"id":7949,"name":"transfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"9782:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Transfer_$7203_storage_$","typeString":"mapping(bytes32 => struct SuperBridgeL2.Transfer storage ref)"}},"id":7951,"indexExpression":{"id":7950,"name":"transferId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"9792:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9782:21:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage","typeString":"struct SuperBridgeL2.Transfer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9761:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"},"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7953,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"9818:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer storage pointer"}},"id":7954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9820:6:20","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"9818:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7955,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"9830:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7191_$","typeString":"type(enum SuperBridgeL2.Status)"}},"id":7956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9837:7:20","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":7188,"src":"9830:14:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}},"src":"9818:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7961,"nodeType":"IfStatement","src":"9814:54:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7958,"name":"NotRefundable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"9853:13:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9853:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7960,"nodeType":"RevertStatement","src":"9846:22:20"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7962,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"9883:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer storage pointer"}},"id":7963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9885:4:20","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":7193,"src":"9883:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7964,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9893:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9897:6:20","memberName":"sender","nodeType":"MemberAccess","src":"9893:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9883:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7970,"nodeType":"IfStatement","src":"9879:50:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7967,"name":"NotYourTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"9912:15:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9912:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7969,"nodeType":"RevertStatement","src":"9905:24:20"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7971,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9944:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9950:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"9944:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7973,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"9963:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer storage pointer"}},"id":7974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9965:9:20","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":7199,"src":"9963:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7975,"name":"REFUND_TIMEOUT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"9977:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9963:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9944:47:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7981,"nodeType":"IfStatement","src":"9940:80:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7978,"name":"RefundNotAvailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"10000:18:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10000:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7980,"nodeType":"RevertStatement","src":"9993:27:20"}},{"expression":{"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7982,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"10041:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer storage pointer"}},"id":7984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10043:6:20","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"10041:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7985,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"10052:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7191_$","typeString":"type(enum SuperBridgeL2.Status)"}},"id":7986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10059:8:20","memberName":"Refunded","nodeType":"MemberAccess","referencedDeclaration":7190,"src":"10052:15:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}},"src":"10041:26:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}},"id":7988,"nodeType":"ExpressionStatement","src":"10041:26:20"},{"assignments":[7990],"declarations":[{"constant":false,"id":7990,"mutability":"mutable","name":"amount","nameLocation":"10086:6:20","nodeType":"VariableDeclaration","scope":8017,"src":"10078:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7989,"name":"uint256","nodeType":"ElementaryTypeName","src":"10078:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7993,"initialValue":{"expression":{"id":7991,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"10095:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer storage pointer"}},"id":7992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10097:14:20","memberName":"originalAmount","nodeType":"MemberAccess","referencedDeclaration":7195,"src":"10095:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10078:33:20"},{"assignments":[7995,null],"declarations":[{"constant":false,"id":7995,"mutability":"mutable","name":"sent","nameLocation":"10138:4:20","nodeType":"VariableDeclaration","scope":8017,"src":"10133:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7994,"name":"bool","nodeType":"ElementaryTypeName","src":"10133:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":8003,"initialValue":{"arguments":[{"hexValue":"","id":8001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10179:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":7996,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10148:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10152:6:20","memberName":"sender","nodeType":"MemberAccess","src":"10148:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10159:4:20","memberName":"call","nodeType":"MemberAccess","src":"10148:15:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7999,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"10171:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10148:30:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10148:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10132:50:20"},{"condition":{"id":8005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10197:5:20","subExpression":{"id":8004,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7995,"src":"10198:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8009,"nodeType":"IfStatement","src":"10193:32:20","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8006,"name":"RefundFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"10211:12:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10211:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8008,"nodeType":"RevertStatement","src":"10204:21:20"}},{"eventCall":{"arguments":[{"id":8011,"name":"transferId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"10260:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8012,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10272:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10276:6:20","memberName":"sender","nodeType":"MemberAccess","src":"10272:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8014,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"10284:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8010,"name":"Refunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"10251:8:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10251:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8016,"nodeType":"EmitStatement","src":"10246:45:20"}]},"functionSelector":"7249fbb6","id":8018,"implemented":true,"kind":"function","modifiers":[{"id":7944,"kind":"modifierInvocation","modifierName":{"id":7943,"name":"nonReentrant","nameLocations":["9737:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":919,"src":"9737:12:20"},"nodeType":"ModifierInvocation","src":"9737:12:20"}],"name":"refund","nameLocation":"9701:6:20","nodeType":"FunctionDefinition","parameters":{"id":7942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7941,"mutability":"mutable","name":"transferId","nameLocation":"9716:10:20","nodeType":"VariableDeclaration","scope":8018,"src":"9708:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9708:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9707:20:20"},"returnParameters":{"id":7945,"nodeType":"ParameterList","parameters":[],"src":"9750:0:20"},"scope":8169,"src":"9692:607:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8030,"nodeType":"Block","src":"10435:47:20","statements":[{"expression":{"baseExpression":{"id":8026,"name":"transfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"10453:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Transfer_$7203_storage_$","typeString":"mapping(bytes32 => struct SuperBridgeL2.Transfer storage ref)"}},"id":8028,"indexExpression":{"id":8027,"name":"transferId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8020,"src":"10463:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10453:21:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage","typeString":"struct SuperBridgeL2.Transfer storage ref"}},"functionReturnParameters":8025,"id":8029,"nodeType":"Return","src":"10446:28:20"}]},"functionSelector":"260958a5","id":8031,"implemented":true,"kind":"function","modifiers":[],"name":"getTransfer","nameLocation":"10363:11:20","nodeType":"FunctionDefinition","parameters":{"id":8021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8020,"mutability":"mutable","name":"transferId","nameLocation":"10383:10:20","nodeType":"VariableDeclaration","scope":8031,"src":"10375:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10375:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10374:20:20"},"returnParameters":{"id":8025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8031,"src":"10418:15:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_memory_ptr","typeString":"struct SuperBridgeL2.Transfer"},"typeName":{"id":8023,"nodeType":"UserDefinedTypeName","pathNode":{"id":8022,"name":"Transfer","nameLocations":["10418:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":7203,"src":"10418:8:20"},"referencedDeclaration":7203,"src":"10418:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer"}},"visibility":"internal"}],"src":"10417:17:20"},"scope":8169,"src":"10354:128:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8059,"nodeType":"Block","src":"10558:171:20","statements":[{"assignments":[8040],"declarations":[{"constant":false,"id":8040,"mutability":"mutable","name":"t","nameLocation":"10585:1:20","nodeType":"VariableDeclaration","scope":8059,"src":"10569:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_memory_ptr","typeString":"struct SuperBridgeL2.Transfer"},"typeName":{"id":8039,"nodeType":"UserDefinedTypeName","pathNode":{"id":8038,"name":"Transfer","nameLocations":["10569:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":7203,"src":"10569:8:20"},"referencedDeclaration":7203,"src":"10569:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer"}},"visibility":"internal"}],"id":8044,"initialValue":{"baseExpression":{"id":8041,"name":"transfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"10589:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Transfer_$7203_storage_$","typeString":"mapping(bytes32 => struct SuperBridgeL2.Transfer storage ref)"}},"id":8043,"indexExpression":{"id":8042,"name":"transferId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8033,"src":"10599:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10589:21:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage","typeString":"struct SuperBridgeL2.Transfer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10569:41:20"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8045,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"10628:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_memory_ptr","typeString":"struct SuperBridgeL2.Transfer memory"}},"id":8046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10630:6:20","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7202,"src":"10628:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8047,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"10640:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$7191_$","typeString":"type(enum SuperBridgeL2.Status)"}},"id":8048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10647:7:20","memberName":"Pending","nodeType":"MemberAccess","referencedDeclaration":7188,"src":"10640:14:20","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$7191","typeString":"enum SuperBridgeL2.Status"}},"src":"10628:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8050,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10675:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10681:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"10675:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8052,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"10693:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_memory_ptr","typeString":"struct SuperBridgeL2.Transfer memory"}},"id":8053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10695:9:20","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":7199,"src":"10693:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8054,"name":"REFUND_TIMEOUT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"10707:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10693:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10675:46:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10628:93:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8037,"id":8058,"nodeType":"Return","src":"10621:100:20"}]},"functionSelector":"8c8c2003","id":8060,"implemented":true,"kind":"function","modifiers":[],"name":"canRefund","nameLocation":"10499:9:20","nodeType":"FunctionDefinition","parameters":{"id":8034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8033,"mutability":"mutable","name":"transferId","nameLocation":"10517:10:20","nodeType":"VariableDeclaration","scope":8060,"src":"10509:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10509:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10508:20:20"},"returnParameters":{"id":8037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8060,"src":"10552:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8035,"name":"bool","nodeType":"ElementaryTypeName","src":"10552:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10551:6:20"},"scope":8169,"src":"10490:239:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8079,"nodeType":"Block","src":"10812:106:20","statements":[{"assignments":[8069],"declarations":[{"constant":false,"id":8069,"mutability":"mutable","name":"t","nameLocation":"10839:1:20","nodeType":"VariableDeclaration","scope":8079,"src":"10823:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_memory_ptr","typeString":"struct SuperBridgeL2.Transfer"},"typeName":{"id":8068,"nodeType":"UserDefinedTypeName","pathNode":{"id":8067,"name":"Transfer","nameLocations":["10823:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":7203,"src":"10823:8:20"},"referencedDeclaration":7203,"src":"10823:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage_ptr","typeString":"struct SuperBridgeL2.Transfer"}},"visibility":"internal"}],"id":8073,"initialValue":{"baseExpression":{"id":8070,"name":"transfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"10843:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Transfer_$7203_storage_$","typeString":"mapping(bytes32 => struct SuperBridgeL2.Transfer storage ref)"}},"id":8072,"indexExpression":{"id":8071,"name":"transferId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"10853:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10843:21:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_storage","typeString":"struct SuperBridgeL2.Transfer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10823:41:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8074,"name":"t","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8069,"src":"10882:1:20","typeDescriptions":{"typeIdentifier":"t_struct$_Transfer_$7203_memory_ptr","typeString":"struct SuperBridgeL2.Transfer memory"}},"id":8075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10884:9:20","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":7199,"src":"10882:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8076,"name":"REFUND_TIMEOUT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"10896:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10882:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8066,"id":8078,"nodeType":"Return","src":"10875:35:20"}]},"functionSelector":"838fb7f1","id":8080,"implemented":true,"kind":"function","modifiers":[],"name":"getRefundTime","nameLocation":"10746:13:20","nodeType":"FunctionDefinition","parameters":{"id":8063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8062,"mutability":"mutable","name":"transferId","nameLocation":"10768:10:20","nodeType":"VariableDeclaration","scope":8080,"src":"10760:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10760:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10759:20:20"},"returnParameters":{"id":8066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8080,"src":"10803:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8064,"name":"uint256","nodeType":"ElementaryTypeName","src":"10803:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10802:9:20"},"scope":8169,"src":"10737:181:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8115,"nodeType":"Block","src":"11031:172:20","statements":[{"condition":{"baseExpression":{"id":8091,"name":"isFeeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"11046:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8093,"indexExpression":{"id":8092,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8084,"src":"11058:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11046:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8099,"nodeType":"IfStatement","src":"11042:68:20","trueBody":{"id":8098,"nodeType":"Block","src":"11065:45:20","statements":[{"expression":{"components":[{"hexValue":"30","id":8094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11088:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8095,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"11091:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11087:11:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint256_$","typeString":"tuple(int_const 0,uint256)"}},"functionReturnParameters":8090,"id":8097,"nodeType":"Return","src":"11080:18:20"}]}},{"expression":{"id":8107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8100,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"11120:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8101,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"11127:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8102,"name":"FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"11136:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11127:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11126:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8105,"name":"BPS_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"11147:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11126:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11120:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8108,"nodeType":"ExpressionStatement","src":"11120:42:20"},{"expression":{"id":8113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8109,"name":"bridged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"11173:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8110,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8082,"src":"11183:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8111,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"11192:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11183:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11173:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8114,"nodeType":"ExpressionStatement","src":"11173:22:20"}]},"functionSelector":"400ba069","id":8116,"implemented":true,"kind":"function","modifiers":[],"name":"calculateFee","nameLocation":"10935:12:20","nodeType":"FunctionDefinition","parameters":{"id":8085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8082,"mutability":"mutable","name":"amount","nameLocation":"10956:6:20","nodeType":"VariableDeclaration","scope":8116,"src":"10948:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8081,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8084,"mutability":"mutable","name":"user","nameLocation":"10972:4:20","nodeType":"VariableDeclaration","scope":8116,"src":"10964:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8083,"name":"address","nodeType":"ElementaryTypeName","src":"10964:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10947:30:20"},"returnParameters":{"id":8090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8087,"mutability":"mutable","name":"fee","nameLocation":"11009:3:20","nodeType":"VariableDeclaration","scope":8116,"src":"11001:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8086,"name":"uint256","nodeType":"ElementaryTypeName","src":"11001:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8089,"mutability":"mutable","name":"bridged","nameLocation":"11022:7:20","nodeType":"VariableDeclaration","scope":8116,"src":"11014:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8088,"name":"uint256","nodeType":"ElementaryTypeName","src":"11014:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11000:30:20"},"scope":8169,"src":"10926:277:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8150,"nodeType":"Block","src":"11310:227:20","statements":[{"assignments":[8126],"declarations":[{"constant":false,"id":8126,"mutability":"mutable","name":"upgradeHash","nameLocation":"11329:11:20","nodeType":"VariableDeclaration","scope":8150,"src":"11321:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11321:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8134,"initialValue":{"arguments":[{"arguments":[{"id":8130,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8118,"src":"11370:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8131,"name":"scheduleTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8120,"src":"11386:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8128,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11353:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11357:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"11353:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11353:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8127,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11343:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11343:57:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11321:79:20"},{"assignments":[8136],"declarations":[{"constant":false,"id":8136,"mutability":"mutable","name":"executeTime","nameLocation":"11419:11:20","nodeType":"VariableDeclaration","scope":8150,"src":"11411:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8135,"name":"uint256","nodeType":"ElementaryTypeName","src":"11411:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8140,"initialValue":{"baseExpression":{"id":8137,"name":"pendingUpgrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"11433:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8139,"indexExpression":{"id":8138,"name":"upgradeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"11449:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11433:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11411:50:20"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8141,"name":"executeTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8136,"src":"11479:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11494:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11479:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8144,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11499:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11505:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"11499:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8146,"name":"executeTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8136,"src":"11518:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11499:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11479:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8124,"id":8149,"nodeType":"Return","src":"11472:57:20"}]},"functionSelector":"05acedf5","id":8151,"implemented":true,"kind":"function","modifiers":[],"name":"isUpgradeReady","nameLocation":"11220:14:20","nodeType":"FunctionDefinition","parameters":{"id":8121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8118,"mutability":"mutable","name":"implementation","nameLocation":"11243:14:20","nodeType":"VariableDeclaration","scope":8151,"src":"11235:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8117,"name":"address","nodeType":"ElementaryTypeName","src":"11235:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8120,"mutability":"mutable","name":"scheduleTime","nameLocation":"11267:12:20","nodeType":"VariableDeclaration","scope":8151,"src":"11259:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8119,"name":"uint256","nodeType":"ElementaryTypeName","src":"11259:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11234:46:20"},"returnParameters":{"id":8124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8151,"src":"11304:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8122,"name":"bool","nodeType":"ElementaryTypeName","src":"11304:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11303:6:20"},"scope":8169,"src":"11211:326:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8158,"nodeType":"Block","src":"11605:33:20","statements":[{"expression":{"id":8156,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"11623:7:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":8155,"id":8157,"nodeType":"Return","src":"11616:14:20"}]},"functionSelector":"0d8e6e2c","id":8159,"implemented":true,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"11554:10:20","nodeType":"FunctionDefinition","parameters":{"id":8152,"nodeType":"ParameterList","parameters":[],"src":"11564:2:20"},"returnParameters":{"id":8155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8159,"src":"11590:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8153,"name":"string","nodeType":"ElementaryTypeName","src":"11590:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11589:15:20"},"scope":8169,"src":"11545:93:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[598],"body":{"id":8167,"nodeType":"Block","src":"11728:2:20","statements":[]},"id":8168,"implemented":true,"kind":"function","modifiers":[{"id":8165,"kind":"modifierInvocation","modifierName":{"id":8164,"name":"onlyOwner","nameLocations":["11718:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"11718:9:20"},"nodeType":"ModifierInvocation","src":"11718:9:20"}],"name":"_authorizeUpgrade","nameLocation":"11655:17:20","nodeType":"FunctionDefinition","overrides":{"id":8163,"nodeType":"OverrideSpecifier","overrides":[],"src":"11709:8:20"},"parameters":{"id":8162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8161,"mutability":"mutable","name":"newImplementation","nameLocation":"11681:17:20","nodeType":"VariableDeclaration","scope":8168,"src":"11673:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8160,"name":"address","nodeType":"ElementaryTypeName","src":"11673:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11672:27:20"},"returnParameters":{"id":8166,"nodeType":"ParameterList","parameters":[],"src":"11728:0:20"},"scope":8169,"src":"11646:84:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8170,"src":"927:10806:20","usedErrors":[30,35,211,214,489,494,729,732,881,1030,1043,1324,1587,3185,3190,3195,7298,7300,7302,7304,7306,7308,7310,7312,7314,7316,7318,7320,7322,7324,7326,7328],"usedEvents":[41,219,721,726,987,7242,7250,7258,7264,7270,7276,7284,7290,7296]}],"src":"33:11700:20"},"id":20}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041e46fd8682c00ca6169620b848f2f48e2aecbcbbddad2c8a122a08a6bd8dc3964736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xE4 PUSH16 0xD8682C00CA6169620B848F2F48E2AECB 0xCB 0xBD 0xDA 0xD2 0xC8 LOG1 0x22 LOG0 DUP11 PUSH12 0xD8DC3964736F6C6343000816 STOP CALLER ","sourceMap":"496:5741:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041e46fd8682c00ca6169620b848f2f48e2aecbcbbddad2c8a122a08a6bd8dc3964736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xE4 PUSH16 0xD8682C00CA6169620B848F2F48E2AECB 0xCB 0xBD 0xDA 0xD2 0xC8 LOG1 0x22 LOG0 DUP11 PUSH12 0xD8DC3964736F6C6343000816 STOP CALLER ","sourceMap":"496:5741:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e3f0dc532bc9333d0f856beacd3638fd4ba78a0cd72ee492a3516fde0b34f8a64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E EXTCODEHASH 0xD 0xC5 ORIGIN 0xBC SWAP4 CALLER 0xD0 0xF8 JUMP 0xBE 0xAC 0xD3 PUSH4 0x8FD4BA78 LOG0 0xCD PUSH19 0xEE492A3516FDE0B34F8A64736F6C6343000816 STOP CALLER ","sourceMap":"233:5762:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e3f0dc532bc9333d0f856beacd3638fd4ba78a0cd72ee492a3516fde0b34f8a64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E EXTCODEHASH 0xD 0xC5 ORIGIN 0xBC SWAP4 CALLER 0xD0 0xF8 JUMP 0xBE 0xAC 0xD3 PUSH4 0x8FD4BA78 LOG0 0xCD PUSH19 0xEE492A3516FDE0B34F8A64736F6C6343000816 STOP CALLER ","sourceMap":"233:5762:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1d5f0a717f2f9fe98accbadf60b23ad82dc9245d9081568d48868abde92cd1564736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xD5 CREATE 0xA7 OR CALLCODE 0xF9 INVALID SWAP9 0xAC 0xCB 0xAD 0xF6 SIGNEXTEND 0x23 0xAD DUP3 0xDC SWAP3 GASLIMIT 0xD9 ADDMOD ISZERO PUSH9 0xD48868ABDE92CD1564 PUSH20 0x6F6C634300081600330000000000000000000000 ","sourceMap":"411:484:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1d5f0a717f2f9fe98accbadf60b23ad82dc9245d9081568d48868abde92cd1564736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0xD5 CREATE 0xA7 OR CALLCODE 0xF9 INVALID SWAP9 0xAC 0xCB 0xAD 0xF6 SIGNEXTEND 0x23 0xAD DUP3 0xDC SWAP3 GASLIMIT 0xD9 ADDMOD ISZERO PUSH9 0xD48868ABDE92CD1564 PUSH20 0x6F6C634300081600330000000000000000000000 ","sourceMap":"411:484:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c231f38a1b5f90f352193aaf26fe0343fe0d2a2b56099f40c395b497e730012a64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 BALANCE RETURN DUP11 SHL PUSH0 SWAP1 RETURN MSTORE NOT GASPRICE 0xAF 0x26 INVALID SUB NUMBER INVALID 0xD 0x2A 0x2B JUMP MULMOD SWAP16 BLOCKHASH 0xC3 SWAP6 0xB4 SWAP8 0xE7 ADDRESS ADD 0x2A PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"657:1315:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c231f38a1b5f90f352193aaf26fe0343fe0d2a2b56099f40c395b497e730012a64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 BALANCE RETURN DUP11 SHL PUSH0 SWAP1 RETURN MSTORE NOT GASPRICE 0xAF 0x26 INVALID SUB NUMBER INVALID 0xD 0x2A 0x2B JUMP MULMOD SWAP16 BLOCKHASH 0xC3 SWAP6 0xB4 SWAP8 0xE7 ADDRESS ADD 0x2A PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"657:1315:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001ea086b62a2e66873556e6b02ef4fdea21e0c6ad7c7e758101c110602189df864736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xEA ADDMOD PUSH12 0x62A2E66873556E6B02EF4FDE LOG2 0x1E 0xC PUSH11 0xD7C7E758101C110602189D 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"1407:2774:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001ea086b62a2e66873556e6b02ef4fdea21e0c6ad7c7e758101c110602189df864736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xEA ADDMOD PUSH12 0x62A2E66873556E6B02EF4FDE LOG2 0x1E 0xC PUSH11 0xD7C7E758101C110602189D 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"1407:2774:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e87df2d7496bbba5b7af78985c3b536209747683312db48e957a174e74b0d6d864736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 PUSH30 0xF2D7496BBBA5B7AF78985C3B536209747683312DB48E957A174E74B0D6D8 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"297:18982:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e87df2d7496bbba5b7af78985c3b536209747683312db48e957a174e74b0d6d864736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 PUSH30 0xF2D7496BBBA5B7AF78985C3B536209747683312DB48E957A174E74B0D6D8 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"297:18982:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0dc06b958b36f772fe3dffa53ba669706c823891cc39229f251508890ac2d3264736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xDC MOD 0xB9 PC 0xB3 PUSH16 0x772FE3DFFA53BA669706C823891CC392 0x29 CALLCODE MLOAD POP DUP9 SWAP1 0xAC 0x2D ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"344:7470:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0dc06b958b36f772fe3dffa53ba669706c823891cc39229f251508890ac2d3264736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0xDC MOD 0xB9 PC 0xB3 PUSH16 0x772FE3DFFA53BA669706C823891CC392 0x29 CALLCODE MLOAD POP DUP9 SWAP1 0xAC 0x2D ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"344:7470:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209aac4e253b7ad073261c78e67e15806b8416276096823a247421afc9abc4646564736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xAC 0x4E 0x25 EXTCODESIZE PUSH27 0xD073261C78E67E15806B8416276096823A247421AFC9ABC4646564 PUSH20 0x6F6C634300081600330000000000000000000000 ","sourceMap":"521:3729:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209aac4e253b7ad073261c78e67e15806b8416276096823a247421afc9abc4646564736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xAC 0x4E 0x25 EXTCODESIZE PUSH27 0xD073261C78E67E15806B8416276096823A247421AFC9ABC4646564 PUSH20 0x6F6C634300081600330000000000000000000000 ","sourceMap":"521:3729:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068046c031809f78faa730d3a81099c8c29acf90423ad3e30a4c21908ccc6459964736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x46C031809F78FAA73 0xD GASPRICE DUP2 MULMOD SWAP13 DUP13 0x29 0xAC 0xF9 DIV 0x23 0xAD RETURNDATACOPY ADDRESS LOG4 0xC2 NOT ADDMOD 0xCC 0xC6 GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"281:31863:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068046c031809f78faa730d3a81099c8c29acf90423ad3e30a4c21908ccc6459964736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x46C031809F78FAA73 0xD GASPRICE DUP2 MULMOD SWAP13 DUP13 0x29 0xAC 0xF9 DIV 0x23 0xAD RETURNDATACOPY ADDRESS LOG4 0xC2 NOT ADDMOD 0xCC 0xC6 GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"281:31863:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220766ba30f63d8006c724a4c3d3663c3583e9781fe2b0febfa17c7932f5b6cace464736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x6BA30F63D8006C724A4C3D3663C3583E9781FE2B0FEBFA OR 0xC7 SWAP4 0x2F JUMPDEST PUSH13 0xACE464736F6C63430008160033 ","sourceMap":"769:34173:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220766ba30f63d8006c724a4c3d3663c3583e9781fe2b0febfa17c7932f5b6cace464736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x6BA30F63D8006C724A4C3D3663C3583E9781FE2B0FEBFA OR 0xC7 SWAP4 0x2F JUMPDEST PUSH13 0xACE464736F6C63430008160033 ","sourceMap":"769:34173:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d105761232beec566d198443ab93850938f20a72c53252f993cc16d496839fd464736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 SDIV PUSH23 0x1232BEEC566D198443AB93850938F20A72C53252F993CC AND 0xD4 SWAP7 DUP4 SWAP16 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"258:2354:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d105761232beec566d198443ab93850938f20a72c53252f993cc16d496839fd464736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 SDIV PUSH23 0x1232BEEC566D198443AB93850938F20A72C53252F993CC AND 0xD4 SWAP7 DUP4 SWAP16 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"258:2354:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/SuperBridgeL2.sol":{"SuperBridgeL2":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"AlreadyFinalized","type":"error"},{"inputs":[],"name":"DuplicateSigner","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"ForwardFailed","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"InvalidSigner","type":"error"},{"inputs":[],"name":"InvalidTimelock","type":"error"},{"inputs":[],"name":"InvalidTransferId","type":"error"},{"inputs":[],"name":"NotAuthorized","type":"error"},{"inputs":[],"name":"NotAuthorizedSigner","type":"error"},{"inputs":[],"name":"NotEnoughSignatures","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"NotRefundable","type":"error"},{"inputs":[],"name":"NotYourTransfer","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"RefundFailed","type":"error"},{"inputs":[],"name":"RefundNotAvailable","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"inputs":[],"name":"UpgradeNotReady","type":"error"},{"inputs":[],"name":"UpgradeNotScheduled","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"transferId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"bridgedAmount","type":"uint256"}],"name":"BridgeCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"originalAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"bridgedAmount","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"transferId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"BridgeInitiated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bool","name":"exempt","type":"bool"}],"name":"FeeExemptUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldRecipient","type":"address"},{"indexed":false,"internalType":"address","name":"newRecipient","type":"address"}],"name":"FeeRecipientUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"transferId","type":"bytes32"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Refunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldTimelock","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTimelock","type":"uint256"}],"name":"TimelockUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"upgradeHash","type":"bytes32"},{"indexed":false,"internalType":"address","name":"newImplementation","type":"address"}],"name":"UpgradeExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"upgradeHash","type":"bytes32"},{"indexed":false,"internalType":"address","name":"newImplementation","type":"address"},{"indexed":false,"internalType":"uint256","name":"executeTime","type":"uint256"}],"name":"UpgradeScheduled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"validator","type":"address"},{"indexed":false,"internalType":"bool","name":"isValid","type":"bool"}],"name":"ValidatorUpdated","type":"event"},{"inputs":[],"name":"BPS_DENOMINATOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_SIGNATURES","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REFUND_TIMEOUT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bridge","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"calculateFee","outputs":[{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"bridged","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"transferId","type":"bytes32"}],"name":"canRefund","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"transferId","type":"bytes32"},{"internalType":"bytes[]","name":"signatures","type":"bytes[]"},{"internalType":"address[]","name":"signers","type":"address[]"}],"name":"complete","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"emergencyOperators","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyWithdrawDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyWithdrawTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"uint256","name":"scheduleTime","type":"uint256"}],"name":"executeUpgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"transferId","type":"bytes32"}],"name":"getRefundTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"transferId","type":"bytes32"}],"name":"getTransfer","outputs":[{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"originalAmount","type":"uint256"},{"internalType":"uint256","name":"bridgedAmount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"enum SuperBridgeL2.Status","name":"status","type":"uint8"}],"internalType":"struct SuperBridgeL2.Transfer","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_feeRecipient","type":"address"},{"internalType":"uint256","name":"_upgradeTimelock","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isFeeExempt","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"scheduleTime","type":"uint256"}],"name":"isUpgradeReady","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isValidSigner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numSigners","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"pendingUpgrades","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"transferId","type":"bytes32"}],"name":"refund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"scheduleUpgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setEmergencyOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bool","name":"exempt","type":"bool"}],"name":"setFeeExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feeRecipient","type":"address"}],"name":"setFeeRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"},{"internalType":"bool","name":"isValid","type":"bool"}],"name":"setValidator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"transfers","outputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"originalAmount","type":"uint256"},{"internalType":"uint256","name":"bridgedAmount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"enum SuperBridgeL2.Status","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newTimelock","type":"uint256"}],"name":"updateTimelock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"upgradeTimelock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userNonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_7336":{"entryPoint":null,"id":7336,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_416":{"entryPoint":91,"id":416,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_461":{"entryPoint":357,"id":461,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_447":{"entryPoint":385,"id":447,"parameterSlots":0,"returnSlots":1},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":448,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":465,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":428,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:456:21","nodeType":"YulBlock","src":"0:456:21","statements":[{"body":{"nativeSrc":"51:57:21","nodeType":"YulBlock","src":"51:57:21","statements":[{"nativeSrc":"61:41:21","nodeType":"YulAssignment","src":"61:41:21","value":{"arguments":[{"name":"value","nativeSrc":"76:5:21","nodeType":"YulIdentifier","src":"76:5:21"},{"kind":"number","nativeSrc":"83:18:21","nodeType":"YulLiteral","src":"83:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"72:3:21","nodeType":"YulIdentifier","src":"72:3:21"},"nativeSrc":"72:30:21","nodeType":"YulFunctionCall","src":"72:30:21"},"variableNames":[{"name":"cleaned","nativeSrc":"61:7:21","nodeType":"YulIdentifier","src":"61:7:21"}]}]},"name":"cleanup_t_uint64","nativeSrc":"7:101:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33:5:21","nodeType":"YulTypedName","src":"33:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"43:7:21","nodeType":"YulTypedName","src":"43:7:21","type":""}],"src":"7:101:21"},{"body":{"nativeSrc":"177:52:21","nodeType":"YulBlock","src":"177:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"194:3:21","nodeType":"YulIdentifier","src":"194:3:21"},{"arguments":[{"name":"value","nativeSrc":"216:5:21","nodeType":"YulIdentifier","src":"216:5:21"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"199:16:21","nodeType":"YulIdentifier","src":"199:16:21"},"nativeSrc":"199:23:21","nodeType":"YulFunctionCall","src":"199:23:21"}],"functionName":{"name":"mstore","nativeSrc":"187:6:21","nodeType":"YulIdentifier","src":"187:6:21"},"nativeSrc":"187:36:21","nodeType":"YulFunctionCall","src":"187:36:21"},"nativeSrc":"187:36:21","nodeType":"YulExpressionStatement","src":"187:36:21"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"114:115:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"165:5:21","nodeType":"YulTypedName","src":"165:5:21","type":""},{"name":"pos","nativeSrc":"172:3:21","nodeType":"YulTypedName","src":"172:3:21","type":""}],"src":"114:115:21"},{"body":{"nativeSrc":"331:122:21","nodeType":"YulBlock","src":"331:122:21","statements":[{"nativeSrc":"341:26:21","nodeType":"YulAssignment","src":"341:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"353:9:21","nodeType":"YulIdentifier","src":"353:9:21"},{"kind":"number","nativeSrc":"364:2:21","nodeType":"YulLiteral","src":"364:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"349:3:21","nodeType":"YulIdentifier","src":"349:3:21"},"nativeSrc":"349:18:21","nodeType":"YulFunctionCall","src":"349:18:21"},"variableNames":[{"name":"tail","nativeSrc":"341:4:21","nodeType":"YulIdentifier","src":"341:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"419:6:21","nodeType":"YulIdentifier","src":"419:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"432:9:21","nodeType":"YulIdentifier","src":"432:9:21"},{"kind":"number","nativeSrc":"443:1:21","nodeType":"YulLiteral","src":"443:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"428:3:21","nodeType":"YulIdentifier","src":"428:3:21"},"nativeSrc":"428:17:21","nodeType":"YulFunctionCall","src":"428:17:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"377:41:21","nodeType":"YulIdentifier","src":"377:41:21"},"nativeSrc":"377:69:21","nodeType":"YulFunctionCall","src":"377:69:21"},"nativeSrc":"377:69:21","nodeType":"YulExpressionStatement","src":"377:69:21"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"235:218:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"303:9:21","nodeType":"YulTypedName","src":"303:9:21","type":""},{"name":"value0","nativeSrc":"315:6:21","nodeType":"YulTypedName","src":"315:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"326:4:21","nodeType":"YulTypedName","src":"326:4:21","type":""}],"src":"235:218:21"}]},"contents":"{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50620000556200005b60201b60201c565b620001ee565b60006200006d6200016560201b60201c565b90508060000160089054906101000a900460ff1615620000b9576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614620001625767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051620001599190620001d1565b60405180910390a15b50565b600080620001786200018160201b60201c565b90508091505090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b600067ffffffffffffffff82169050919050565b620001cb81620001ac565b82525050565b6000602082019050620001e86000830184620001c0565b92915050565b60805161464762000218600039600081816127a1015281816127f60152612a2301526146476000f3fe6080604052600436106102515760003560e01c8063715018a611610139578063bf333f2c116100b6578063de9b94881161007a578063de9b9488146108d2578063e1a45218146108fd578063e74b981b14610928578063e78cea9214610951578063f2fde38b1461095b578063fa1ccffd1461098457610251565b8063bf333f2c146107db578063ca9e445314610806578063cd6dc6871461082f578063d5f5058214610858578063d8c171141461089557610251565b80638c879fb9116100fd5780638c879fb9146106f45780638c8c20031461071f5780638da5cb5b1461075c5780638ebfc79614610787578063ad3cb1cc146107b057610251565b8063715018a61461062157806372070b81146106385780637249fbb6146106635780637d57900a1461068c578063838fb7f1146106b757610251565b80633e718e83116101d2578063469048401161019657806346904840146105425780634f1ef2861461056d57806351858e271461058957806352d1902d146105a057806354fd4d50146105cb5780635c975abb146105f657610251565b80633e718e831461045e5780633f4218e0146104875780633f4ba83a146104c4578063400ba069146104db5780634623c91d1461051957610251565b806312679fed1161021957806312679fed1461034d5780631a17969214610378578063260958a5146103a35780632f7801f4146103e05780633c64f04b1461041d57610251565b806302e888991461025657806305acedf51461027f57806309705de8146102bc5780630c80447a146102f95780630d8e6e2c14610322575b600080fd5b34801561026257600080fd5b5061027d600480360381019061027891906135bc565b6109ad565b005b34801561028b57600080fd5b506102a660048036038101906102a19190613632565b610a10565b6040516102b39190613681565b60405180910390f35b3480156102c857600080fd5b506102e360048036038101906102de919061369c565b610a71565b6040516102f09190613681565b60405180910390f35b34801561030557600080fd5b50610320600480360381019061031b919061369c565b610a91565b005b34801561032e57600080fd5b50610337610b2f565b6040516103449190613759565b60405180910390f35b34801561035957600080fd5b50610362610bc1565b60405161036f919061378a565b60405180910390f35b34801561038457600080fd5b5061038d610bc7565b60405161039a919061378a565b60405180910390f35b3480156103af57600080fd5b506103ca60048036038101906103c591906137db565b610bcc565b6040516103d79190613905565b60405180910390f35b3480156103ec57600080fd5b506104076004803603810190610402919061369c565b610ca8565b604051610414919061378a565b60405180910390f35b34801561042957600080fd5b50610444600480360381019061043f91906137db565b610cc0565b60405161045595949392919061393e565b60405180910390f35b34801561046a57600080fd5b5061048560048036038101906104809190613632565b610d23565b005b34801561049357600080fd5b506104ae60048036038101906104a9919061369c565b610e39565b6040516104bb9190613681565b60405180910390f35b3480156104d057600080fd5b506104d9610e59565b005b3480156104e757600080fd5b5061050260048036038101906104fd9190613991565b610e6b565b6040516105109291906139d1565b60405180910390f35b34801561052557600080fd5b50610540600480360381019061053b91906135bc565b610eff565b005b34801561054e57600080fd5b5061055761109f565b60405161056491906139fa565b60405180910390f35b61058760048036038101906105829190613b4a565b6110c3565b005b34801561059557600080fd5b5061059e6110e2565b005b3480156105ac57600080fd5b506105b561116f565b6040516105c29190613bb5565b60405180910390f35b3480156105d757600080fd5b506105e06111a2565b6040516105ed9190613759565b60405180910390f35b34801561060257600080fd5b5061060b611230565b6040516106189190613681565b60405180910390f35b34801561062d57600080fd5b50610636611255565b005b34801561064457600080fd5b5061064d611269565b60405161065a919061378a565b60405180910390f35b34801561066f57600080fd5b5061068a600480360381019061068591906137db565b61126f565b005b34801561069857600080fd5b506106a16114f1565b6040516106ae919061378a565b60405180910390f35b3480156106c357600080fd5b506106de60048036038101906106d991906137db565b6114f7565b6040516106eb919061378a565b60405180910390f35b34801561070057600080fd5b506107096115e3565b604051610716919061378a565b60405180910390f35b34801561072b57600080fd5b50610746600480360381019061074191906137db565b6115e9565b6040516107539190613681565b60405180910390f35b34801561076857600080fd5b5061077161170b565b60405161077e91906139fa565b60405180910390f35b34801561079357600080fd5b506107ae60048036038101906107a991906135bc565b611743565b005b3480156107bc57600080fd5b506107c56117f4565b6040516107d29190613759565b60405180910390f35b3480156107e757600080fd5b506107f061182d565b6040516107fd919061378a565b60405180910390f35b34801561081257600080fd5b5061082d60048036038101906108289190613c86565b611833565b005b34801561083b57600080fd5b5061085660048036038101906108519190613632565b611e78565b005b34801561086457600080fd5b5061087f600480360381019061087a919061369c565b6121ed565b60405161088c9190613681565b60405180910390f35b3480156108a157600080fd5b506108bc60048036038101906108b791906137db565b61220d565b6040516108c9919061378a565b60405180910390f35b3480156108de57600080fd5b506108e7612225565b6040516108f4919061378a565b60405180910390f35b34801561090957600080fd5b5061091261222b565b60405161091f919061378a565b60405180910390f35b34801561093457600080fd5b5061094f600480360381019061094a919061369c565b612231565b005b6109596122dc565b005b34801561096757600080fd5b50610982600480360381019061097d919061369c565b612591565b005b34801561099057600080fd5b506109ab60048036038101906109a69190613d1b565b612617565b005b6109b56126a6565b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000808383604051602001610a26929190613db1565b60405160208183030381529060405280519060200120905060006007600083815260200190815260200160002054905060008114158015610a675750804210155b9250505092915050565b60086020528060005260406000206000915054906101000a900460ff1681565b610a996126a6565b60008142604051602001610aae929190613db1565b604051602081830303815290604052805190602001209050600060065442610ad69190613e0c565b9050806007600084815260200190815260200160002081905550817f79e2dca331f93c0d9119556c8a471734e6bc8470283391068f156e9a6d3cd3e68483604051610b22929190613e40565b60405180910390a2505050565b6060600b8054610b3e90613e98565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6a90613e98565b8015610bb75780601f10610b8c57610100808354040283529160200191610bb7565b820191906000526020600020905b815481529060010190602001808311610b9a57829003601f168201915b5050505050905090565b60055481565b600181565b610bd46134bb565b600360008381526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff166002811115610c8b57610c8a613826565b5b6002811115610c9d57610c9c613826565b5b815250509050919050565b60026020528060005260406000206000915090505481565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b610d2b6126a6565b60008282604051602001610d40929190613db1565b60405160208183030381529060405280519060200120905060006007600083815260200190815260200160002054905060008103610daa576040517fe1af1e2e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80421015610de4576040517f1bada80200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007600083815260200190815260200160002060009055817f1b011fae1a8fa8755c05a1200229cf94f1218002d660dae8eca1e796db11e21285604051610e2b91906139fa565b60405180910390a250505050565b60016020528060005260406000206000915054906101000a900460ff1681565b610e616126a6565b610e6961272d565b565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610ecc5760008491509150610ef8565b6127106101f485610edd9190613ec9565b610ee79190613f3a565b91508184610ef59190613f6b565b90505b9250929050565b610f076126a6565b808015610f5e5750600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b15610f805760056000815480929190610f7690613f9f565b9190505550610ff6565b80158015610fd75750600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b15610ff55760056000815480929190610fef90613fe7565b91905055505b5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f763b63b30e91c843bb39e4379603697003d3b7c1f192619cd782fa33bdc44396826040516110939190613681565b60405180910390a25050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6110cb61279f565b6110d482612885565b6110de8282612890565b5050565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611165576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61116d6129af565b565b6000611179612a21565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600b80546111af90613e98565b80601f01602080910402602001604051908101604052809291908181526020018280546111db90613e98565b80156112285780601f106111fd57610100808354040283529160200191611228565b820191906000526020600020905b81548152906001019060200180831161120b57829003601f168201915b505050505081565b60008061123b612aa8565b90508060000160009054906101000a900460ff1691505090565b61125d6126a6565b6112676000612ad0565b565b60095481565b611277612ba7565b6000600360008381526020019081526020016000209050600060028111156112a2576112a1613826565b5b8160040160009054906101000a900460ff1660028111156112c6576112c5613826565b5b146112fd576040517f3742d1f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611386576040517f3e87cffd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61070881600301546113989190613e0c565b42116113d0576040517f0b4d698100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028160040160006101000a81548160ff021916908360028111156113f8576113f7613826565b5b021790555060008160010154905060003373ffffffffffffffffffffffffffffffffffffffff168260405161142c90614041565b60006040518083038185875af1925050503d8060008114611469576040519150601f19603f3d011682016040523d82523d6000602084013e61146e565b606091505b50509050806114a9576040517ff0c49d4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b837ff552ca82e113ac3c539c3d617f29fcd19c172a0c75dad017555c9e109f7fe18333846040516114db929190613e40565b60405180910390a25050506114ee612bfe565b50565b61070881565b600080600360008481526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1660028111156115b1576115b0613826565b5b60028111156115c3576115c2613826565b5b81525050905061070881606001516115db9190613e0c565b915050919050565b60065481565b600080600360008481526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1660028111156116a3576116a2613826565b5b60028111156116b5576116b4613826565b5b815250509050600060028111156116cf576116ce613826565b5b816080015160028111156116e6576116e5613826565b5b148015611703575061070881606001516117009190613e0c565b42115b915050919050565b600080611716612c17565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b61174b6126a6565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f4d5771454588f51370a8a2e7e151354b6de0dc3159b14821b4ad76bc04c28bc7826040516117e89190613681565b60405180910390a25050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6101f481565b61183b612ba7565b611843612c3f565b60006003600087815260200190815260200160002090506000600281111561186e5761186d613826565b5b8160040160009054906101000a900460ff16600281111561189257611891613826565b5b146118c9576040517f475a253500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611953576040517f3b2a862c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828290508585905014611992576040517f815e1d6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018585905010156119d0576040517fe246dc6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000868260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836002015430604051602001611a119493929190614077565b6040516020818303038152906040528051906020012090506000611a3482612c80565b905060008585905067ffffffffffffffff811115611a5557611a54613a1f565b5b604051908082528060200260200182016040528015611a835781602001602082028036833780820191505090505b50905060005b88889050811015611d0c576000611b07848b8b85818110611aad57611aac6140c5565b5b9050602002810190611abf9190614103565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050612cb6565b9050878783818110611b1c57611b1b6140c5565b5b9050602002016020810190611b31919061369c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b95576040517f815e1d6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611c18576040517f54ac7bfc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82811015611caf578173ffffffffffffffffffffffffffffffffffffffff16848281518110611c4d57611c4c6140c5565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603611ca2576040517f8044bb3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080600101915050611c1b565b5080838381518110611cc457611cc36140c5565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050508080600101915050611a89565b5060018460040160006101000a81548160ff02191690836002811115611d3557611d34613826565b5b021790555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168560010154604051611d8590614041565b60006040518083038185875af1925050503d8060008114611dc2576040519150601f19603f3d011682016040523d82523d6000602084013e611dc7565b606091505b5050905080611e02576040517f096dc0e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b897f3a5e0271cd79026f0993aa13e6dd17d1f34284aa2340c1d2c33653b9a4433ee98660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168760020154604051611e5c929190613e40565b60405180910390a25050505050611e71612bfe565b5050505050565b6000611e82612ce2565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015611ed05750825b9050600060018367ffffffffffffffff16148015611f05575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611f13575080155b15611f4a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315611f9a5760018560000160086101000a81548160ff0219169083151502179055505b611fa333612cf6565b611fab612d0a565b611fb3612d1c565b611fbb612d26565b866000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600681905550620151806009819055506040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250600b90816120509190614312565b5060018060007317cabc8001a30800835dd8206ceb0c4ba90b591373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600460007373af5be3db46ce3b7c50fd833b9c60180f33944973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016005819055506001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555083156121e45760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516121db9190614433565b60405180910390a15b50505050505050565b60046020528060005260406000206000915054906101000a900460ff1681565b60076020528060005260406000206000915090505481565b600a5481565b61271081565b6122396126a6565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507faaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d381836040516122d092919061444e565b60405180910390a15050565b6122e4612ba7565b6122ec612c3f565b60003403612326576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080349050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166123a9576127106101f43461238e9190613ec9565b6123989190613f3a565b915081346123a69190613f6b565b90505b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906123fb90613f9f565b9190505590506000333442843060405160200161241c959493929190614477565b6040516020818303038152906040528051906020012090506040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020013481526020018481526020014281526020016000600281111561248157612480613826565b5b8152506003600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083600281111561252757612526613826565b5b02179055509050503373ffffffffffffffffffffffffffffffffffffffff167f719ab00511e884d1ea4921ee843132435dc006b0bb7f8b67fb693b621e45bb533485844260405161257b94939291906144d6565b60405180910390a25050505061258f612bfe565b565b6125996126a6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361260b5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161260291906139fa565b60405180910390fd5b61261481612ad0565b50565b61261f6126a6565b61012c81101561265b576040517ff8d10e8200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006006549050816006819055507f3e9cac94b7c7db9b86df56321e6f7e3e88a6c87fc15fd825df1492cf69e33551818360405161269a9291906139d1565b60405180910390a15050565b6126ae612d30565b73ffffffffffffffffffffffffffffffffffffffff166126cc61170b565b73ffffffffffffffffffffffffffffffffffffffff161461272b576126ef612d30565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161272291906139fa565b60405180910390fd5b565b612735612d38565b600061273f612aa8565b905060008160000160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa612787612d30565b60405161279491906139fa565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061284c57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16612833612d78565b73ffffffffffffffffffffffffffffffffffffffff1614155b15612883576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61288d6126a6565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156128f857506040513d601f19601f820116820180604052508101906128f59190614530565b60015b61293957816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161293091906139fa565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146129a057806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016129979190613bb5565b60405180910390fd5b6129aa8383612dcf565b505050565b6129b7612c3f565b60006129c1612aa8565b905060018160000160006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612a09612d30565b604051612a1691906139fa565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614612aa6576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b6000612ada612c17565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6000612bb1612e42565b90506002816000015403612bf1576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002816000018190555050565b6000612c08612e42565b90506001816000018190555050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b612c47611230565b15612c7e576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080612cc68686612e6a565b925092509250612cd68282612ec6565b82935050505092915050565b600080612ced61302a565b90508091505090565b612cfe613055565b612d0781613095565b50565b612d12613055565b612d1a61311b565b565b612d24613055565b565b612d2e613055565b565b600033905090565b612d40611230565b612d76576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000612da67f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61313c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612dd882613146565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115612e3557612e2f8282613213565b50612e3e565b612e3d613297565b5b5050565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b60008060006041845103612eaf5760008060006020870151925060408701519150606087015160001a9050612ea1888285856132d4565b955095509550505050612ebf565b60006002855160001b9250925092505b9250925092565b60006003811115612eda57612ed9613826565b5b826003811115612eed57612eec613826565b5b03156130265760016003811115612f0757612f06613826565b5b826003811115612f1a57612f19613826565b5b03612f51576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115612f6557612f64613826565b5b826003811115612f7857612f77613826565b5b03612fbd578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401612fb4919061378a565b60405180910390fd5b600380811115612fd057612fcf613826565b5b826003811115612fe357612fe2613826565b5b0361302557806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161301c9190613bb5565b60405180910390fd5b5b5050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b61305d6133c8565b613093576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61309d613055565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361310f5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161310691906139fa565b60405180910390fd5b61311881612ad0565b50565b613123613055565b600061312d612e42565b90506001816000018190555050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b036131a257806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161319991906139fa565b60405180910390fd5b806131cf7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61313c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161323d9190614599565b600060405180830381855af49150503d8060008114613278576040519150601f19603f3d011682016040523d82523d6000602084013e61327d565b606091505b509150915061328d8583836133e8565b9250505092915050565b60003411156132d2576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156133145760006003859250925092506133be565b60006001888888886040516000815260200160405260405161333994939291906145cc565b6020604051602081039080840390855afa15801561335b573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036133af57600060016000801b935093509350506133be565b8060008060001b935093509350505b9450945094915050565b60006133d2612ce2565b60000160089054906101000a900460ff16905090565b6060826133fd576133f882613477565b61346f565b60008251148015613425575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561346757836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161345e91906139fa565b60405180910390fd5b819050613470565b5b9392505050565b60008151111561348957805160208201fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000600281111561350c5761350b613826565b5b81525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061355182613526565b9050919050565b61356181613546565b811461356c57600080fd5b50565b60008135905061357e81613558565b92915050565b60008115159050919050565b61359981613584565b81146135a457600080fd5b50565b6000813590506135b681613590565b92915050565b600080604083850312156135d3576135d261351c565b5b60006135e18582860161356f565b92505060206135f2858286016135a7565b9150509250929050565b6000819050919050565b61360f816135fc565b811461361a57600080fd5b50565b60008135905061362c81613606565b92915050565b600080604083850312156136495761364861351c565b5b60006136578582860161356f565b92505060206136688582860161361d565b9150509250929050565b61367b81613584565b82525050565b60006020820190506136966000830184613672565b92915050565b6000602082840312156136b2576136b161351c565b5b60006136c08482850161356f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156137035780820151818401526020810190506136e8565b60008484015250505050565b6000601f19601f8301169050919050565b600061372b826136c9565b61373581856136d4565b93506137458185602086016136e5565b61374e8161370f565b840191505092915050565b600060208201905081810360008301526137738184613720565b905092915050565b613784816135fc565b82525050565b600060208201905061379f600083018461377b565b92915050565b6000819050919050565b6137b8816137a5565b81146137c357600080fd5b50565b6000813590506137d5816137af565b92915050565b6000602082840312156137f1576137f061351c565b5b60006137ff848285016137c6565b91505092915050565b61381181613546565b82525050565b613820816135fc565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061386657613865613826565b5b50565b600081905061387782613855565b919050565b600061388782613869565b9050919050565b6138978161387c565b82525050565b60a0820160008201516138b36000850182613808565b5060208201516138c66020850182613817565b5060408201516138d96040850182613817565b5060608201516138ec6060850182613817565b5060808201516138ff608085018261388e565b50505050565b600060a08201905061391a600083018461389d565b92915050565b61392981613546565b82525050565b6139388161387c565b82525050565b600060a0820190506139536000830188613920565b613960602083018761377b565b61396d604083018661377b565b61397a606083018561377b565b613987608083018461392f565b9695505050505050565b600080604083850312156139a8576139a761351c565b5b60006139b68582860161361d565b92505060206139c78582860161356f565b9150509250929050565b60006040820190506139e6600083018561377b565b6139f3602083018461377b565b9392505050565b6000602082019050613a0f6000830184613920565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613a578261370f565b810181811067ffffffffffffffff82111715613a7657613a75613a1f565b5b80604052505050565b6000613a89613512565b9050613a958282613a4e565b919050565b600067ffffffffffffffff821115613ab557613ab4613a1f565b5b613abe8261370f565b9050602081019050919050565b82818337600083830152505050565b6000613aed613ae884613a9a565b613a7f565b905082815260208101848484011115613b0957613b08613a1a565b5b613b14848285613acb565b509392505050565b600082601f830112613b3157613b30613a15565b5b8135613b41848260208601613ada565b91505092915050565b60008060408385031215613b6157613b6061351c565b5b6000613b6f8582860161356f565b925050602083013567ffffffffffffffff811115613b9057613b8f613521565b5b613b9c85828601613b1c565b9150509250929050565b613baf816137a5565b82525050565b6000602082019050613bca6000830184613ba6565b92915050565b600080fd5b600080fd5b60008083601f840112613bf057613bef613a15565b5b8235905067ffffffffffffffff811115613c0d57613c0c613bd0565b5b602083019150836020820283011115613c2957613c28613bd5565b5b9250929050565b60008083601f840112613c4657613c45613a15565b5b8235905067ffffffffffffffff811115613c6357613c62613bd0565b5b602083019150836020820283011115613c7f57613c7e613bd5565b5b9250929050565b600080600080600060608688031215613ca257613ca161351c565b5b6000613cb0888289016137c6565b955050602086013567ffffffffffffffff811115613cd157613cd0613521565b5b613cdd88828901613bda565b9450945050604086013567ffffffffffffffff811115613d0057613cff613521565b5b613d0c88828901613c30565b92509250509295509295909350565b600060208284031215613d3157613d3061351c565b5b6000613d3f8482850161361d565b91505092915050565b60008160601b9050919050565b6000613d6082613d48565b9050919050565b6000613d7282613d55565b9050919050565b613d8a613d8582613546565b613d67565b82525050565b6000819050919050565b613dab613da6826135fc565b613d90565b82525050565b6000613dbd8285613d79565b601482019150613dcd8284613d9a565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613e17826135fc565b9150613e22836135fc565b9250828201905080821115613e3a57613e39613ddd565b5b92915050565b6000604082019050613e556000830185613920565b613e62602083018461377b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613eb057607f821691505b602082108103613ec357613ec2613e69565b5b50919050565b6000613ed4826135fc565b9150613edf836135fc565b9250828202613eed816135fc565b91508282048414831517613f0457613f03613ddd565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613f45826135fc565b9150613f50836135fc565b925082613f6057613f5f613f0b565b5b828204905092915050565b6000613f76826135fc565b9150613f81836135fc565b9250828203905081811115613f9957613f98613ddd565b5b92915050565b6000613faa826135fc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613fdc57613fdb613ddd565b5b600182019050919050565b6000613ff2826135fc565b91506000820361400557614004613ddd565b5b600182039050919050565b600081905092915050565b50565b600061402b600083614010565b91506140368261401b565b600082019050919050565b600061404c8261401e565b9150819050919050565b6000819050919050565b61407161406c826137a5565b614056565b82525050565b60006140838287614060565b6020820191506140938286613d79565b6014820191506140a38285613d9a565b6020820191506140b38284613d79565b60148201915081905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126141205761411f6140f4565b5b80840192508235915067ffffffffffffffff821115614142576141416140f9565b5b60208301925060018202360383131561415e5761415d6140fe565b5b509250929050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026141c87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261418b565b6141d2868361418b565b95508019841693508086168417925050509392505050565b6000819050919050565b600061420f61420a614205846135fc565b6141ea565b6135fc565b9050919050565b6000819050919050565b614229836141f4565b61423d61423582614216565b848454614198565b825550505050565b600090565b614252614245565b61425d818484614220565b505050565b5b818110156142815761427660008261424a565b600181019050614263565b5050565b601f8211156142c65761429781614166565b6142a08461417b565b810160208510156142af578190505b6142c36142bb8561417b565b830182614262565b50505b505050565b600082821c905092915050565b60006142e9600019846008026142cb565b1980831691505092915050565b600061430283836142d8565b9150826002028217905092915050565b61431b826136c9565b67ffffffffffffffff81111561433457614333613a1f565b5b61433e8254613e98565b614349828285614285565b600060209050601f83116001811461437c576000841561436a578287015190505b61437485826142f6565b8655506143dc565b601f19841661438a86614166565b60005b828110156143b25784890151825560018201915060208501945060208101905061438d565b868310156143cf57848901516143cb601f8916826142d8565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061441d614418614413846143e4565b6141ea565b6143ee565b9050919050565b61442d81614402565b82525050565b60006020820190506144486000830184614424565b92915050565b60006040820190506144636000830185613920565b6144706020830184613920565b9392505050565b60006144838288613d79565b6014820191506144938287613d9a565b6020820191506144a38286613d9a565b6020820191506144b38285613d9a565b6020820191506144c38284613d79565b6014820191508190509695505050505050565b60006080820190506144eb600083018761377b565b6144f8602083018661377b565b6145056040830185613ba6565b614512606083018461377b565b95945050505050565b60008151905061452a816137af565b92915050565b6000602082840312156145465761454561351c565b5b60006145548482850161451b565b91505092915050565b600081519050919050565b60006145738261455d565b61457d8185614010565b935061458d8185602086016136e5565b80840191505092915050565b60006145a58284614568565b915081905092915050565b600060ff82169050919050565b6145c6816145b0565b82525050565b60006080820190506145e16000830187613ba6565b6145ee60208301866145bd565b6145fb6040830185613ba6565b6146086060830184613ba6565b9594505050505056fea2646970667358221220f0a044926fc53c167d6694d4db8d4118a05778de901dc68ceb428f2fc035c20064736f6c63430008160033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x55 PUSH3 0x5B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1EE JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6D PUSH3 0x165 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH3 0x162 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH3 0x159 SWAP2 SWAP1 PUSH3 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x178 PUSH3 0x181 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1CB DUP2 PUSH3 0x1AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x4647 PUSH3 0x218 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x27A1 ADD MSTORE DUP2 DUP2 PUSH2 0x27F6 ADD MSTORE PUSH2 0x2A23 ADD MSTORE PUSH2 0x4647 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x251 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xBF333F2C GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDE9B9488 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDE9B9488 EQ PUSH2 0x8D2 JUMPI DUP1 PUSH4 0xE1A45218 EQ PUSH2 0x8FD JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x928 JUMPI DUP1 PUSH4 0xE78CEA92 EQ PUSH2 0x951 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x95B JUMPI DUP1 PUSH4 0xFA1CCFFD EQ PUSH2 0x984 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0xBF333F2C EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xCA9E4453 EQ PUSH2 0x806 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x82F JUMPI DUP1 PUSH4 0xD5F50582 EQ PUSH2 0x858 JUMPI DUP1 PUSH4 0xD8C17114 EQ PUSH2 0x895 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x8C879FB9 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x8C879FB9 EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0x8C8C2003 EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0x8EBFC796 EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x7B0 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0x72070B81 EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0x7249FBB6 EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0x7D57900A EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0x838FB7F1 EQ PUSH2 0x6B7 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x3E718E83 GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x46904840 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0x51858E27 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x5F6 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x3E718E83 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x3F4218E0 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x400BA069 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x4623C91D EQ PUSH2 0x519 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x12679FED GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x12679FED EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x1A179692 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x260958A5 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x2F7801F4 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x3C64F04B EQ PUSH2 0x41D JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x2E88899 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x5ACEDF5 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x9705DE8 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xC80447A EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x322 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x35BC JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x3632 JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x3759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38D PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x3905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0xCA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x393E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x485 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x3632 JUMP JUMPDEST PUSH2 0xD23 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D9 PUSH2 0xE59 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x502 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x3991 JUMP JUMPDEST PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP3 SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x35BC JUMP JUMPDEST PUSH2 0xEFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x557 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x587 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x3B4A JUMP JUMPDEST PUSH2 0x10C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH2 0x10E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B5 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x3BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E0 PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x3759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60B PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x636 PUSH2 0x1255 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64D PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x685 SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x126F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x709 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x746 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x771 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A9 SWAP2 SWAP1 PUSH2 0x35BC JUMP JUMPDEST PUSH2 0x1743 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C5 PUSH2 0x17F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0x3759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F0 PUSH2 0x182D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7FD SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x3C86 JUMP JUMPDEST PUSH2 0x1833 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x856 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x3632 JUMP JUMPDEST PUSH2 0x1E78 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0x21ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B7 SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C9 SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E7 PUSH2 0x2225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x912 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91F SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x934 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x94F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94A SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0x2231 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x959 PUSH2 0x22DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x967 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x982 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0x2591 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x2617 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B5 PUSH2 0x26A6 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA26 SWAP3 SWAP2 SWAP1 PUSH2 0x3DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO DUP1 ISZERO PUSH2 0xA67 JUMPI POP DUP1 TIMESTAMP LT ISZERO JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xA99 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x0 DUP2 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAAE SWAP3 SWAP2 SWAP1 PUSH2 0x3DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xAD6 SWAP2 SWAP1 PUSH2 0x3E0C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x79E2DCA331F93C0D9119556C8A471734E6BC8470283391068F156E9A6D3CD3E6 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB22 SWAP3 SWAP2 SWAP1 PUSH2 0x3E40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0xB3E SWAP1 PUSH2 0x3E98 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB6A SWAP1 PUSH2 0x3E98 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0xBD4 PUSH2 0x34BB JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC8B JUMPI PUSH2 0xC8A PUSH2 0x3826 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC9D JUMPI PUSH2 0xC9C PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xD2B PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD40 SWAP3 SWAP2 SWAP1 PUSH2 0x3DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1AF1E2E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 TIMESTAMP LT ISZERO PUSH2 0xDE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1BADA80200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE DUP2 PUSH32 0x1B011FAE1A8FA8755C05A1200229CF94F1218002D660DAE8ECA1E796DB11E212 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE2B SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xE61 PUSH2 0x26A6 JUMP JUMPDEST PUSH2 0xE69 PUSH2 0x272D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP5 SWAP2 POP SWAP2 POP PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x1F4 DUP6 PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0xEE7 SWAP2 SWAP1 PUSH2 0x3F3A JUMP JUMPDEST SWAP2 POP DUP2 DUP5 PUSH2 0xEF5 SWAP2 SWAP1 PUSH2 0x3F6B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF07 PUSH2 0x26A6 JUMP JUMPDEST DUP1 DUP1 ISZERO PUSH2 0xF5E JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xF80 JUMPI PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF76 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xFF6 JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0xFD7 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xFF5 JUMPI PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFEF SWAP1 PUSH2 0x3FE7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x763B63B30E91C843BB39E4379603697003D3B7C1F192619CD782FA33BDC44396 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1093 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x10CB PUSH2 0x279F JUMP JUMPDEST PUSH2 0x10D4 DUP3 PUSH2 0x2885 JUMP JUMPDEST PUSH2 0x10DE DUP3 DUP3 PUSH2 0x2890 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1165 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116D PUSH2 0x29AF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1179 PUSH2 0x2A21 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x11AF SWAP1 PUSH2 0x3E98 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11DB SWAP1 PUSH2 0x3E98 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x120B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x123B PUSH2 0x2AA8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x125D PUSH2 0x26A6 JUMP JUMPDEST PUSH2 0x1267 PUSH1 0x0 PUSH2 0x2AD0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1277 PUSH2 0x2BA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12A2 JUMPI PUSH2 0x12A1 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12C6 JUMPI PUSH2 0x12C5 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x12FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3742D1F600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3E87CFFD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x708 DUP2 PUSH1 0x3 ADD SLOAD PUSH2 0x1398 SWAP2 SWAP1 PUSH2 0x3E0C JUMP JUMPDEST TIMESTAMP GT PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB4D698100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x142C SWAP1 PUSH2 0x4041 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1469 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x146E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x14A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF0C49D4400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH32 0xF552CA82E113AC3C539C3D617F29FCD19C172A0C75DAD017555C9E109F7FE183 CALLER DUP5 PUSH1 0x40 MLOAD PUSH2 0x14DB SWAP3 SWAP2 SWAP1 PUSH2 0x3E40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x14EE PUSH2 0x2BFE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x708 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15B1 JUMPI PUSH2 0x15B0 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15C3 JUMPI PUSH2 0x15C2 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x708 DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x3E0C JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16A3 JUMPI PUSH2 0x16A2 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16B5 JUMPI PUSH2 0x16B4 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16CF JUMPI PUSH2 0x16CE PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16E6 JUMPI PUSH2 0x16E5 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x1703 JUMPI POP PUSH2 0x708 DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x1700 SWAP2 SWAP1 PUSH2 0x3E0C JUMP JUMPDEST TIMESTAMP GT JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1716 PUSH2 0x2C17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x174B PUSH2 0x26A6 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4D5771454588F51370A8A2E7E151354B6DE0DC3159B14821B4AD76BC04C28BC7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x17E8 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH2 0x183B PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0x1843 PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1892 JUMPI PUSH2 0x1891 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x18C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x475A253500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1953 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3B2A862C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ PUSH2 0x1992 JUMPI PUSH1 0x40 MLOAD PUSH32 0x815E1D6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 DUP6 SWAP1 POP LT ISZERO PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE246DC6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x2 ADD SLOAD ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A11 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4077 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1A34 DUP3 PUSH2 0x2C80 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP6 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A55 JUMPI PUSH2 0x1A54 PUSH2 0x3A1F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A83 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP9 DUP9 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1D0C JUMPI PUSH1 0x0 PUSH2 0x1B07 DUP5 DUP12 DUP12 DUP6 DUP2 DUP2 LT PUSH2 0x1AAD JUMPI PUSH2 0x1AAC PUSH2 0x40C5 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1ABF SWAP2 SWAP1 PUSH2 0x4103 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 POP DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x1B1C JUMPI PUSH2 0x1B1B PUSH2 0x40C5 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1B31 SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x815E1D6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1C18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x54AC7BFC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1CAF JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C4D JUMPI PUSH2 0x1C4C PUSH2 0x40C5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8044BB3300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1C1B JUMP JUMPDEST POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CC4 JUMPI PUSH2 0x1CC3 PUSH2 0x40C5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1A89 JUMP JUMPDEST POP PUSH1 0x1 DUP5 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D35 JUMPI PUSH2 0x1D34 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1D85 SWAP1 PUSH2 0x4041 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DC2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1E02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96DC0E100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH32 0x3A5E0271CD79026F0993AA13E6DD17D1F34284AA2340C1D2C33653B9A4433EE9 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1E5C SWAP3 SWAP2 SWAP1 PUSH2 0x3E40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP PUSH2 0x1E71 PUSH2 0x2BFE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E82 PUSH2 0x2CE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1ED0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1F05 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1F13 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1F4A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1FA3 CALLER PUSH2 0x2CF6 JUMP JUMPDEST PUSH2 0x1FAB PUSH2 0x2D0A JUMP JUMPDEST PUSH2 0x1FB3 PUSH2 0x2D1C JUMP JUMPDEST PUSH2 0x1FBB PUSH2 0x2D26 JUMP JUMPDEST DUP7 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x15180 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xB SWAP1 DUP2 PUSH2 0x2050 SWAP2 SWAP1 PUSH2 0x4312 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0x0 PUSH20 0x17CABC8001A30800835DD8206CEB0C4BA90B5913 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH20 0x73AF5BE3DB46CE3B7C50FD833B9C60180F339449 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x21E4 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x21DB SWAP2 SWAP1 PUSH2 0x4433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x2239 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xAAEBCF1BFA00580E41D966056B48521FA9F202645C86D4DDF28113E617C1B1D3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x22D0 SWAP3 SWAP2 SWAP1 PUSH2 0x444E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x22E4 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0x22EC PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x0 CALLVALUE SUB PUSH2 0x2326 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLVALUE SWAP1 POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x23A9 JUMPI PUSH2 0x2710 PUSH2 0x1F4 CALLVALUE PUSH2 0x238E SWAP2 SWAP1 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x2398 SWAP2 SWAP1 PUSH2 0x3F3A JUMP JUMPDEST SWAP2 POP DUP2 CALLVALUE PUSH2 0x23A6 SWAP2 SWAP1 PUSH2 0x3F6B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x23FB SWAP1 PUSH2 0x3F9F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 CALLER CALLVALUE TIMESTAMP DUP5 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x241C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2481 JUMPI PUSH2 0x2480 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2527 JUMPI PUSH2 0x2526 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x719AB00511E884D1EA4921EE843132435DC006B0BB7F8B67FB693B621E45BB53 CALLVALUE DUP6 DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x257B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x258F PUSH2 0x2BFE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2599 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x260B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2602 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2614 DUP2 PUSH2 0x2AD0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x261F PUSH2 0x26A6 JUMP JUMPDEST PUSH2 0x12C DUP2 LT ISZERO PUSH2 0x265B JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8D10E8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0x3E9CAC94B7C7DB9B86DF56321E6F7E3E88A6C87FC15FD825DF1492CF69E33551 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x269A SWAP3 SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x26AE PUSH2 0x2D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x26CC PUSH2 0x170B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x272B JUMPI PUSH2 0x26EF PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2722 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2735 PUSH2 0x2D38 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x273F PUSH2 0x2AA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2787 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2794 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x284C JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2833 PUSH2 0x2D78 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2883 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x288D PUSH2 0x26A6 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x28F8 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28F5 SWAP2 SWAP1 PUSH2 0x4530 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2939 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2930 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x29A0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2997 SWAP2 SWAP1 PUSH2 0x3BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29AA DUP4 DUP4 PUSH2 0x2DCF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x29B7 PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C1 PUSH2 0x2AA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2A09 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A16 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ADA PUSH2 0x2C17 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB1 PUSH2 0x2E42 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x2BF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C08 PUSH2 0x2E42 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2C47 PUSH2 0x1230 JUMP JUMPDEST ISZERO PUSH2 0x2C7E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2CC6 DUP7 DUP7 PUSH2 0x2E6A JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2CD6 DUP3 DUP3 PUSH2 0x2EC6 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CED PUSH2 0x302A JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2CFE PUSH2 0x3055 JUMP JUMPDEST PUSH2 0x2D07 DUP2 PUSH2 0x3095 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D12 PUSH2 0x3055 JUMP JUMPDEST PUSH2 0x2D1A PUSH2 0x311B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2D24 PUSH2 0x3055 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2D2E PUSH2 0x3055 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2D40 PUSH2 0x1230 JUMP JUMPDEST PUSH2 0x2D76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DA6 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x313C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2DD8 DUP3 PUSH2 0x3146 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2E35 JUMPI PUSH2 0x2E2F DUP3 DUP3 PUSH2 0x3213 JUMP JUMPDEST POP PUSH2 0x2E3E JUMP JUMPDEST PUSH2 0x2E3D PUSH2 0x3297 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x2EAF JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x2EA1 DUP9 DUP3 DUP6 DUP6 PUSH2 0x32D4 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2EBF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2EDA JUMPI PUSH2 0x2ED9 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2EED JUMPI PUSH2 0x2EEC PUSH2 0x3826 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x3026 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F07 JUMPI PUSH2 0x2F06 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F1A JUMPI PUSH2 0x2F19 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2F51 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F65 JUMPI PUSH2 0x2F64 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F78 JUMPI PUSH2 0x2F77 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2FBD JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FB4 SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2FD0 JUMPI PUSH2 0x2FCF PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2FE3 JUMPI PUSH2 0x2FE2 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3025 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x301C SWAP2 SWAP1 PUSH2 0x3BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x305D PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x3093 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x309D PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x310F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3106 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3118 DUP2 PUSH2 0x2AD0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3123 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312D PUSH2 0x2E42 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x31A2 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3199 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x31CF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x313C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x323D SWAP2 SWAP1 PUSH2 0x4599 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3278 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x327D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x328D DUP6 DUP4 DUP4 PUSH2 0x33E8 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x32D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x3314 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x33BE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3339 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x45CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x335B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x33AF JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x33BE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D2 PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x33FD JUMPI PUSH2 0x33F8 DUP3 PUSH2 0x3477 JUMP JUMPDEST PUSH2 0x346F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x3425 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x3467 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345E SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x3470 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x3489 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x350C JUMPI PUSH2 0x350B PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3551 DUP3 PUSH2 0x3526 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3561 DUP2 PUSH2 0x3546 JUMP JUMPDEST DUP2 EQ PUSH2 0x356C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x357E DUP2 PUSH2 0x3558 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3599 DUP2 PUSH2 0x3584 JUMP JUMPDEST DUP2 EQ PUSH2 0x35A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35B6 DUP2 PUSH2 0x3590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35D3 JUMPI PUSH2 0x35D2 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35E1 DUP6 DUP3 DUP7 ADD PUSH2 0x356F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35F2 DUP6 DUP3 DUP7 ADD PUSH2 0x35A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x360F DUP2 PUSH2 0x35FC JUMP JUMPDEST DUP2 EQ PUSH2 0x361A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x362C DUP2 PUSH2 0x3606 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3649 JUMPI PUSH2 0x3648 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3657 DUP6 DUP3 DUP7 ADD PUSH2 0x356F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3668 DUP6 DUP3 DUP7 ADD PUSH2 0x361D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x367B DUP2 PUSH2 0x3584 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3696 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3672 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36B2 JUMPI PUSH2 0x36B1 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36C0 DUP5 DUP3 DUP6 ADD PUSH2 0x356F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3703 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372B DUP3 PUSH2 0x36C9 JUMP JUMPDEST PUSH2 0x3735 DUP2 DUP6 PUSH2 0x36D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3745 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36E5 JUMP JUMPDEST PUSH2 0x374E DUP2 PUSH2 0x370F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3773 DUP2 DUP5 PUSH2 0x3720 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3784 DUP2 PUSH2 0x35FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x379F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x377B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37B8 DUP2 PUSH2 0x37A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x37C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x37D5 DUP2 PUSH2 0x37AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37F1 JUMPI PUSH2 0x37F0 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37FF DUP5 DUP3 DUP6 ADD PUSH2 0x37C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3811 DUP2 PUSH2 0x3546 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3820 DUP2 PUSH2 0x35FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3866 JUMPI PUSH2 0x3865 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x3877 DUP3 PUSH2 0x3855 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3887 DUP3 PUSH2 0x3869 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3897 DUP2 PUSH2 0x387C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x38B3 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3808 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x38C6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x38D9 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x38EC PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x38FF PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x388E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x391A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x389D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3929 DUP2 PUSH2 0x3546 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3938 DUP2 PUSH2 0x387C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3953 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3920 JUMP JUMPDEST PUSH2 0x3960 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x396D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x397A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x3987 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x392F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39A8 JUMPI PUSH2 0x39A7 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39B6 DUP6 DUP3 DUP7 ADD PUSH2 0x361D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x39C7 DUP6 DUP3 DUP7 ADD PUSH2 0x356F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x39E6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x39F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x377B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3920 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3A57 DUP3 PUSH2 0x370F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3A76 JUMPI PUSH2 0x3A75 PUSH2 0x3A1F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A89 PUSH2 0x3512 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A95 DUP3 DUP3 PUSH2 0x3A4E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3AB5 JUMPI PUSH2 0x3AB4 PUSH2 0x3A1F JUMP JUMPDEST JUMPDEST PUSH2 0x3ABE DUP3 PUSH2 0x370F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AED PUSH2 0x3AE8 DUP5 PUSH2 0x3A9A JUMP JUMPDEST PUSH2 0x3A7F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3B09 JUMPI PUSH2 0x3B08 PUSH2 0x3A1A JUMP JUMPDEST JUMPDEST PUSH2 0x3B14 DUP5 DUP3 DUP6 PUSH2 0x3ACB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3B31 JUMPI PUSH2 0x3B30 PUSH2 0x3A15 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3B41 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3ADA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B61 JUMPI PUSH2 0x3B60 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B6F DUP6 DUP3 DUP7 ADD PUSH2 0x356F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B90 JUMPI PUSH2 0x3B8F PUSH2 0x3521 JUMP JUMPDEST JUMPDEST PUSH2 0x3B9C DUP6 DUP3 DUP7 ADD PUSH2 0x3B1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BAF DUP2 PUSH2 0x37A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BCA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3BF0 JUMPI PUSH2 0x3BEF PUSH2 0x3A15 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C0D JUMPI PUSH2 0x3C0C PUSH2 0x3BD0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3C29 JUMPI PUSH2 0x3C28 PUSH2 0x3BD5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3C46 JUMPI PUSH2 0x3C45 PUSH2 0x3A15 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C63 JUMPI PUSH2 0x3C62 PUSH2 0x3BD0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3C7F JUMPI PUSH2 0x3C7E PUSH2 0x3BD5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3CA2 JUMPI PUSH2 0x3CA1 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CB0 DUP9 DUP3 DUP10 ADD PUSH2 0x37C6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CD1 JUMPI PUSH2 0x3CD0 PUSH2 0x3521 JUMP JUMPDEST JUMPDEST PUSH2 0x3CDD DUP9 DUP3 DUP10 ADD PUSH2 0x3BDA JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D00 JUMPI PUSH2 0x3CFF PUSH2 0x3521 JUMP JUMPDEST JUMPDEST PUSH2 0x3D0C DUP9 DUP3 DUP10 ADD PUSH2 0x3C30 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D31 JUMPI PUSH2 0x3D30 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D3F DUP5 DUP3 DUP6 ADD PUSH2 0x361D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D60 DUP3 PUSH2 0x3D48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D72 DUP3 PUSH2 0x3D55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D8A PUSH2 0x3D85 DUP3 PUSH2 0x3546 JUMP JUMPDEST PUSH2 0x3D67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DAB PUSH2 0x3DA6 DUP3 PUSH2 0x35FC JUMP JUMPDEST PUSH2 0x3D90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DBD DUP3 DUP6 PUSH2 0x3D79 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x3DCD DUP3 DUP5 PUSH2 0x3D9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E17 DUP3 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP PUSH2 0x3E22 DUP4 PUSH2 0x35FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3E3A JUMPI PUSH2 0x3E39 PUSH2 0x3DDD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3920 JUMP JUMPDEST PUSH2 0x3E62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x377B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3EB0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3EC3 JUMPI PUSH2 0x3EC2 PUSH2 0x3E69 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED4 DUP3 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP PUSH2 0x3EDF DUP4 PUSH2 0x35FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3EED DUP2 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3F04 JUMPI PUSH2 0x3F03 PUSH2 0x3DDD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F45 DUP3 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP PUSH2 0x3F50 DUP4 PUSH2 0x35FC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3F60 JUMPI PUSH2 0x3F5F PUSH2 0x3F0B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F76 DUP3 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP PUSH2 0x3F81 DUP4 PUSH2 0x35FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3F99 JUMPI PUSH2 0x3F98 PUSH2 0x3DDD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FAA DUP3 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3FDC JUMPI PUSH2 0x3FDB PUSH2 0x3DDD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FF2 DUP3 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x4005 JUMPI PUSH2 0x4004 PUSH2 0x3DDD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x402B PUSH1 0x0 DUP4 PUSH2 0x4010 JUMP JUMPDEST SWAP2 POP PUSH2 0x4036 DUP3 PUSH2 0x401B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404C DUP3 PUSH2 0x401E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4071 PUSH2 0x406C DUP3 PUSH2 0x37A5 JUMP JUMPDEST PUSH2 0x4056 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4083 DUP3 DUP8 PUSH2 0x4060 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x4093 DUP3 DUP7 PUSH2 0x3D79 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x40A3 DUP3 DUP6 PUSH2 0x3D9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x40B3 DUP3 DUP5 PUSH2 0x3D79 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4120 JUMPI PUSH2 0x411F PUSH2 0x40F4 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4142 JUMPI PUSH2 0x4141 PUSH2 0x40F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x415E JUMPI PUSH2 0x415D PUSH2 0x40FE JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x41C8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x418B JUMP JUMPDEST PUSH2 0x41D2 DUP7 DUP4 PUSH2 0x418B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x420F PUSH2 0x420A PUSH2 0x4205 DUP5 PUSH2 0x35FC JUMP JUMPDEST PUSH2 0x41EA JUMP JUMPDEST PUSH2 0x35FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4229 DUP4 PUSH2 0x41F4 JUMP JUMPDEST PUSH2 0x423D PUSH2 0x4235 DUP3 PUSH2 0x4216 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4198 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4252 PUSH2 0x4245 JUMP JUMPDEST PUSH2 0x425D DUP2 DUP5 DUP5 PUSH2 0x4220 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4281 JUMPI PUSH2 0x4276 PUSH1 0x0 DUP3 PUSH2 0x424A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4263 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x42C6 JUMPI PUSH2 0x4297 DUP2 PUSH2 0x4166 JUMP JUMPDEST PUSH2 0x42A0 DUP5 PUSH2 0x417B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x42AF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x42C3 PUSH2 0x42BB DUP6 PUSH2 0x417B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4262 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42E9 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x42CB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4302 DUP4 DUP4 PUSH2 0x42D8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x431B DUP3 PUSH2 0x36C9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4334 JUMPI PUSH2 0x4333 PUSH2 0x3A1F JUMP JUMPDEST JUMPDEST PUSH2 0x433E DUP3 SLOAD PUSH2 0x3E98 JUMP JUMPDEST PUSH2 0x4349 DUP3 DUP3 DUP6 PUSH2 0x4285 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x437C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x436A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4374 DUP6 DUP3 PUSH2 0x42F6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x43DC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x438A DUP7 PUSH2 0x4166 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x43B2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x438D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x43CF JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x43CB PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x42D8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x441D PUSH2 0x4418 PUSH2 0x4413 DUP5 PUSH2 0x43E4 JUMP JUMPDEST PUSH2 0x41EA JUMP JUMPDEST PUSH2 0x43EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x442D DUP2 PUSH2 0x4402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4448 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4463 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3920 JUMP JUMPDEST PUSH2 0x4470 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3920 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4483 DUP3 DUP9 PUSH2 0x3D79 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4493 DUP3 DUP8 PUSH2 0x3D9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x44A3 DUP3 DUP7 PUSH2 0x3D9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x44B3 DUP3 DUP6 PUSH2 0x3D9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x44C3 DUP3 DUP5 PUSH2 0x3D79 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x44EB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x44F8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x4505 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3BA6 JUMP JUMPDEST PUSH2 0x4512 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x377B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x452A DUP2 PUSH2 0x37AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4546 JUMPI PUSH2 0x4545 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4554 DUP5 DUP3 DUP6 ADD PUSH2 0x451B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4573 DUP3 PUSH2 0x455D JUMP JUMPDEST PUSH2 0x457D DUP2 DUP6 PUSH2 0x4010 JUMP JUMPDEST SWAP4 POP PUSH2 0x458D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36E5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45A5 DUP3 DUP5 PUSH2 0x4568 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45C6 DUP2 PUSH2 0x45B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x45E1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3BA6 JUMP JUMPDEST PUSH2 0x45EE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x45BD JUMP JUMPDEST PUSH2 0x45FB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3BA6 JUMP JUMPDEST PUSH2 0x4608 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3BA6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE LOG0 PREVRANDAO SWAP3 PUSH16 0xC53C167D6694D4DB8D4118A05778DE90 SAR 0xC6 DUP13 0xEB TIMESTAMP DUP16 0x2F 0xC0 CALLDATALOAD 0xC2 STOP PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"927:10806:20:-:0;;;1171:4:2;1128:48;;;;;;;;;3714:55:20;;;;;;;;;;3739:22;:20;;;:22;;:::i;:::-;927:10806;;7709:422:1;7824:30;7857:26;:24;;;:26;;:::i;:::-;7824:59;;7898:1;:15;;;;;;;;;;;;7894:76;;;7936:23;;;;;;;;;;;;;;7894:76;8001:16;7983:34;;:1;:14;;;;;;;;;;;;:34;;;7979:146;;8050:16;8033:1;:14;;;:33;;;;;;;;;;;;;;;;;;8085:29;8097:16;8085:29;;;;;;:::i;:::-;;;;;;;;7979:146;7758:373;7709:422::o;9071:205::-;9129:30;9171:12;9186:27;:25;;;:27;;:::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;8819:122::-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7:101:21:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;927:10806:20:-;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BPS_DENOMINATOR_7173":{"entryPoint":8747,"id":7173,"parameterSlots":0,"returnSlots":0},"@FEE_BPS_7170":{"entryPoint":6189,"id":7170,"parameterSlots":0,"returnSlots":0},"@MIN_SIGNATURES_7179":{"entryPoint":3015,"id":7179,"parameterSlots":0,"returnSlots":0},"@REFUND_TIMEOUT_7176":{"entryPoint":5361,"id":7176,"parameterSlots":0,"returnSlots":0},"@UPGRADE_INTERFACE_VERSION_486":{"entryPoint":6132,"id":486,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":11510,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":12437,"id":81,"parameterSlots":1,"returnSlots":0},"@__Pausable_init_754":{"entryPoint":11558,"id":754,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_890":{"entryPoint":11530,"id":890,"parameterSlots":0,"returnSlots":0},"@__ReentrancyGuard_init_unchained_908":{"entryPoint":12571,"id":908,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_516":{"entryPoint":11548,"id":516,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_8168":{"entryPoint":10373,"id":8168,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":12373,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_1303":{"entryPoint":12951,"id":1303,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_592":{"entryPoint":10785,"id":592,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":9894,"id":122,"parameterSlots":0,"returnSlots":0},"@_checkProxy_576":{"entryPoint":10143,"id":576,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_461":{"entryPoint":11490,"id":461,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":11287,"id":25,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_716":{"entryPoint":10920,"id":716,"parameterSlots":0,"returnSlots":1},"@_getReentrancyGuardStorage_878":{"entryPoint":11842,"id":878,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_447":{"entryPoint":12330,"id":447,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":13256,"id":438,"parameterSlots":0,"returnSlots":1},"@_msgSender_672":{"entryPoint":11568,"id":672,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_960":{"entryPoint":11262,"id":960,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_944":{"entryPoint":11175,"id":944,"parameterSlots":0,"returnSlots":0},"@_pause_825":{"entryPoint":10671,"id":825,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_788":{"entryPoint":11327,"id":788,"parameterSlots":0,"returnSlots":0},"@_requirePaused_801":{"entryPoint":11576,"id":801,"parameterSlots":0,"returnSlots":0},"@_revert_1573":{"entryPoint":13431,"id":1573,"parameterSlots":1,"returnSlots":0},"@_setImplementation_1083":{"entryPoint":12614,"id":1083,"parameterSlots":1,"returnSlots":0},"@_throwError_3521":{"entryPoint":11974,"id":3521,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":10960,"id":193,"parameterSlots":1,"returnSlots":0},"@_unpause_849":{"entryPoint":10029,"id":849,"parameterSlots":0,"returnSlots":0},"@_upgradeToAndCallUUPS_643":{"entryPoint":10384,"id":643,"parameterSlots":2,"returnSlots":0},"@bridge_7745":{"entryPoint":8924,"id":7745,"parameterSlots":0,"returnSlots":0},"@calculateFee_8116":{"entryPoint":3691,"id":8116,"parameterSlots":2,"returnSlots":2},"@canRefund_8060":{"entryPoint":5609,"id":8060,"parameterSlots":1,"returnSlots":1},"@complete_7939":{"entryPoint":6195,"id":7939,"parameterSlots":5,"returnSlots":0},"@emergencyOperators_7224":{"entryPoint":2673,"id":7224,"parameterSlots":0,"returnSlots":0},"@emergencyPause_7633":{"entryPoint":4322,"id":7633,"parameterSlots":0,"returnSlots":0},"@emergencyWithdrawDelay_7226":{"entryPoint":4713,"id":7226,"parameterSlots":0,"returnSlots":0},"@emergencyWithdrawTime_7228":{"entryPoint":8741,"id":7228,"parameterSlots":0,"returnSlots":0},"@executeUpgrade_7488":{"entryPoint":3363,"id":7488,"parameterSlots":2,"returnSlots":0},"@feeRecipient_7167":{"entryPoint":4255,"id":7167,"parameterSlots":0,"returnSlots":0},"@functionDelegateCall_1491":{"entryPoint":12819,"id":1491,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_1683":{"entryPoint":12604,"id":1683,"parameterSlots":1,"returnSlots":1},"@getImplementation_1056":{"entryPoint":11640,"id":1056,"parameterSlots":0,"returnSlots":1},"@getRefundTime_8080":{"entryPoint":5367,"id":8080,"parameterSlots":1,"returnSlots":1},"@getTransfer_8031":{"entryPoint":3020,"id":8031,"parameterSlots":1,"returnSlots":1},"@getVersion_8159":{"entryPoint":2863,"id":8159,"parameterSlots":0,"returnSlots":1},"@initialize_7399":{"entryPoint":7800,"id":7399,"parameterSlots":2,"returnSlots":0},"@isFeeExempt_7183":{"entryPoint":3641,"id":7183,"parameterSlots":0,"returnSlots":0},"@isUpgradeReady_8151":{"entryPoint":2576,"id":8151,"parameterSlots":2,"returnSlots":1},"@isValidSigner_7212":{"entryPoint":8685,"id":7212,"parameterSlots":0,"returnSlots":0},"@numSigners_7214":{"entryPoint":3009,"id":7214,"parameterSlots":0,"returnSlots":0},"@owner_105":{"entryPoint":5899,"id":105,"parameterSlots":0,"returnSlots":1},"@paused_776":{"entryPoint":4656,"id":776,"parameterSlots":0,"returnSlots":1},"@pendingUpgrades_7220":{"entryPoint":8717,"id":7220,"parameterSlots":0,"returnSlots":0},"@proxiableUUID_534":{"entryPoint":4463,"id":534,"parameterSlots":0,"returnSlots":1},"@recover_3278":{"entryPoint":11446,"id":3278,"parameterSlots":2,"returnSlots":1},"@refund_8018":{"entryPoint":4719,"id":8018,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_136":{"entryPoint":4693,"id":136,"parameterSlots":0,"returnSlots":0},"@scheduleUpgrade_7437":{"entryPoint":2705,"id":7437,"parameterSlots":1,"returnSlots":0},"@setEmergencyOperator_7617":{"entryPoint":2477,"id":7617,"parameterSlots":2,"returnSlots":0},"@setFeeExempt_7537":{"entryPoint":5955,"id":7537,"parameterSlots":2,"returnSlots":0},"@setFeeRecipient_7601":{"entryPoint":8753,"id":7601,"parameterSlots":1,"returnSlots":0},"@setValidator_7580":{"entryPoint":3839,"id":7580,"parameterSlots":2,"returnSlots":0},"@toEthSignedMessageHash_3537":{"entryPoint":11392,"id":3537,"parameterSlots":1,"returnSlots":1},"@transferOwnership_164":{"entryPoint":9617,"id":164,"parameterSlots":1,"returnSlots":0},"@transfers_7208":{"entryPoint":3264,"id":7208,"parameterSlots":0,"returnSlots":0},"@tryRecover_3248":{"entryPoint":11882,"id":3248,"parameterSlots":2,"returnSlots":3},"@tryRecover_3436":{"entryPoint":13012,"id":3436,"parameterSlots":4,"returnSlots":3},"@unpause_7642":{"entryPoint":3673,"id":7642,"parameterSlots":0,"returnSlots":0},"@updateTimelock_7516":{"entryPoint":9751,"id":7516,"parameterSlots":1,"returnSlots":0},"@upgradeTimelock_7216":{"entryPoint":5603,"id":7216,"parameterSlots":0,"returnSlots":0},"@upgradeToAndCall_1119":{"entryPoint":11727,"id":1119,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_554":{"entryPoint":4291,"id":554,"parameterSlots":2,"returnSlots":0},"@userNonces_7187":{"entryPoint":3240,"id":7187,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_1531":{"entryPoint":13288,"id":1531,"parameterSlots":3,"returnSlots":1},"@version_7230":{"entryPoint":4514,"id":7230,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":15066,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":13679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":15408,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":15322,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bool":{"entryPoint":13735,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":14278,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":17691,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":15132,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":13853,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13980,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bool":{"entryPoint":13756,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":15178,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":13874,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":14299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":17712,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr":{"entryPoint":15494,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":15643,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":14737,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address":{"entryPoint":14344,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":14624,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":15737,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":13938,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":15270,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":16480,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":17768,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_Status_$7191_to_t_uint8":{"entryPoint":14478,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Status_$7191_to_t_uint8_fromStack":{"entryPoint":14639,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":17444,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":14112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16414,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Transfer_$7203_memory_ptr_to_t_struct$_Transfer_$7203_memory_ptr_fromStack":{"entryPoint":14493,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":14359,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":14203,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":15770,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":17853,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":15793,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":17527,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_address_t_uint256_t_address__to_t_bytes32_t_address_t_uint256_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":16503,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":17817,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":16449,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":14842,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":17486,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":15936,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_enum$_Status_$7191__to_t_address_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed":{"entryPoint":14654,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":13953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":15285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":17868,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":17459,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Transfer_$7203_memory_ptr__to_t_struct$_Transfer_$7203_memory_ptr__fromStack_reversed":{"entryPoint":14597,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":14218,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14801,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_bytes32_t_uint256__fromStack_reversed":{"entryPoint":17622,"id":null,"parameterSlots":5,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":16643,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":14975,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":13586,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":15002,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":16742,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":17757,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":14025,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16400,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":14036,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":15884,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":16186,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":16073,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":16235,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":17029,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":13638,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":13700,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":14245,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Status_$7191":{"entryPoint":14441,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":17380,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":13606,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":13820,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":17390,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":17840,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":16994,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_enum$_Status_$7191_to_t_uint8":{"entryPoint":14460,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":17410,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":16884,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":17170,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":15051,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":14053,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":16359,"id":null,"parameterSlots":1,"returnSlots":1},"divide_by_32_ceil":{"entryPoint":16763,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":16024,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":17142,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":14926,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":16874,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":16287,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":15719,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":16470,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":15701,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":15760,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":17112,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":15837,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":16139,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":14374,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":15977,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":16581,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14879,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":16918,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":15312,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":14869,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":16633,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":16628,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":15317,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":16638,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":14874,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":13601,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":13596,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":14095,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":15688,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":16779,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":17099,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":16970,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":16411,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":16792,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":16928,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_t_enum$_Status_$7191":{"entryPoint":14421,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":13656,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":13712,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":14255,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":13830,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":16965,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:31896:21","nodeType":"YulBlock","src":"0:31896:21","statements":[{"body":{"nativeSrc":"47:35:21","nodeType":"YulBlock","src":"47:35:21","statements":[{"nativeSrc":"57:19:21","nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:21","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:21","nodeType":"YulIdentifier","src":"67:5:21"},"nativeSrc":"67:9:21","nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:21","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:21","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:21","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nativeSrc":"177:28:21","nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:21","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:21","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:21","nodeType":"YulIdentifier","src":"187:6:21"},"nativeSrc":"187:12:21","nodeType":"YulFunctionCall","src":"187:12:21"},"nativeSrc":"187:12:21","nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:21","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nativeSrc":"300:28:21","nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:21","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:21","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:21","nodeType":"YulIdentifier","src":"310:6:21"},"nativeSrc":"310:12:21","nodeType":"YulFunctionCall","src":"310:12:21"},"nativeSrc":"310:12:21","nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:21","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nativeSrc":"379:81:21","nodeType":"YulBlock","src":"379:81:21","statements":[{"nativeSrc":"389:65:21","nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nativeSrc":"404:5:21","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nativeSrc":"411:42:21","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:21","nodeType":"YulIdentifier","src":"400:3:21"},"nativeSrc":"400:54:21","nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:21","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:21","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:21","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nativeSrc":"511:51:21","nodeType":"YulBlock","src":"511:51:21","statements":[{"nativeSrc":"521:35:21","nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nativeSrc":"550:5:21","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:21","nodeType":"YulIdentifier","src":"532:17:21"},"nativeSrc":"532:24:21","nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:21","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:21","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:21","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nativeSrc":"611:79:21","nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nativeSrc":"668:16:21","nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:21","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:21","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:21","nodeType":"YulIdentifier","src":"670:6:21"},"nativeSrc":"670:12:21","nodeType":"YulFunctionCall","src":"670:12:21"},"nativeSrc":"670:12:21","nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:21","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nativeSrc":"659:5:21","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:21","nodeType":"YulIdentifier","src":"641:17:21"},"nativeSrc":"641:24:21","nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nativeSrc":"631:2:21","nodeType":"YulIdentifier","src":"631:2:21"},"nativeSrc":"631:35:21","nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nativeSrc":"624:6:21","nodeType":"YulIdentifier","src":"624:6:21"},"nativeSrc":"624:43:21","nodeType":"YulFunctionCall","src":"624:43:21"},"nativeSrc":"621:63:21","nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:21","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nativeSrc":"748:87:21","nodeType":"YulBlock","src":"748:87:21","statements":[{"nativeSrc":"758:29:21","nodeType":"YulAssignment","src":"758:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:21","nodeType":"YulIdentifier","src":"780:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:21","nodeType":"YulIdentifier","src":"767:12:21"},"nativeSrc":"767:20:21","nodeType":"YulFunctionCall","src":"767:20:21"},"variableNames":[{"name":"value","nativeSrc":"758:5:21","nodeType":"YulIdentifier","src":"758:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:21","nodeType":"YulIdentifier","src":"823:5:21"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:21","nodeType":"YulIdentifier","src":"796:26:21"},"nativeSrc":"796:33:21","nodeType":"YulFunctionCall","src":"796:33:21"},"nativeSrc":"796:33:21","nodeType":"YulExpressionStatement","src":"796:33:21"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:21","nodeType":"YulTypedName","src":"726:6:21","type":""},{"name":"end","nativeSrc":"734:3:21","nodeType":"YulTypedName","src":"734:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:21","nodeType":"YulTypedName","src":"742:5:21","type":""}],"src":"696:139:21"},{"body":{"nativeSrc":"883:48:21","nodeType":"YulBlock","src":"883:48:21","statements":[{"nativeSrc":"893:32:21","nodeType":"YulAssignment","src":"893:32:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"918:5:21","nodeType":"YulIdentifier","src":"918:5:21"}],"functionName":{"name":"iszero","nativeSrc":"911:6:21","nodeType":"YulIdentifier","src":"911:6:21"},"nativeSrc":"911:13:21","nodeType":"YulFunctionCall","src":"911:13:21"}],"functionName":{"name":"iszero","nativeSrc":"904:6:21","nodeType":"YulIdentifier","src":"904:6:21"},"nativeSrc":"904:21:21","nodeType":"YulFunctionCall","src":"904:21:21"},"variableNames":[{"name":"cleaned","nativeSrc":"893:7:21","nodeType":"YulIdentifier","src":"893:7:21"}]}]},"name":"cleanup_t_bool","nativeSrc":"841:90:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"865:5:21","nodeType":"YulTypedName","src":"865:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"875:7:21","nodeType":"YulTypedName","src":"875:7:21","type":""}],"src":"841:90:21"},{"body":{"nativeSrc":"977:76:21","nodeType":"YulBlock","src":"977:76:21","statements":[{"body":{"nativeSrc":"1031:16:21","nodeType":"YulBlock","src":"1031:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1040:1:21","nodeType":"YulLiteral","src":"1040:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1043:1:21","nodeType":"YulLiteral","src":"1043:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1033:6:21","nodeType":"YulIdentifier","src":"1033:6:21"},"nativeSrc":"1033:12:21","nodeType":"YulFunctionCall","src":"1033:12:21"},"nativeSrc":"1033:12:21","nodeType":"YulExpressionStatement","src":"1033:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1000:5:21","nodeType":"YulIdentifier","src":"1000:5:21"},{"arguments":[{"name":"value","nativeSrc":"1022:5:21","nodeType":"YulIdentifier","src":"1022:5:21"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1007:14:21","nodeType":"YulIdentifier","src":"1007:14:21"},"nativeSrc":"1007:21:21","nodeType":"YulFunctionCall","src":"1007:21:21"}],"functionName":{"name":"eq","nativeSrc":"997:2:21","nodeType":"YulIdentifier","src":"997:2:21"},"nativeSrc":"997:32:21","nodeType":"YulFunctionCall","src":"997:32:21"}],"functionName":{"name":"iszero","nativeSrc":"990:6:21","nodeType":"YulIdentifier","src":"990:6:21"},"nativeSrc":"990:40:21","nodeType":"YulFunctionCall","src":"990:40:21"},"nativeSrc":"987:60:21","nodeType":"YulIf","src":"987:60:21"}]},"name":"validator_revert_t_bool","nativeSrc":"937:116:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"970:5:21","nodeType":"YulTypedName","src":"970:5:21","type":""}],"src":"937:116:21"},{"body":{"nativeSrc":"1108:84:21","nodeType":"YulBlock","src":"1108:84:21","statements":[{"nativeSrc":"1118:29:21","nodeType":"YulAssignment","src":"1118:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"1140:6:21","nodeType":"YulIdentifier","src":"1140:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"1127:12:21","nodeType":"YulIdentifier","src":"1127:12:21"},"nativeSrc":"1127:20:21","nodeType":"YulFunctionCall","src":"1127:20:21"},"variableNames":[{"name":"value","nativeSrc":"1118:5:21","nodeType":"YulIdentifier","src":"1118:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1180:5:21","nodeType":"YulIdentifier","src":"1180:5:21"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"1156:23:21","nodeType":"YulIdentifier","src":"1156:23:21"},"nativeSrc":"1156:30:21","nodeType":"YulFunctionCall","src":"1156:30:21"},"nativeSrc":"1156:30:21","nodeType":"YulExpressionStatement","src":"1156:30:21"}]},"name":"abi_decode_t_bool","nativeSrc":"1059:133:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1086:6:21","nodeType":"YulTypedName","src":"1086:6:21","type":""},{"name":"end","nativeSrc":"1094:3:21","nodeType":"YulTypedName","src":"1094:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1102:5:21","nodeType":"YulTypedName","src":"1102:5:21","type":""}],"src":"1059:133:21"},{"body":{"nativeSrc":"1278:388:21","nodeType":"YulBlock","src":"1278:388:21","statements":[{"body":{"nativeSrc":"1324:83:21","nodeType":"YulBlock","src":"1324:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1326:77:21","nodeType":"YulIdentifier","src":"1326:77:21"},"nativeSrc":"1326:79:21","nodeType":"YulFunctionCall","src":"1326:79:21"},"nativeSrc":"1326:79:21","nodeType":"YulExpressionStatement","src":"1326:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1299:7:21","nodeType":"YulIdentifier","src":"1299:7:21"},{"name":"headStart","nativeSrc":"1308:9:21","nodeType":"YulIdentifier","src":"1308:9:21"}],"functionName":{"name":"sub","nativeSrc":"1295:3:21","nodeType":"YulIdentifier","src":"1295:3:21"},"nativeSrc":"1295:23:21","nodeType":"YulFunctionCall","src":"1295:23:21"},{"kind":"number","nativeSrc":"1320:2:21","nodeType":"YulLiteral","src":"1320:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1291:3:21","nodeType":"YulIdentifier","src":"1291:3:21"},"nativeSrc":"1291:32:21","nodeType":"YulFunctionCall","src":"1291:32:21"},"nativeSrc":"1288:119:21","nodeType":"YulIf","src":"1288:119:21"},{"nativeSrc":"1417:117:21","nodeType":"YulBlock","src":"1417:117:21","statements":[{"nativeSrc":"1432:15:21","nodeType":"YulVariableDeclaration","src":"1432:15:21","value":{"kind":"number","nativeSrc":"1446:1:21","nodeType":"YulLiteral","src":"1446:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1436:6:21","nodeType":"YulTypedName","src":"1436:6:21","type":""}]},{"nativeSrc":"1461:63:21","nodeType":"YulAssignment","src":"1461:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1496:9:21","nodeType":"YulIdentifier","src":"1496:9:21"},{"name":"offset","nativeSrc":"1507:6:21","nodeType":"YulIdentifier","src":"1507:6:21"}],"functionName":{"name":"add","nativeSrc":"1492:3:21","nodeType":"YulIdentifier","src":"1492:3:21"},"nativeSrc":"1492:22:21","nodeType":"YulFunctionCall","src":"1492:22:21"},{"name":"dataEnd","nativeSrc":"1516:7:21","nodeType":"YulIdentifier","src":"1516:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1471:20:21","nodeType":"YulIdentifier","src":"1471:20:21"},"nativeSrc":"1471:53:21","nodeType":"YulFunctionCall","src":"1471:53:21"},"variableNames":[{"name":"value0","nativeSrc":"1461:6:21","nodeType":"YulIdentifier","src":"1461:6:21"}]}]},{"nativeSrc":"1544:115:21","nodeType":"YulBlock","src":"1544:115:21","statements":[{"nativeSrc":"1559:16:21","nodeType":"YulVariableDeclaration","src":"1559:16:21","value":{"kind":"number","nativeSrc":"1573:2:21","nodeType":"YulLiteral","src":"1573:2:21","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1563:6:21","nodeType":"YulTypedName","src":"1563:6:21","type":""}]},{"nativeSrc":"1589:60:21","nodeType":"YulAssignment","src":"1589:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1621:9:21","nodeType":"YulIdentifier","src":"1621:9:21"},{"name":"offset","nativeSrc":"1632:6:21","nodeType":"YulIdentifier","src":"1632:6:21"}],"functionName":{"name":"add","nativeSrc":"1617:3:21","nodeType":"YulIdentifier","src":"1617:3:21"},"nativeSrc":"1617:22:21","nodeType":"YulFunctionCall","src":"1617:22:21"},{"name":"dataEnd","nativeSrc":"1641:7:21","nodeType":"YulIdentifier","src":"1641:7:21"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"1599:17:21","nodeType":"YulIdentifier","src":"1599:17:21"},"nativeSrc":"1599:50:21","nodeType":"YulFunctionCall","src":"1599:50:21"},"variableNames":[{"name":"value1","nativeSrc":"1589:6:21","nodeType":"YulIdentifier","src":"1589:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"1198:468:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1240:9:21","nodeType":"YulTypedName","src":"1240:9:21","type":""},{"name":"dataEnd","nativeSrc":"1251:7:21","nodeType":"YulTypedName","src":"1251:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1263:6:21","nodeType":"YulTypedName","src":"1263:6:21","type":""},{"name":"value1","nativeSrc":"1271:6:21","nodeType":"YulTypedName","src":"1271:6:21","type":""}],"src":"1198:468:21"},{"body":{"nativeSrc":"1717:32:21","nodeType":"YulBlock","src":"1717:32:21","statements":[{"nativeSrc":"1727:16:21","nodeType":"YulAssignment","src":"1727:16:21","value":{"name":"value","nativeSrc":"1738:5:21","nodeType":"YulIdentifier","src":"1738:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"1727:7:21","nodeType":"YulIdentifier","src":"1727:7:21"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1672:77:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1699:5:21","nodeType":"YulTypedName","src":"1699:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1709:7:21","nodeType":"YulTypedName","src":"1709:7:21","type":""}],"src":"1672:77:21"},{"body":{"nativeSrc":"1798:79:21","nodeType":"YulBlock","src":"1798:79:21","statements":[{"body":{"nativeSrc":"1855:16:21","nodeType":"YulBlock","src":"1855:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1864:1:21","nodeType":"YulLiteral","src":"1864:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1867:1:21","nodeType":"YulLiteral","src":"1867:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1857:6:21","nodeType":"YulIdentifier","src":"1857:6:21"},"nativeSrc":"1857:12:21","nodeType":"YulFunctionCall","src":"1857:12:21"},"nativeSrc":"1857:12:21","nodeType":"YulExpressionStatement","src":"1857:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1821:5:21","nodeType":"YulIdentifier","src":"1821:5:21"},{"arguments":[{"name":"value","nativeSrc":"1846:5:21","nodeType":"YulIdentifier","src":"1846:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1828:17:21","nodeType":"YulIdentifier","src":"1828:17:21"},"nativeSrc":"1828:24:21","nodeType":"YulFunctionCall","src":"1828:24:21"}],"functionName":{"name":"eq","nativeSrc":"1818:2:21","nodeType":"YulIdentifier","src":"1818:2:21"},"nativeSrc":"1818:35:21","nodeType":"YulFunctionCall","src":"1818:35:21"}],"functionName":{"name":"iszero","nativeSrc":"1811:6:21","nodeType":"YulIdentifier","src":"1811:6:21"},"nativeSrc":"1811:43:21","nodeType":"YulFunctionCall","src":"1811:43:21"},"nativeSrc":"1808:63:21","nodeType":"YulIf","src":"1808:63:21"}]},"name":"validator_revert_t_uint256","nativeSrc":"1755:122:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1791:5:21","nodeType":"YulTypedName","src":"1791:5:21","type":""}],"src":"1755:122:21"},{"body":{"nativeSrc":"1935:87:21","nodeType":"YulBlock","src":"1935:87:21","statements":[{"nativeSrc":"1945:29:21","nodeType":"YulAssignment","src":"1945:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"1967:6:21","nodeType":"YulIdentifier","src":"1967:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"1954:12:21","nodeType":"YulIdentifier","src":"1954:12:21"},"nativeSrc":"1954:20:21","nodeType":"YulFunctionCall","src":"1954:20:21"},"variableNames":[{"name":"value","nativeSrc":"1945:5:21","nodeType":"YulIdentifier","src":"1945:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2010:5:21","nodeType":"YulIdentifier","src":"2010:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1983:26:21","nodeType":"YulIdentifier","src":"1983:26:21"},"nativeSrc":"1983:33:21","nodeType":"YulFunctionCall","src":"1983:33:21"},"nativeSrc":"1983:33:21","nodeType":"YulExpressionStatement","src":"1983:33:21"}]},"name":"abi_decode_t_uint256","nativeSrc":"1883:139:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1913:6:21","nodeType":"YulTypedName","src":"1913:6:21","type":""},{"name":"end","nativeSrc":"1921:3:21","nodeType":"YulTypedName","src":"1921:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1929:5:21","nodeType":"YulTypedName","src":"1929:5:21","type":""}],"src":"1883:139:21"},{"body":{"nativeSrc":"2111:391:21","nodeType":"YulBlock","src":"2111:391:21","statements":[{"body":{"nativeSrc":"2157:83:21","nodeType":"YulBlock","src":"2157:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2159:77:21","nodeType":"YulIdentifier","src":"2159:77:21"},"nativeSrc":"2159:79:21","nodeType":"YulFunctionCall","src":"2159:79:21"},"nativeSrc":"2159:79:21","nodeType":"YulExpressionStatement","src":"2159:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2132:7:21","nodeType":"YulIdentifier","src":"2132:7:21"},{"name":"headStart","nativeSrc":"2141:9:21","nodeType":"YulIdentifier","src":"2141:9:21"}],"functionName":{"name":"sub","nativeSrc":"2128:3:21","nodeType":"YulIdentifier","src":"2128:3:21"},"nativeSrc":"2128:23:21","nodeType":"YulFunctionCall","src":"2128:23:21"},{"kind":"number","nativeSrc":"2153:2:21","nodeType":"YulLiteral","src":"2153:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2124:3:21","nodeType":"YulIdentifier","src":"2124:3:21"},"nativeSrc":"2124:32:21","nodeType":"YulFunctionCall","src":"2124:32:21"},"nativeSrc":"2121:119:21","nodeType":"YulIf","src":"2121:119:21"},{"nativeSrc":"2250:117:21","nodeType":"YulBlock","src":"2250:117:21","statements":[{"nativeSrc":"2265:15:21","nodeType":"YulVariableDeclaration","src":"2265:15:21","value":{"kind":"number","nativeSrc":"2279:1:21","nodeType":"YulLiteral","src":"2279:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2269:6:21","nodeType":"YulTypedName","src":"2269:6:21","type":""}]},{"nativeSrc":"2294:63:21","nodeType":"YulAssignment","src":"2294:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2329:9:21","nodeType":"YulIdentifier","src":"2329:9:21"},{"name":"offset","nativeSrc":"2340:6:21","nodeType":"YulIdentifier","src":"2340:6:21"}],"functionName":{"name":"add","nativeSrc":"2325:3:21","nodeType":"YulIdentifier","src":"2325:3:21"},"nativeSrc":"2325:22:21","nodeType":"YulFunctionCall","src":"2325:22:21"},{"name":"dataEnd","nativeSrc":"2349:7:21","nodeType":"YulIdentifier","src":"2349:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2304:20:21","nodeType":"YulIdentifier","src":"2304:20:21"},"nativeSrc":"2304:53:21","nodeType":"YulFunctionCall","src":"2304:53:21"},"variableNames":[{"name":"value0","nativeSrc":"2294:6:21","nodeType":"YulIdentifier","src":"2294:6:21"}]}]},{"nativeSrc":"2377:118:21","nodeType":"YulBlock","src":"2377:118:21","statements":[{"nativeSrc":"2392:16:21","nodeType":"YulVariableDeclaration","src":"2392:16:21","value":{"kind":"number","nativeSrc":"2406:2:21","nodeType":"YulLiteral","src":"2406:2:21","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2396:6:21","nodeType":"YulTypedName","src":"2396:6:21","type":""}]},{"nativeSrc":"2422:63:21","nodeType":"YulAssignment","src":"2422:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2457:9:21","nodeType":"YulIdentifier","src":"2457:9:21"},{"name":"offset","nativeSrc":"2468:6:21","nodeType":"YulIdentifier","src":"2468:6:21"}],"functionName":{"name":"add","nativeSrc":"2453:3:21","nodeType":"YulIdentifier","src":"2453:3:21"},"nativeSrc":"2453:22:21","nodeType":"YulFunctionCall","src":"2453:22:21"},{"name":"dataEnd","nativeSrc":"2477:7:21","nodeType":"YulIdentifier","src":"2477:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2432:20:21","nodeType":"YulIdentifier","src":"2432:20:21"},"nativeSrc":"2432:53:21","nodeType":"YulFunctionCall","src":"2432:53:21"},"variableNames":[{"name":"value1","nativeSrc":"2422:6:21","nodeType":"YulIdentifier","src":"2422:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2028:474:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2073:9:21","nodeType":"YulTypedName","src":"2073:9:21","type":""},{"name":"dataEnd","nativeSrc":"2084:7:21","nodeType":"YulTypedName","src":"2084:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2096:6:21","nodeType":"YulTypedName","src":"2096:6:21","type":""},{"name":"value1","nativeSrc":"2104:6:21","nodeType":"YulTypedName","src":"2104:6:21","type":""}],"src":"2028:474:21"},{"body":{"nativeSrc":"2567:50:21","nodeType":"YulBlock","src":"2567:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2584:3:21","nodeType":"YulIdentifier","src":"2584:3:21"},{"arguments":[{"name":"value","nativeSrc":"2604:5:21","nodeType":"YulIdentifier","src":"2604:5:21"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"2589:14:21","nodeType":"YulIdentifier","src":"2589:14:21"},"nativeSrc":"2589:21:21","nodeType":"YulFunctionCall","src":"2589:21:21"}],"functionName":{"name":"mstore","nativeSrc":"2577:6:21","nodeType":"YulIdentifier","src":"2577:6:21"},"nativeSrc":"2577:34:21","nodeType":"YulFunctionCall","src":"2577:34:21"},"nativeSrc":"2577:34:21","nodeType":"YulExpressionStatement","src":"2577:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"2508:109:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2555:5:21","nodeType":"YulTypedName","src":"2555:5:21","type":""},{"name":"pos","nativeSrc":"2562:3:21","nodeType":"YulTypedName","src":"2562:3:21","type":""}],"src":"2508:109:21"},{"body":{"nativeSrc":"2715:118:21","nodeType":"YulBlock","src":"2715:118:21","statements":[{"nativeSrc":"2725:26:21","nodeType":"YulAssignment","src":"2725:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2737:9:21","nodeType":"YulIdentifier","src":"2737:9:21"},{"kind":"number","nativeSrc":"2748:2:21","nodeType":"YulLiteral","src":"2748:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2733:3:21","nodeType":"YulIdentifier","src":"2733:3:21"},"nativeSrc":"2733:18:21","nodeType":"YulFunctionCall","src":"2733:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2725:4:21","nodeType":"YulIdentifier","src":"2725:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2799:6:21","nodeType":"YulIdentifier","src":"2799:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"2812:9:21","nodeType":"YulIdentifier","src":"2812:9:21"},{"kind":"number","nativeSrc":"2823:1:21","nodeType":"YulLiteral","src":"2823:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2808:3:21","nodeType":"YulIdentifier","src":"2808:3:21"},"nativeSrc":"2808:17:21","nodeType":"YulFunctionCall","src":"2808:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"2761:37:21","nodeType":"YulIdentifier","src":"2761:37:21"},"nativeSrc":"2761:65:21","nodeType":"YulFunctionCall","src":"2761:65:21"},"nativeSrc":"2761:65:21","nodeType":"YulExpressionStatement","src":"2761:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"2623:210:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2687:9:21","nodeType":"YulTypedName","src":"2687:9:21","type":""},{"name":"value0","nativeSrc":"2699:6:21","nodeType":"YulTypedName","src":"2699:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2710:4:21","nodeType":"YulTypedName","src":"2710:4:21","type":""}],"src":"2623:210:21"},{"body":{"nativeSrc":"2905:263:21","nodeType":"YulBlock","src":"2905:263:21","statements":[{"body":{"nativeSrc":"2951:83:21","nodeType":"YulBlock","src":"2951:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2953:77:21","nodeType":"YulIdentifier","src":"2953:77:21"},"nativeSrc":"2953:79:21","nodeType":"YulFunctionCall","src":"2953:79:21"},"nativeSrc":"2953:79:21","nodeType":"YulExpressionStatement","src":"2953:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2926:7:21","nodeType":"YulIdentifier","src":"2926:7:21"},{"name":"headStart","nativeSrc":"2935:9:21","nodeType":"YulIdentifier","src":"2935:9:21"}],"functionName":{"name":"sub","nativeSrc":"2922:3:21","nodeType":"YulIdentifier","src":"2922:3:21"},"nativeSrc":"2922:23:21","nodeType":"YulFunctionCall","src":"2922:23:21"},{"kind":"number","nativeSrc":"2947:2:21","nodeType":"YulLiteral","src":"2947:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2918:3:21","nodeType":"YulIdentifier","src":"2918:3:21"},"nativeSrc":"2918:32:21","nodeType":"YulFunctionCall","src":"2918:32:21"},"nativeSrc":"2915:119:21","nodeType":"YulIf","src":"2915:119:21"},{"nativeSrc":"3044:117:21","nodeType":"YulBlock","src":"3044:117:21","statements":[{"nativeSrc":"3059:15:21","nodeType":"YulVariableDeclaration","src":"3059:15:21","value":{"kind":"number","nativeSrc":"3073:1:21","nodeType":"YulLiteral","src":"3073:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3063:6:21","nodeType":"YulTypedName","src":"3063:6:21","type":""}]},{"nativeSrc":"3088:63:21","nodeType":"YulAssignment","src":"3088:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3123:9:21","nodeType":"YulIdentifier","src":"3123:9:21"},{"name":"offset","nativeSrc":"3134:6:21","nodeType":"YulIdentifier","src":"3134:6:21"}],"functionName":{"name":"add","nativeSrc":"3119:3:21","nodeType":"YulIdentifier","src":"3119:3:21"},"nativeSrc":"3119:22:21","nodeType":"YulFunctionCall","src":"3119:22:21"},{"name":"dataEnd","nativeSrc":"3143:7:21","nodeType":"YulIdentifier","src":"3143:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3098:20:21","nodeType":"YulIdentifier","src":"3098:20:21"},"nativeSrc":"3098:53:21","nodeType":"YulFunctionCall","src":"3098:53:21"},"variableNames":[{"name":"value0","nativeSrc":"3088:6:21","nodeType":"YulIdentifier","src":"3088:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2839:329:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2875:9:21","nodeType":"YulTypedName","src":"2875:9:21","type":""},{"name":"dataEnd","nativeSrc":"2886:7:21","nodeType":"YulTypedName","src":"2886:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2898:6:21","nodeType":"YulTypedName","src":"2898:6:21","type":""}],"src":"2839:329:21"},{"body":{"nativeSrc":"3233:40:21","nodeType":"YulBlock","src":"3233:40:21","statements":[{"nativeSrc":"3244:22:21","nodeType":"YulAssignment","src":"3244:22:21","value":{"arguments":[{"name":"value","nativeSrc":"3260:5:21","nodeType":"YulIdentifier","src":"3260:5:21"}],"functionName":{"name":"mload","nativeSrc":"3254:5:21","nodeType":"YulIdentifier","src":"3254:5:21"},"nativeSrc":"3254:12:21","nodeType":"YulFunctionCall","src":"3254:12:21"},"variableNames":[{"name":"length","nativeSrc":"3244:6:21","nodeType":"YulIdentifier","src":"3244:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"3174:99:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3216:5:21","nodeType":"YulTypedName","src":"3216:5:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3226:6:21","nodeType":"YulTypedName","src":"3226:6:21","type":""}],"src":"3174:99:21"},{"body":{"nativeSrc":"3375:73:21","nodeType":"YulBlock","src":"3375:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3392:3:21","nodeType":"YulIdentifier","src":"3392:3:21"},{"name":"length","nativeSrc":"3397:6:21","nodeType":"YulIdentifier","src":"3397:6:21"}],"functionName":{"name":"mstore","nativeSrc":"3385:6:21","nodeType":"YulIdentifier","src":"3385:6:21"},"nativeSrc":"3385:19:21","nodeType":"YulFunctionCall","src":"3385:19:21"},"nativeSrc":"3385:19:21","nodeType":"YulExpressionStatement","src":"3385:19:21"},{"nativeSrc":"3413:29:21","nodeType":"YulAssignment","src":"3413:29:21","value":{"arguments":[{"name":"pos","nativeSrc":"3432:3:21","nodeType":"YulIdentifier","src":"3432:3:21"},{"kind":"number","nativeSrc":"3437:4:21","nodeType":"YulLiteral","src":"3437:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3428:3:21","nodeType":"YulIdentifier","src":"3428:3:21"},"nativeSrc":"3428:14:21","nodeType":"YulFunctionCall","src":"3428:14:21"},"variableNames":[{"name":"updated_pos","nativeSrc":"3413:11:21","nodeType":"YulIdentifier","src":"3413:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3279:169:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3347:3:21","nodeType":"YulTypedName","src":"3347:3:21","type":""},{"name":"length","nativeSrc":"3352:6:21","nodeType":"YulTypedName","src":"3352:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"3363:11:21","nodeType":"YulTypedName","src":"3363:11:21","type":""}],"src":"3279:169:21"},{"body":{"nativeSrc":"3516:184:21","nodeType":"YulBlock","src":"3516:184:21","statements":[{"nativeSrc":"3526:10:21","nodeType":"YulVariableDeclaration","src":"3526:10:21","value":{"kind":"number","nativeSrc":"3535:1:21","nodeType":"YulLiteral","src":"3535:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3530:1:21","nodeType":"YulTypedName","src":"3530:1:21","type":""}]},{"body":{"nativeSrc":"3595:63:21","nodeType":"YulBlock","src":"3595:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3620:3:21","nodeType":"YulIdentifier","src":"3620:3:21"},{"name":"i","nativeSrc":"3625:1:21","nodeType":"YulIdentifier","src":"3625:1:21"}],"functionName":{"name":"add","nativeSrc":"3616:3:21","nodeType":"YulIdentifier","src":"3616:3:21"},"nativeSrc":"3616:11:21","nodeType":"YulFunctionCall","src":"3616:11:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3639:3:21","nodeType":"YulIdentifier","src":"3639:3:21"},{"name":"i","nativeSrc":"3644:1:21","nodeType":"YulIdentifier","src":"3644:1:21"}],"functionName":{"name":"add","nativeSrc":"3635:3:21","nodeType":"YulIdentifier","src":"3635:3:21"},"nativeSrc":"3635:11:21","nodeType":"YulFunctionCall","src":"3635:11:21"}],"functionName":{"name":"mload","nativeSrc":"3629:5:21","nodeType":"YulIdentifier","src":"3629:5:21"},"nativeSrc":"3629:18:21","nodeType":"YulFunctionCall","src":"3629:18:21"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:21","nodeType":"YulIdentifier","src":"3609:6:21"},"nativeSrc":"3609:39:21","nodeType":"YulFunctionCall","src":"3609:39:21"},"nativeSrc":"3609:39:21","nodeType":"YulExpressionStatement","src":"3609:39:21"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3556:1:21","nodeType":"YulIdentifier","src":"3556:1:21"},{"name":"length","nativeSrc":"3559:6:21","nodeType":"YulIdentifier","src":"3559:6:21"}],"functionName":{"name":"lt","nativeSrc":"3553:2:21","nodeType":"YulIdentifier","src":"3553:2:21"},"nativeSrc":"3553:13:21","nodeType":"YulFunctionCall","src":"3553:13:21"},"nativeSrc":"3545:113:21","nodeType":"YulForLoop","post":{"nativeSrc":"3567:19:21","nodeType":"YulBlock","src":"3567:19:21","statements":[{"nativeSrc":"3569:15:21","nodeType":"YulAssignment","src":"3569:15:21","value":{"arguments":[{"name":"i","nativeSrc":"3578:1:21","nodeType":"YulIdentifier","src":"3578:1:21"},{"kind":"number","nativeSrc":"3581:2:21","nodeType":"YulLiteral","src":"3581:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3574:3:21","nodeType":"YulIdentifier","src":"3574:3:21"},"nativeSrc":"3574:10:21","nodeType":"YulFunctionCall","src":"3574:10:21"},"variableNames":[{"name":"i","nativeSrc":"3569:1:21","nodeType":"YulIdentifier","src":"3569:1:21"}]}]},"pre":{"nativeSrc":"3549:3:21","nodeType":"YulBlock","src":"3549:3:21","statements":[]},"src":"3545:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3678:3:21","nodeType":"YulIdentifier","src":"3678:3:21"},{"name":"length","nativeSrc":"3683:6:21","nodeType":"YulIdentifier","src":"3683:6:21"}],"functionName":{"name":"add","nativeSrc":"3674:3:21","nodeType":"YulIdentifier","src":"3674:3:21"},"nativeSrc":"3674:16:21","nodeType":"YulFunctionCall","src":"3674:16:21"},{"kind":"number","nativeSrc":"3692:1:21","nodeType":"YulLiteral","src":"3692:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3667:6:21","nodeType":"YulIdentifier","src":"3667:6:21"},"nativeSrc":"3667:27:21","nodeType":"YulFunctionCall","src":"3667:27:21"},"nativeSrc":"3667:27:21","nodeType":"YulExpressionStatement","src":"3667:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3454:246:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3498:3:21","nodeType":"YulTypedName","src":"3498:3:21","type":""},{"name":"dst","nativeSrc":"3503:3:21","nodeType":"YulTypedName","src":"3503:3:21","type":""},{"name":"length","nativeSrc":"3508:6:21","nodeType":"YulTypedName","src":"3508:6:21","type":""}],"src":"3454:246:21"},{"body":{"nativeSrc":"3754:54:21","nodeType":"YulBlock","src":"3754:54:21","statements":[{"nativeSrc":"3764:38:21","nodeType":"YulAssignment","src":"3764:38:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3782:5:21","nodeType":"YulIdentifier","src":"3782:5:21"},{"kind":"number","nativeSrc":"3789:2:21","nodeType":"YulLiteral","src":"3789:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3778:3:21","nodeType":"YulIdentifier","src":"3778:3:21"},"nativeSrc":"3778:14:21","nodeType":"YulFunctionCall","src":"3778:14:21"},{"arguments":[{"kind":"number","nativeSrc":"3798:2:21","nodeType":"YulLiteral","src":"3798:2:21","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3794:3:21","nodeType":"YulIdentifier","src":"3794:3:21"},"nativeSrc":"3794:7:21","nodeType":"YulFunctionCall","src":"3794:7:21"}],"functionName":{"name":"and","nativeSrc":"3774:3:21","nodeType":"YulIdentifier","src":"3774:3:21"},"nativeSrc":"3774:28:21","nodeType":"YulFunctionCall","src":"3774:28:21"},"variableNames":[{"name":"result","nativeSrc":"3764:6:21","nodeType":"YulIdentifier","src":"3764:6:21"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"3706:102:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3737:5:21","nodeType":"YulTypedName","src":"3737:5:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3747:6:21","nodeType":"YulTypedName","src":"3747:6:21","type":""}],"src":"3706:102:21"},{"body":{"nativeSrc":"3906:285:21","nodeType":"YulBlock","src":"3906:285:21","statements":[{"nativeSrc":"3916:53:21","nodeType":"YulVariableDeclaration","src":"3916:53:21","value":{"arguments":[{"name":"value","nativeSrc":"3963:5:21","nodeType":"YulIdentifier","src":"3963:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3930:32:21","nodeType":"YulIdentifier","src":"3930:32:21"},"nativeSrc":"3930:39:21","nodeType":"YulFunctionCall","src":"3930:39:21"},"variables":[{"name":"length","nativeSrc":"3920:6:21","nodeType":"YulTypedName","src":"3920:6:21","type":""}]},{"nativeSrc":"3978:78:21","nodeType":"YulAssignment","src":"3978:78:21","value":{"arguments":[{"name":"pos","nativeSrc":"4044:3:21","nodeType":"YulIdentifier","src":"4044:3:21"},{"name":"length","nativeSrc":"4049:6:21","nodeType":"YulIdentifier","src":"4049:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3985:58:21","nodeType":"YulIdentifier","src":"3985:58:21"},"nativeSrc":"3985:71:21","nodeType":"YulFunctionCall","src":"3985:71:21"},"variableNames":[{"name":"pos","nativeSrc":"3978:3:21","nodeType":"YulIdentifier","src":"3978:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4104:5:21","nodeType":"YulIdentifier","src":"4104:5:21"},{"kind":"number","nativeSrc":"4111:4:21","nodeType":"YulLiteral","src":"4111:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4100:3:21","nodeType":"YulIdentifier","src":"4100:3:21"},"nativeSrc":"4100:16:21","nodeType":"YulFunctionCall","src":"4100:16:21"},{"name":"pos","nativeSrc":"4118:3:21","nodeType":"YulIdentifier","src":"4118:3:21"},{"name":"length","nativeSrc":"4123:6:21","nodeType":"YulIdentifier","src":"4123:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4065:34:21","nodeType":"YulIdentifier","src":"4065:34:21"},"nativeSrc":"4065:65:21","nodeType":"YulFunctionCall","src":"4065:65:21"},"nativeSrc":"4065:65:21","nodeType":"YulExpressionStatement","src":"4065:65:21"},{"nativeSrc":"4139:46:21","nodeType":"YulAssignment","src":"4139:46:21","value":{"arguments":[{"name":"pos","nativeSrc":"4150:3:21","nodeType":"YulIdentifier","src":"4150:3:21"},{"arguments":[{"name":"length","nativeSrc":"4177:6:21","nodeType":"YulIdentifier","src":"4177:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4155:21:21","nodeType":"YulIdentifier","src":"4155:21:21"},"nativeSrc":"4155:29:21","nodeType":"YulFunctionCall","src":"4155:29:21"}],"functionName":{"name":"add","nativeSrc":"4146:3:21","nodeType":"YulIdentifier","src":"4146:3:21"},"nativeSrc":"4146:39:21","nodeType":"YulFunctionCall","src":"4146:39:21"},"variableNames":[{"name":"end","nativeSrc":"4139:3:21","nodeType":"YulIdentifier","src":"4139:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"3814:377:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3887:5:21","nodeType":"YulTypedName","src":"3887:5:21","type":""},{"name":"pos","nativeSrc":"3894:3:21","nodeType":"YulTypedName","src":"3894:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3902:3:21","nodeType":"YulTypedName","src":"3902:3:21","type":""}],"src":"3814:377:21"},{"body":{"nativeSrc":"4315:195:21","nodeType":"YulBlock","src":"4315:195:21","statements":[{"nativeSrc":"4325:26:21","nodeType":"YulAssignment","src":"4325:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4337:9:21","nodeType":"YulIdentifier","src":"4337:9:21"},{"kind":"number","nativeSrc":"4348:2:21","nodeType":"YulLiteral","src":"4348:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4333:3:21","nodeType":"YulIdentifier","src":"4333:3:21"},"nativeSrc":"4333:18:21","nodeType":"YulFunctionCall","src":"4333:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4325:4:21","nodeType":"YulIdentifier","src":"4325:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:21","nodeType":"YulIdentifier","src":"4372:9:21"},{"kind":"number","nativeSrc":"4383:1:21","nodeType":"YulLiteral","src":"4383:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4368:3:21","nodeType":"YulIdentifier","src":"4368:3:21"},"nativeSrc":"4368:17:21","nodeType":"YulFunctionCall","src":"4368:17:21"},{"arguments":[{"name":"tail","nativeSrc":"4391:4:21","nodeType":"YulIdentifier","src":"4391:4:21"},{"name":"headStart","nativeSrc":"4397:9:21","nodeType":"YulIdentifier","src":"4397:9:21"}],"functionName":{"name":"sub","nativeSrc":"4387:3:21","nodeType":"YulIdentifier","src":"4387:3:21"},"nativeSrc":"4387:20:21","nodeType":"YulFunctionCall","src":"4387:20:21"}],"functionName":{"name":"mstore","nativeSrc":"4361:6:21","nodeType":"YulIdentifier","src":"4361:6:21"},"nativeSrc":"4361:47:21","nodeType":"YulFunctionCall","src":"4361:47:21"},"nativeSrc":"4361:47:21","nodeType":"YulExpressionStatement","src":"4361:47:21"},{"nativeSrc":"4417:86:21","nodeType":"YulAssignment","src":"4417:86:21","value":{"arguments":[{"name":"value0","nativeSrc":"4489:6:21","nodeType":"YulIdentifier","src":"4489:6:21"},{"name":"tail","nativeSrc":"4498:4:21","nodeType":"YulIdentifier","src":"4498:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"4425:63:21","nodeType":"YulIdentifier","src":"4425:63:21"},"nativeSrc":"4425:78:21","nodeType":"YulFunctionCall","src":"4425:78:21"},"variableNames":[{"name":"tail","nativeSrc":"4417:4:21","nodeType":"YulIdentifier","src":"4417:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4197:313:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4287:9:21","nodeType":"YulTypedName","src":"4287:9:21","type":""},{"name":"value0","nativeSrc":"4299:6:21","nodeType":"YulTypedName","src":"4299:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4310:4:21","nodeType":"YulTypedName","src":"4310:4:21","type":""}],"src":"4197:313:21"},{"body":{"nativeSrc":"4581:53:21","nodeType":"YulBlock","src":"4581:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4598:3:21","nodeType":"YulIdentifier","src":"4598:3:21"},{"arguments":[{"name":"value","nativeSrc":"4621:5:21","nodeType":"YulIdentifier","src":"4621:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4603:17:21","nodeType":"YulIdentifier","src":"4603:17:21"},"nativeSrc":"4603:24:21","nodeType":"YulFunctionCall","src":"4603:24:21"}],"functionName":{"name":"mstore","nativeSrc":"4591:6:21","nodeType":"YulIdentifier","src":"4591:6:21"},"nativeSrc":"4591:37:21","nodeType":"YulFunctionCall","src":"4591:37:21"},"nativeSrc":"4591:37:21","nodeType":"YulExpressionStatement","src":"4591:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4516:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4569:5:21","nodeType":"YulTypedName","src":"4569:5:21","type":""},{"name":"pos","nativeSrc":"4576:3:21","nodeType":"YulTypedName","src":"4576:3:21","type":""}],"src":"4516:118:21"},{"body":{"nativeSrc":"4738:124:21","nodeType":"YulBlock","src":"4738:124:21","statements":[{"nativeSrc":"4748:26:21","nodeType":"YulAssignment","src":"4748:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4760:9:21","nodeType":"YulIdentifier","src":"4760:9:21"},{"kind":"number","nativeSrc":"4771:2:21","nodeType":"YulLiteral","src":"4771:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4756:3:21","nodeType":"YulIdentifier","src":"4756:3:21"},"nativeSrc":"4756:18:21","nodeType":"YulFunctionCall","src":"4756:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4748:4:21","nodeType":"YulIdentifier","src":"4748:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4828:6:21","nodeType":"YulIdentifier","src":"4828:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"4841:9:21","nodeType":"YulIdentifier","src":"4841:9:21"},{"kind":"number","nativeSrc":"4852:1:21","nodeType":"YulLiteral","src":"4852:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4837:3:21","nodeType":"YulIdentifier","src":"4837:3:21"},"nativeSrc":"4837:17:21","nodeType":"YulFunctionCall","src":"4837:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4784:43:21","nodeType":"YulIdentifier","src":"4784:43:21"},"nativeSrc":"4784:71:21","nodeType":"YulFunctionCall","src":"4784:71:21"},"nativeSrc":"4784:71:21","nodeType":"YulExpressionStatement","src":"4784:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4640:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4710:9:21","nodeType":"YulTypedName","src":"4710:9:21","type":""},{"name":"value0","nativeSrc":"4722:6:21","nodeType":"YulTypedName","src":"4722:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4733:4:21","nodeType":"YulTypedName","src":"4733:4:21","type":""}],"src":"4640:222:21"},{"body":{"nativeSrc":"4913:32:21","nodeType":"YulBlock","src":"4913:32:21","statements":[{"nativeSrc":"4923:16:21","nodeType":"YulAssignment","src":"4923:16:21","value":{"name":"value","nativeSrc":"4934:5:21","nodeType":"YulIdentifier","src":"4934:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"4923:7:21","nodeType":"YulIdentifier","src":"4923:7:21"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4868:77:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4895:5:21","nodeType":"YulTypedName","src":"4895:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4905:7:21","nodeType":"YulTypedName","src":"4905:7:21","type":""}],"src":"4868:77:21"},{"body":{"nativeSrc":"4994:79:21","nodeType":"YulBlock","src":"4994:79:21","statements":[{"body":{"nativeSrc":"5051:16:21","nodeType":"YulBlock","src":"5051:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5060:1:21","nodeType":"YulLiteral","src":"5060:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5063:1:21","nodeType":"YulLiteral","src":"5063:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5053:6:21","nodeType":"YulIdentifier","src":"5053:6:21"},"nativeSrc":"5053:12:21","nodeType":"YulFunctionCall","src":"5053:12:21"},"nativeSrc":"5053:12:21","nodeType":"YulExpressionStatement","src":"5053:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5017:5:21","nodeType":"YulIdentifier","src":"5017:5:21"},{"arguments":[{"name":"value","nativeSrc":"5042:5:21","nodeType":"YulIdentifier","src":"5042:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5024:17:21","nodeType":"YulIdentifier","src":"5024:17:21"},"nativeSrc":"5024:24:21","nodeType":"YulFunctionCall","src":"5024:24:21"}],"functionName":{"name":"eq","nativeSrc":"5014:2:21","nodeType":"YulIdentifier","src":"5014:2:21"},"nativeSrc":"5014:35:21","nodeType":"YulFunctionCall","src":"5014:35:21"}],"functionName":{"name":"iszero","nativeSrc":"5007:6:21","nodeType":"YulIdentifier","src":"5007:6:21"},"nativeSrc":"5007:43:21","nodeType":"YulFunctionCall","src":"5007:43:21"},"nativeSrc":"5004:63:21","nodeType":"YulIf","src":"5004:63:21"}]},"name":"validator_revert_t_bytes32","nativeSrc":"4951:122:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4987:5:21","nodeType":"YulTypedName","src":"4987:5:21","type":""}],"src":"4951:122:21"},{"body":{"nativeSrc":"5131:87:21","nodeType":"YulBlock","src":"5131:87:21","statements":[{"nativeSrc":"5141:29:21","nodeType":"YulAssignment","src":"5141:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"5163:6:21","nodeType":"YulIdentifier","src":"5163:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"5150:12:21","nodeType":"YulIdentifier","src":"5150:12:21"},"nativeSrc":"5150:20:21","nodeType":"YulFunctionCall","src":"5150:20:21"},"variableNames":[{"name":"value","nativeSrc":"5141:5:21","nodeType":"YulIdentifier","src":"5141:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5206:5:21","nodeType":"YulIdentifier","src":"5206:5:21"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"5179:26:21","nodeType":"YulIdentifier","src":"5179:26:21"},"nativeSrc":"5179:33:21","nodeType":"YulFunctionCall","src":"5179:33:21"},"nativeSrc":"5179:33:21","nodeType":"YulExpressionStatement","src":"5179:33:21"}]},"name":"abi_decode_t_bytes32","nativeSrc":"5079:139:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5109:6:21","nodeType":"YulTypedName","src":"5109:6:21","type":""},{"name":"end","nativeSrc":"5117:3:21","nodeType":"YulTypedName","src":"5117:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5125:5:21","nodeType":"YulTypedName","src":"5125:5:21","type":""}],"src":"5079:139:21"},{"body":{"nativeSrc":"5290:263:21","nodeType":"YulBlock","src":"5290:263:21","statements":[{"body":{"nativeSrc":"5336:83:21","nodeType":"YulBlock","src":"5336:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5338:77:21","nodeType":"YulIdentifier","src":"5338:77:21"},"nativeSrc":"5338:79:21","nodeType":"YulFunctionCall","src":"5338:79:21"},"nativeSrc":"5338:79:21","nodeType":"YulExpressionStatement","src":"5338:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5311:7:21","nodeType":"YulIdentifier","src":"5311:7:21"},{"name":"headStart","nativeSrc":"5320:9:21","nodeType":"YulIdentifier","src":"5320:9:21"}],"functionName":{"name":"sub","nativeSrc":"5307:3:21","nodeType":"YulIdentifier","src":"5307:3:21"},"nativeSrc":"5307:23:21","nodeType":"YulFunctionCall","src":"5307:23:21"},{"kind":"number","nativeSrc":"5332:2:21","nodeType":"YulLiteral","src":"5332:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5303:3:21","nodeType":"YulIdentifier","src":"5303:3:21"},"nativeSrc":"5303:32:21","nodeType":"YulFunctionCall","src":"5303:32:21"},"nativeSrc":"5300:119:21","nodeType":"YulIf","src":"5300:119:21"},{"nativeSrc":"5429:117:21","nodeType":"YulBlock","src":"5429:117:21","statements":[{"nativeSrc":"5444:15:21","nodeType":"YulVariableDeclaration","src":"5444:15:21","value":{"kind":"number","nativeSrc":"5458:1:21","nodeType":"YulLiteral","src":"5458:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5448:6:21","nodeType":"YulTypedName","src":"5448:6:21","type":""}]},{"nativeSrc":"5473:63:21","nodeType":"YulAssignment","src":"5473:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5508:9:21","nodeType":"YulIdentifier","src":"5508:9:21"},{"name":"offset","nativeSrc":"5519:6:21","nodeType":"YulIdentifier","src":"5519:6:21"}],"functionName":{"name":"add","nativeSrc":"5504:3:21","nodeType":"YulIdentifier","src":"5504:3:21"},"nativeSrc":"5504:22:21","nodeType":"YulFunctionCall","src":"5504:22:21"},{"name":"dataEnd","nativeSrc":"5528:7:21","nodeType":"YulIdentifier","src":"5528:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"5483:20:21","nodeType":"YulIdentifier","src":"5483:20:21"},"nativeSrc":"5483:53:21","nodeType":"YulFunctionCall","src":"5483:53:21"},"variableNames":[{"name":"value0","nativeSrc":"5473:6:21","nodeType":"YulIdentifier","src":"5473:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"5224:329:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5260:9:21","nodeType":"YulTypedName","src":"5260:9:21","type":""},{"name":"dataEnd","nativeSrc":"5271:7:21","nodeType":"YulTypedName","src":"5271:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5283:6:21","nodeType":"YulTypedName","src":"5283:6:21","type":""}],"src":"5224:329:21"},{"body":{"nativeSrc":"5614:53:21","nodeType":"YulBlock","src":"5614:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5631:3:21","nodeType":"YulIdentifier","src":"5631:3:21"},{"arguments":[{"name":"value","nativeSrc":"5654:5:21","nodeType":"YulIdentifier","src":"5654:5:21"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5636:17:21","nodeType":"YulIdentifier","src":"5636:17:21"},"nativeSrc":"5636:24:21","nodeType":"YulFunctionCall","src":"5636:24:21"}],"functionName":{"name":"mstore","nativeSrc":"5624:6:21","nodeType":"YulIdentifier","src":"5624:6:21"},"nativeSrc":"5624:37:21","nodeType":"YulFunctionCall","src":"5624:37:21"},"nativeSrc":"5624:37:21","nodeType":"YulExpressionStatement","src":"5624:37:21"}]},"name":"abi_encode_t_address_to_t_address","nativeSrc":"5559:108:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5602:5:21","nodeType":"YulTypedName","src":"5602:5:21","type":""},{"name":"pos","nativeSrc":"5609:3:21","nodeType":"YulTypedName","src":"5609:3:21","type":""}],"src":"5559:108:21"},{"body":{"nativeSrc":"5728:53:21","nodeType":"YulBlock","src":"5728:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5745:3:21","nodeType":"YulIdentifier","src":"5745:3:21"},{"arguments":[{"name":"value","nativeSrc":"5768:5:21","nodeType":"YulIdentifier","src":"5768:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5750:17:21","nodeType":"YulIdentifier","src":"5750:17:21"},"nativeSrc":"5750:24:21","nodeType":"YulFunctionCall","src":"5750:24:21"}],"functionName":{"name":"mstore","nativeSrc":"5738:6:21","nodeType":"YulIdentifier","src":"5738:6:21"},"nativeSrc":"5738:37:21","nodeType":"YulFunctionCall","src":"5738:37:21"},"nativeSrc":"5738:37:21","nodeType":"YulExpressionStatement","src":"5738:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"5673:108:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5716:5:21","nodeType":"YulTypedName","src":"5716:5:21","type":""},{"name":"pos","nativeSrc":"5723:3:21","nodeType":"YulTypedName","src":"5723:3:21","type":""}],"src":"5673:108:21"},{"body":{"nativeSrc":"5815:152:21","nodeType":"YulBlock","src":"5815:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5832:1:21","nodeType":"YulLiteral","src":"5832:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5835:77:21","nodeType":"YulLiteral","src":"5835:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5825:6:21","nodeType":"YulIdentifier","src":"5825:6:21"},"nativeSrc":"5825:88:21","nodeType":"YulFunctionCall","src":"5825:88:21"},"nativeSrc":"5825:88:21","nodeType":"YulExpressionStatement","src":"5825:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5929:1:21","nodeType":"YulLiteral","src":"5929:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"5932:4:21","nodeType":"YulLiteral","src":"5932:4:21","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"5922:6:21","nodeType":"YulIdentifier","src":"5922:6:21"},"nativeSrc":"5922:15:21","nodeType":"YulFunctionCall","src":"5922:15:21"},"nativeSrc":"5922:15:21","nodeType":"YulExpressionStatement","src":"5922:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5953:1:21","nodeType":"YulLiteral","src":"5953:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5956:4:21","nodeType":"YulLiteral","src":"5956:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5946:6:21","nodeType":"YulIdentifier","src":"5946:6:21"},"nativeSrc":"5946:15:21","nodeType":"YulFunctionCall","src":"5946:15:21"},"nativeSrc":"5946:15:21","nodeType":"YulExpressionStatement","src":"5946:15:21"}]},"name":"panic_error_0x21","nativeSrc":"5787:180:21","nodeType":"YulFunctionDefinition","src":"5787:180:21"},{"body":{"nativeSrc":"6027:62:21","nodeType":"YulBlock","src":"6027:62:21","statements":[{"body":{"nativeSrc":"6061:22:21","nodeType":"YulBlock","src":"6061:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nativeSrc":"6063:16:21","nodeType":"YulIdentifier","src":"6063:16:21"},"nativeSrc":"6063:18:21","nodeType":"YulFunctionCall","src":"6063:18:21"},"nativeSrc":"6063:18:21","nodeType":"YulExpressionStatement","src":"6063:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6050:5:21","nodeType":"YulIdentifier","src":"6050:5:21"},{"kind":"number","nativeSrc":"6057:1:21","nodeType":"YulLiteral","src":"6057:1:21","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"6047:2:21","nodeType":"YulIdentifier","src":"6047:2:21"},"nativeSrc":"6047:12:21","nodeType":"YulFunctionCall","src":"6047:12:21"}],"functionName":{"name":"iszero","nativeSrc":"6040:6:21","nodeType":"YulIdentifier","src":"6040:6:21"},"nativeSrc":"6040:20:21","nodeType":"YulFunctionCall","src":"6040:20:21"},"nativeSrc":"6037:46:21","nodeType":"YulIf","src":"6037:46:21"}]},"name":"validator_assert_t_enum$_Status_$7191","nativeSrc":"5973:116:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6020:5:21","nodeType":"YulTypedName","src":"6020:5:21","type":""}],"src":"5973:116:21"},{"body":{"nativeSrc":"6151:77:21","nodeType":"YulBlock","src":"6151:77:21","statements":[{"nativeSrc":"6161:16:21","nodeType":"YulAssignment","src":"6161:16:21","value":{"name":"value","nativeSrc":"6172:5:21","nodeType":"YulIdentifier","src":"6172:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"6161:7:21","nodeType":"YulIdentifier","src":"6161:7:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6216:5:21","nodeType":"YulIdentifier","src":"6216:5:21"}],"functionName":{"name":"validator_assert_t_enum$_Status_$7191","nativeSrc":"6178:37:21","nodeType":"YulIdentifier","src":"6178:37:21"},"nativeSrc":"6178:44:21","nodeType":"YulFunctionCall","src":"6178:44:21"},"nativeSrc":"6178:44:21","nodeType":"YulExpressionStatement","src":"6178:44:21"}]},"name":"cleanup_t_enum$_Status_$7191","nativeSrc":"6095:133:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6133:5:21","nodeType":"YulTypedName","src":"6133:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6143:7:21","nodeType":"YulTypedName","src":"6143:7:21","type":""}],"src":"6095:133:21"},{"body":{"nativeSrc":"6303:64:21","nodeType":"YulBlock","src":"6303:64:21","statements":[{"nativeSrc":"6313:48:21","nodeType":"YulAssignment","src":"6313:48:21","value":{"arguments":[{"name":"value","nativeSrc":"6355:5:21","nodeType":"YulIdentifier","src":"6355:5:21"}],"functionName":{"name":"cleanup_t_enum$_Status_$7191","nativeSrc":"6326:28:21","nodeType":"YulIdentifier","src":"6326:28:21"},"nativeSrc":"6326:35:21","nodeType":"YulFunctionCall","src":"6326:35:21"},"variableNames":[{"name":"converted","nativeSrc":"6313:9:21","nodeType":"YulIdentifier","src":"6313:9:21"}]}]},"name":"convert_t_enum$_Status_$7191_to_t_uint8","nativeSrc":"6234:133:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6283:5:21","nodeType":"YulTypedName","src":"6283:5:21","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"6293:9:21","nodeType":"YulTypedName","src":"6293:9:21","type":""}],"src":"6234:133:21"},{"body":{"nativeSrc":"6437:75:21","nodeType":"YulBlock","src":"6437:75:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6454:3:21","nodeType":"YulIdentifier","src":"6454:3:21"},{"arguments":[{"name":"value","nativeSrc":"6499:5:21","nodeType":"YulIdentifier","src":"6499:5:21"}],"functionName":{"name":"convert_t_enum$_Status_$7191_to_t_uint8","nativeSrc":"6459:39:21","nodeType":"YulIdentifier","src":"6459:39:21"},"nativeSrc":"6459:46:21","nodeType":"YulFunctionCall","src":"6459:46:21"}],"functionName":{"name":"mstore","nativeSrc":"6447:6:21","nodeType":"YulIdentifier","src":"6447:6:21"},"nativeSrc":"6447:59:21","nodeType":"YulFunctionCall","src":"6447:59:21"},"nativeSrc":"6447:59:21","nodeType":"YulExpressionStatement","src":"6447:59:21"}]},"name":"abi_encode_t_enum$_Status_$7191_to_t_uint8","nativeSrc":"6373:139:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6425:5:21","nodeType":"YulTypedName","src":"6425:5:21","type":""},{"name":"pos","nativeSrc":"6432:3:21","nodeType":"YulTypedName","src":"6432:3:21","type":""}],"src":"6373:139:21"},{"body":{"nativeSrc":"6706:948:21","nodeType":"YulBlock","src":"6706:948:21","statements":[{"nativeSrc":"6716:26:21","nodeType":"YulVariableDeclaration","src":"6716:26:21","value":{"arguments":[{"name":"pos","nativeSrc":"6732:3:21","nodeType":"YulIdentifier","src":"6732:3:21"},{"kind":"number","nativeSrc":"6737:4:21","nodeType":"YulLiteral","src":"6737:4:21","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"6728:3:21","nodeType":"YulIdentifier","src":"6728:3:21"},"nativeSrc":"6728:14:21","nodeType":"YulFunctionCall","src":"6728:14:21"},"variables":[{"name":"tail","nativeSrc":"6720:4:21","nodeType":"YulTypedName","src":"6720:4:21","type":""}]},{"nativeSrc":"6752:164:21","nodeType":"YulBlock","src":"6752:164:21","statements":[{"nativeSrc":"6787:43:21","nodeType":"YulVariableDeclaration","src":"6787:43:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6817:5:21","nodeType":"YulIdentifier","src":"6817:5:21"},{"kind":"number","nativeSrc":"6824:4:21","nodeType":"YulLiteral","src":"6824:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"6813:3:21","nodeType":"YulIdentifier","src":"6813:3:21"},"nativeSrc":"6813:16:21","nodeType":"YulFunctionCall","src":"6813:16:21"}],"functionName":{"name":"mload","nativeSrc":"6807:5:21","nodeType":"YulIdentifier","src":"6807:5:21"},"nativeSrc":"6807:23:21","nodeType":"YulFunctionCall","src":"6807:23:21"},"variables":[{"name":"memberValue0","nativeSrc":"6791:12:21","nodeType":"YulTypedName","src":"6791:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"6877:12:21","nodeType":"YulIdentifier","src":"6877:12:21"},{"arguments":[{"name":"pos","nativeSrc":"6895:3:21","nodeType":"YulIdentifier","src":"6895:3:21"},{"kind":"number","nativeSrc":"6900:4:21","nodeType":"YulLiteral","src":"6900:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"6891:3:21","nodeType":"YulIdentifier","src":"6891:3:21"},"nativeSrc":"6891:14:21","nodeType":"YulFunctionCall","src":"6891:14:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"6843:33:21","nodeType":"YulIdentifier","src":"6843:33:21"},"nativeSrc":"6843:63:21","nodeType":"YulFunctionCall","src":"6843:63:21"},"nativeSrc":"6843:63:21","nodeType":"YulExpressionStatement","src":"6843:63:21"}]},{"nativeSrc":"6926:174:21","nodeType":"YulBlock","src":"6926:174:21","statements":[{"nativeSrc":"6971:43:21","nodeType":"YulVariableDeclaration","src":"6971:43:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7001:5:21","nodeType":"YulIdentifier","src":"7001:5:21"},{"kind":"number","nativeSrc":"7008:4:21","nodeType":"YulLiteral","src":"7008:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6997:3:21","nodeType":"YulIdentifier","src":"6997:3:21"},"nativeSrc":"6997:16:21","nodeType":"YulFunctionCall","src":"6997:16:21"}],"functionName":{"name":"mload","nativeSrc":"6991:5:21","nodeType":"YulIdentifier","src":"6991:5:21"},"nativeSrc":"6991:23:21","nodeType":"YulFunctionCall","src":"6991:23:21"},"variables":[{"name":"memberValue0","nativeSrc":"6975:12:21","nodeType":"YulTypedName","src":"6975:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7061:12:21","nodeType":"YulIdentifier","src":"7061:12:21"},{"arguments":[{"name":"pos","nativeSrc":"7079:3:21","nodeType":"YulIdentifier","src":"7079:3:21"},{"kind":"number","nativeSrc":"7084:4:21","nodeType":"YulLiteral","src":"7084:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7075:3:21","nodeType":"YulIdentifier","src":"7075:3:21"},"nativeSrc":"7075:14:21","nodeType":"YulFunctionCall","src":"7075:14:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7027:33:21","nodeType":"YulIdentifier","src":"7027:33:21"},"nativeSrc":"7027:63:21","nodeType":"YulFunctionCall","src":"7027:63:21"},"nativeSrc":"7027:63:21","nodeType":"YulExpressionStatement","src":"7027:63:21"}]},{"nativeSrc":"7110:173:21","nodeType":"YulBlock","src":"7110:173:21","statements":[{"nativeSrc":"7154:43:21","nodeType":"YulVariableDeclaration","src":"7154:43:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7184:5:21","nodeType":"YulIdentifier","src":"7184:5:21"},{"kind":"number","nativeSrc":"7191:4:21","nodeType":"YulLiteral","src":"7191:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"7180:3:21","nodeType":"YulIdentifier","src":"7180:3:21"},"nativeSrc":"7180:16:21","nodeType":"YulFunctionCall","src":"7180:16:21"}],"functionName":{"name":"mload","nativeSrc":"7174:5:21","nodeType":"YulIdentifier","src":"7174:5:21"},"nativeSrc":"7174:23:21","nodeType":"YulFunctionCall","src":"7174:23:21"},"variables":[{"name":"memberValue0","nativeSrc":"7158:12:21","nodeType":"YulTypedName","src":"7158:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7244:12:21","nodeType":"YulIdentifier","src":"7244:12:21"},{"arguments":[{"name":"pos","nativeSrc":"7262:3:21","nodeType":"YulIdentifier","src":"7262:3:21"},{"kind":"number","nativeSrc":"7267:4:21","nodeType":"YulLiteral","src":"7267:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"7258:3:21","nodeType":"YulIdentifier","src":"7258:3:21"},"nativeSrc":"7258:14:21","nodeType":"YulFunctionCall","src":"7258:14:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7210:33:21","nodeType":"YulIdentifier","src":"7210:33:21"},"nativeSrc":"7210:63:21","nodeType":"YulFunctionCall","src":"7210:63:21"},"nativeSrc":"7210:63:21","nodeType":"YulExpressionStatement","src":"7210:63:21"}]},{"nativeSrc":"7293:169:21","nodeType":"YulBlock","src":"7293:169:21","statements":[{"nativeSrc":"7333:43:21","nodeType":"YulVariableDeclaration","src":"7333:43:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7363:5:21","nodeType":"YulIdentifier","src":"7363:5:21"},{"kind":"number","nativeSrc":"7370:4:21","nodeType":"YulLiteral","src":"7370:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"7359:3:21","nodeType":"YulIdentifier","src":"7359:3:21"},"nativeSrc":"7359:16:21","nodeType":"YulFunctionCall","src":"7359:16:21"}],"functionName":{"name":"mload","nativeSrc":"7353:5:21","nodeType":"YulIdentifier","src":"7353:5:21"},"nativeSrc":"7353:23:21","nodeType":"YulFunctionCall","src":"7353:23:21"},"variables":[{"name":"memberValue0","nativeSrc":"7337:12:21","nodeType":"YulTypedName","src":"7337:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7423:12:21","nodeType":"YulIdentifier","src":"7423:12:21"},{"arguments":[{"name":"pos","nativeSrc":"7441:3:21","nodeType":"YulIdentifier","src":"7441:3:21"},{"kind":"number","nativeSrc":"7446:4:21","nodeType":"YulLiteral","src":"7446:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"7437:3:21","nodeType":"YulIdentifier","src":"7437:3:21"},"nativeSrc":"7437:14:21","nodeType":"YulFunctionCall","src":"7437:14:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"7389:33:21","nodeType":"YulIdentifier","src":"7389:33:21"},"nativeSrc":"7389:63:21","nodeType":"YulFunctionCall","src":"7389:63:21"},"nativeSrc":"7389:63:21","nodeType":"YulExpressionStatement","src":"7389:63:21"}]},{"nativeSrc":"7472:175:21","nodeType":"YulBlock","src":"7472:175:21","statements":[{"nativeSrc":"7509:43:21","nodeType":"YulVariableDeclaration","src":"7509:43:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7539:5:21","nodeType":"YulIdentifier","src":"7539:5:21"},{"kind":"number","nativeSrc":"7546:4:21","nodeType":"YulLiteral","src":"7546:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"7535:3:21","nodeType":"YulIdentifier","src":"7535:3:21"},"nativeSrc":"7535:16:21","nodeType":"YulFunctionCall","src":"7535:16:21"}],"functionName":{"name":"mload","nativeSrc":"7529:5:21","nodeType":"YulIdentifier","src":"7529:5:21"},"nativeSrc":"7529:23:21","nodeType":"YulFunctionCall","src":"7529:23:21"},"variables":[{"name":"memberValue0","nativeSrc":"7513:12:21","nodeType":"YulTypedName","src":"7513:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7608:12:21","nodeType":"YulIdentifier","src":"7608:12:21"},{"arguments":[{"name":"pos","nativeSrc":"7626:3:21","nodeType":"YulIdentifier","src":"7626:3:21"},{"kind":"number","nativeSrc":"7631:4:21","nodeType":"YulLiteral","src":"7631:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"7622:3:21","nodeType":"YulIdentifier","src":"7622:3:21"},"nativeSrc":"7622:14:21","nodeType":"YulFunctionCall","src":"7622:14:21"}],"functionName":{"name":"abi_encode_t_enum$_Status_$7191_to_t_uint8","nativeSrc":"7565:42:21","nodeType":"YulIdentifier","src":"7565:42:21"},"nativeSrc":"7565:72:21","nodeType":"YulFunctionCall","src":"7565:72:21"},"nativeSrc":"7565:72:21","nodeType":"YulExpressionStatement","src":"7565:72:21"}]}]},"name":"abi_encode_t_struct$_Transfer_$7203_memory_ptr_to_t_struct$_Transfer_$7203_memory_ptr_fromStack","nativeSrc":"6588:1066:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6693:5:21","nodeType":"YulTypedName","src":"6693:5:21","type":""},{"name":"pos","nativeSrc":"6700:3:21","nodeType":"YulTypedName","src":"6700:3:21","type":""}],"src":"6588:1066:21"},{"body":{"nativeSrc":"7810:177:21","nodeType":"YulBlock","src":"7810:177:21","statements":[{"nativeSrc":"7820:27:21","nodeType":"YulAssignment","src":"7820:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7832:9:21","nodeType":"YulIdentifier","src":"7832:9:21"},{"kind":"number","nativeSrc":"7843:3:21","nodeType":"YulLiteral","src":"7843:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7828:3:21","nodeType":"YulIdentifier","src":"7828:3:21"},"nativeSrc":"7828:19:21","nodeType":"YulFunctionCall","src":"7828:19:21"},"variableNames":[{"name":"tail","nativeSrc":"7820:4:21","nodeType":"YulIdentifier","src":"7820:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7953:6:21","nodeType":"YulIdentifier","src":"7953:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"7966:9:21","nodeType":"YulIdentifier","src":"7966:9:21"},{"kind":"number","nativeSrc":"7977:1:21","nodeType":"YulLiteral","src":"7977:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7962:3:21","nodeType":"YulIdentifier","src":"7962:3:21"},"nativeSrc":"7962:17:21","nodeType":"YulFunctionCall","src":"7962:17:21"}],"functionName":{"name":"abi_encode_t_struct$_Transfer_$7203_memory_ptr_to_t_struct$_Transfer_$7203_memory_ptr_fromStack","nativeSrc":"7857:95:21","nodeType":"YulIdentifier","src":"7857:95:21"},"nativeSrc":"7857:123:21","nodeType":"YulFunctionCall","src":"7857:123:21"},"nativeSrc":"7857:123:21","nodeType":"YulExpressionStatement","src":"7857:123:21"}]},"name":"abi_encode_tuple_t_struct$_Transfer_$7203_memory_ptr__to_t_struct$_Transfer_$7203_memory_ptr__fromStack_reversed","nativeSrc":"7660:327:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7782:9:21","nodeType":"YulTypedName","src":"7782:9:21","type":""},{"name":"value0","nativeSrc":"7794:6:21","nodeType":"YulTypedName","src":"7794:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7805:4:21","nodeType":"YulTypedName","src":"7805:4:21","type":""}],"src":"7660:327:21"},{"body":{"nativeSrc":"8058:53:21","nodeType":"YulBlock","src":"8058:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8075:3:21","nodeType":"YulIdentifier","src":"8075:3:21"},{"arguments":[{"name":"value","nativeSrc":"8098:5:21","nodeType":"YulIdentifier","src":"8098:5:21"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"8080:17:21","nodeType":"YulIdentifier","src":"8080:17:21"},"nativeSrc":"8080:24:21","nodeType":"YulFunctionCall","src":"8080:24:21"}],"functionName":{"name":"mstore","nativeSrc":"8068:6:21","nodeType":"YulIdentifier","src":"8068:6:21"},"nativeSrc":"8068:37:21","nodeType":"YulFunctionCall","src":"8068:37:21"},"nativeSrc":"8068:37:21","nodeType":"YulExpressionStatement","src":"8068:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7993:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8046:5:21","nodeType":"YulTypedName","src":"8046:5:21","type":""},{"name":"pos","nativeSrc":"8053:3:21","nodeType":"YulTypedName","src":"8053:3:21","type":""}],"src":"7993:118:21"},{"body":{"nativeSrc":"8191:75:21","nodeType":"YulBlock","src":"8191:75:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8208:3:21","nodeType":"YulIdentifier","src":"8208:3:21"},{"arguments":[{"name":"value","nativeSrc":"8253:5:21","nodeType":"YulIdentifier","src":"8253:5:21"}],"functionName":{"name":"convert_t_enum$_Status_$7191_to_t_uint8","nativeSrc":"8213:39:21","nodeType":"YulIdentifier","src":"8213:39:21"},"nativeSrc":"8213:46:21","nodeType":"YulFunctionCall","src":"8213:46:21"}],"functionName":{"name":"mstore","nativeSrc":"8201:6:21","nodeType":"YulIdentifier","src":"8201:6:21"},"nativeSrc":"8201:59:21","nodeType":"YulFunctionCall","src":"8201:59:21"},"nativeSrc":"8201:59:21","nodeType":"YulExpressionStatement","src":"8201:59:21"}]},"name":"abi_encode_t_enum$_Status_$7191_to_t_uint8_fromStack","nativeSrc":"8117:149:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8179:5:21","nodeType":"YulTypedName","src":"8179:5:21","type":""},{"name":"pos","nativeSrc":"8186:3:21","nodeType":"YulTypedName","src":"8186:3:21","type":""}],"src":"8117:149:21"},{"body":{"nativeSrc":"8491:463:21","nodeType":"YulBlock","src":"8491:463:21","statements":[{"nativeSrc":"8501:27:21","nodeType":"YulAssignment","src":"8501:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8513:9:21","nodeType":"YulIdentifier","src":"8513:9:21"},{"kind":"number","nativeSrc":"8524:3:21","nodeType":"YulLiteral","src":"8524:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8509:3:21","nodeType":"YulIdentifier","src":"8509:3:21"},"nativeSrc":"8509:19:21","nodeType":"YulFunctionCall","src":"8509:19:21"},"variableNames":[{"name":"tail","nativeSrc":"8501:4:21","nodeType":"YulIdentifier","src":"8501:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8582:6:21","nodeType":"YulIdentifier","src":"8582:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8595:9:21","nodeType":"YulIdentifier","src":"8595:9:21"},{"kind":"number","nativeSrc":"8606:1:21","nodeType":"YulLiteral","src":"8606:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8591:3:21","nodeType":"YulIdentifier","src":"8591:3:21"},"nativeSrc":"8591:17:21","nodeType":"YulFunctionCall","src":"8591:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8538:43:21","nodeType":"YulIdentifier","src":"8538:43:21"},"nativeSrc":"8538:71:21","nodeType":"YulFunctionCall","src":"8538:71:21"},"nativeSrc":"8538:71:21","nodeType":"YulExpressionStatement","src":"8538:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8663:6:21","nodeType":"YulIdentifier","src":"8663:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8676:9:21","nodeType":"YulIdentifier","src":"8676:9:21"},{"kind":"number","nativeSrc":"8687:2:21","nodeType":"YulLiteral","src":"8687:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8672:3:21","nodeType":"YulIdentifier","src":"8672:3:21"},"nativeSrc":"8672:18:21","nodeType":"YulFunctionCall","src":"8672:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8619:43:21","nodeType":"YulIdentifier","src":"8619:43:21"},"nativeSrc":"8619:72:21","nodeType":"YulFunctionCall","src":"8619:72:21"},"nativeSrc":"8619:72:21","nodeType":"YulExpressionStatement","src":"8619:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"8745:6:21","nodeType":"YulIdentifier","src":"8745:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8758:9:21","nodeType":"YulIdentifier","src":"8758:9:21"},{"kind":"number","nativeSrc":"8769:2:21","nodeType":"YulLiteral","src":"8769:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8754:3:21","nodeType":"YulIdentifier","src":"8754:3:21"},"nativeSrc":"8754:18:21","nodeType":"YulFunctionCall","src":"8754:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8701:43:21","nodeType":"YulIdentifier","src":"8701:43:21"},"nativeSrc":"8701:72:21","nodeType":"YulFunctionCall","src":"8701:72:21"},"nativeSrc":"8701:72:21","nodeType":"YulExpressionStatement","src":"8701:72:21"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8827:6:21","nodeType":"YulIdentifier","src":"8827:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8840:9:21","nodeType":"YulIdentifier","src":"8840:9:21"},{"kind":"number","nativeSrc":"8851:2:21","nodeType":"YulLiteral","src":"8851:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8836:3:21","nodeType":"YulIdentifier","src":"8836:3:21"},"nativeSrc":"8836:18:21","nodeType":"YulFunctionCall","src":"8836:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8783:43:21","nodeType":"YulIdentifier","src":"8783:43:21"},"nativeSrc":"8783:72:21","nodeType":"YulFunctionCall","src":"8783:72:21"},"nativeSrc":"8783:72:21","nodeType":"YulExpressionStatement","src":"8783:72:21"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"8918:6:21","nodeType":"YulIdentifier","src":"8918:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"8931:9:21","nodeType":"YulIdentifier","src":"8931:9:21"},{"kind":"number","nativeSrc":"8942:3:21","nodeType":"YulLiteral","src":"8942:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8927:3:21","nodeType":"YulIdentifier","src":"8927:3:21"},"nativeSrc":"8927:19:21","nodeType":"YulFunctionCall","src":"8927:19:21"}],"functionName":{"name":"abi_encode_t_enum$_Status_$7191_to_t_uint8_fromStack","nativeSrc":"8865:52:21","nodeType":"YulIdentifier","src":"8865:52:21"},"nativeSrc":"8865:82:21","nodeType":"YulFunctionCall","src":"8865:82:21"},"nativeSrc":"8865:82:21","nodeType":"YulExpressionStatement","src":"8865:82:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_enum$_Status_$7191__to_t_address_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed","nativeSrc":"8272:682:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8431:9:21","nodeType":"YulTypedName","src":"8431:9:21","type":""},{"name":"value4","nativeSrc":"8443:6:21","nodeType":"YulTypedName","src":"8443:6:21","type":""},{"name":"value3","nativeSrc":"8451:6:21","nodeType":"YulTypedName","src":"8451:6:21","type":""},{"name":"value2","nativeSrc":"8459:6:21","nodeType":"YulTypedName","src":"8459:6:21","type":""},{"name":"value1","nativeSrc":"8467:6:21","nodeType":"YulTypedName","src":"8467:6:21","type":""},{"name":"value0","nativeSrc":"8475:6:21","nodeType":"YulTypedName","src":"8475:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8486:4:21","nodeType":"YulTypedName","src":"8486:4:21","type":""}],"src":"8272:682:21"},{"body":{"nativeSrc":"9043:391:21","nodeType":"YulBlock","src":"9043:391:21","statements":[{"body":{"nativeSrc":"9089:83:21","nodeType":"YulBlock","src":"9089:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9091:77:21","nodeType":"YulIdentifier","src":"9091:77:21"},"nativeSrc":"9091:79:21","nodeType":"YulFunctionCall","src":"9091:79:21"},"nativeSrc":"9091:79:21","nodeType":"YulExpressionStatement","src":"9091:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9064:7:21","nodeType":"YulIdentifier","src":"9064:7:21"},{"name":"headStart","nativeSrc":"9073:9:21","nodeType":"YulIdentifier","src":"9073:9:21"}],"functionName":{"name":"sub","nativeSrc":"9060:3:21","nodeType":"YulIdentifier","src":"9060:3:21"},"nativeSrc":"9060:23:21","nodeType":"YulFunctionCall","src":"9060:23:21"},{"kind":"number","nativeSrc":"9085:2:21","nodeType":"YulLiteral","src":"9085:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9056:3:21","nodeType":"YulIdentifier","src":"9056:3:21"},"nativeSrc":"9056:32:21","nodeType":"YulFunctionCall","src":"9056:32:21"},"nativeSrc":"9053:119:21","nodeType":"YulIf","src":"9053:119:21"},{"nativeSrc":"9182:117:21","nodeType":"YulBlock","src":"9182:117:21","statements":[{"nativeSrc":"9197:15:21","nodeType":"YulVariableDeclaration","src":"9197:15:21","value":{"kind":"number","nativeSrc":"9211:1:21","nodeType":"YulLiteral","src":"9211:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9201:6:21","nodeType":"YulTypedName","src":"9201:6:21","type":""}]},{"nativeSrc":"9226:63:21","nodeType":"YulAssignment","src":"9226:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9261:9:21","nodeType":"YulIdentifier","src":"9261:9:21"},{"name":"offset","nativeSrc":"9272:6:21","nodeType":"YulIdentifier","src":"9272:6:21"}],"functionName":{"name":"add","nativeSrc":"9257:3:21","nodeType":"YulIdentifier","src":"9257:3:21"},"nativeSrc":"9257:22:21","nodeType":"YulFunctionCall","src":"9257:22:21"},{"name":"dataEnd","nativeSrc":"9281:7:21","nodeType":"YulIdentifier","src":"9281:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9236:20:21","nodeType":"YulIdentifier","src":"9236:20:21"},"nativeSrc":"9236:53:21","nodeType":"YulFunctionCall","src":"9236:53:21"},"variableNames":[{"name":"value0","nativeSrc":"9226:6:21","nodeType":"YulIdentifier","src":"9226:6:21"}]}]},{"nativeSrc":"9309:118:21","nodeType":"YulBlock","src":"9309:118:21","statements":[{"nativeSrc":"9324:16:21","nodeType":"YulVariableDeclaration","src":"9324:16:21","value":{"kind":"number","nativeSrc":"9338:2:21","nodeType":"YulLiteral","src":"9338:2:21","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9328:6:21","nodeType":"YulTypedName","src":"9328:6:21","type":""}]},{"nativeSrc":"9354:63:21","nodeType":"YulAssignment","src":"9354:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9389:9:21","nodeType":"YulIdentifier","src":"9389:9:21"},{"name":"offset","nativeSrc":"9400:6:21","nodeType":"YulIdentifier","src":"9400:6:21"}],"functionName":{"name":"add","nativeSrc":"9385:3:21","nodeType":"YulIdentifier","src":"9385:3:21"},"nativeSrc":"9385:22:21","nodeType":"YulFunctionCall","src":"9385:22:21"},{"name":"dataEnd","nativeSrc":"9409:7:21","nodeType":"YulIdentifier","src":"9409:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9364:20:21","nodeType":"YulIdentifier","src":"9364:20:21"},"nativeSrc":"9364:53:21","nodeType":"YulFunctionCall","src":"9364:53:21"},"variableNames":[{"name":"value1","nativeSrc":"9354:6:21","nodeType":"YulIdentifier","src":"9354:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nativeSrc":"8960:474:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9005:9:21","nodeType":"YulTypedName","src":"9005:9:21","type":""},{"name":"dataEnd","nativeSrc":"9016:7:21","nodeType":"YulTypedName","src":"9016:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9028:6:21","nodeType":"YulTypedName","src":"9028:6:21","type":""},{"name":"value1","nativeSrc":"9036:6:21","nodeType":"YulTypedName","src":"9036:6:21","type":""}],"src":"8960:474:21"},{"body":{"nativeSrc":"9566:206:21","nodeType":"YulBlock","src":"9566:206:21","statements":[{"nativeSrc":"9576:26:21","nodeType":"YulAssignment","src":"9576:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9588:9:21","nodeType":"YulIdentifier","src":"9588:9:21"},{"kind":"number","nativeSrc":"9599:2:21","nodeType":"YulLiteral","src":"9599:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9584:3:21","nodeType":"YulIdentifier","src":"9584:3:21"},"nativeSrc":"9584:18:21","nodeType":"YulFunctionCall","src":"9584:18:21"},"variableNames":[{"name":"tail","nativeSrc":"9576:4:21","nodeType":"YulIdentifier","src":"9576:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9656:6:21","nodeType":"YulIdentifier","src":"9656:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"9669:9:21","nodeType":"YulIdentifier","src":"9669:9:21"},{"kind":"number","nativeSrc":"9680:1:21","nodeType":"YulLiteral","src":"9680:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9665:3:21","nodeType":"YulIdentifier","src":"9665:3:21"},"nativeSrc":"9665:17:21","nodeType":"YulFunctionCall","src":"9665:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9612:43:21","nodeType":"YulIdentifier","src":"9612:43:21"},"nativeSrc":"9612:71:21","nodeType":"YulFunctionCall","src":"9612:71:21"},"nativeSrc":"9612:71:21","nodeType":"YulExpressionStatement","src":"9612:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"9737:6:21","nodeType":"YulIdentifier","src":"9737:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"9750:9:21","nodeType":"YulIdentifier","src":"9750:9:21"},{"kind":"number","nativeSrc":"9761:2:21","nodeType":"YulLiteral","src":"9761:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9746:3:21","nodeType":"YulIdentifier","src":"9746:3:21"},"nativeSrc":"9746:18:21","nodeType":"YulFunctionCall","src":"9746:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9693:43:21","nodeType":"YulIdentifier","src":"9693:43:21"},"nativeSrc":"9693:72:21","nodeType":"YulFunctionCall","src":"9693:72:21"},"nativeSrc":"9693:72:21","nodeType":"YulExpressionStatement","src":"9693:72:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"9440:332:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9530:9:21","nodeType":"YulTypedName","src":"9530:9:21","type":""},{"name":"value1","nativeSrc":"9542:6:21","nodeType":"YulTypedName","src":"9542:6:21","type":""},{"name":"value0","nativeSrc":"9550:6:21","nodeType":"YulTypedName","src":"9550:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9561:4:21","nodeType":"YulTypedName","src":"9561:4:21","type":""}],"src":"9440:332:21"},{"body":{"nativeSrc":"9876:124:21","nodeType":"YulBlock","src":"9876:124:21","statements":[{"nativeSrc":"9886:26:21","nodeType":"YulAssignment","src":"9886:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9898:9:21","nodeType":"YulIdentifier","src":"9898:9:21"},{"kind":"number","nativeSrc":"9909:2:21","nodeType":"YulLiteral","src":"9909:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9894:3:21","nodeType":"YulIdentifier","src":"9894:3:21"},"nativeSrc":"9894:18:21","nodeType":"YulFunctionCall","src":"9894:18:21"},"variableNames":[{"name":"tail","nativeSrc":"9886:4:21","nodeType":"YulIdentifier","src":"9886:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9966:6:21","nodeType":"YulIdentifier","src":"9966:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"9979:9:21","nodeType":"YulIdentifier","src":"9979:9:21"},{"kind":"number","nativeSrc":"9990:1:21","nodeType":"YulLiteral","src":"9990:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9975:3:21","nodeType":"YulIdentifier","src":"9975:3:21"},"nativeSrc":"9975:17:21","nodeType":"YulFunctionCall","src":"9975:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9922:43:21","nodeType":"YulIdentifier","src":"9922:43:21"},"nativeSrc":"9922:71:21","nodeType":"YulFunctionCall","src":"9922:71:21"},"nativeSrc":"9922:71:21","nodeType":"YulExpressionStatement","src":"9922:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"9778:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9848:9:21","nodeType":"YulTypedName","src":"9848:9:21","type":""},{"name":"value0","nativeSrc":"9860:6:21","nodeType":"YulTypedName","src":"9860:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9871:4:21","nodeType":"YulTypedName","src":"9871:4:21","type":""}],"src":"9778:222:21"},{"body":{"nativeSrc":"10095:28:21","nodeType":"YulBlock","src":"10095:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10112:1:21","nodeType":"YulLiteral","src":"10112:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10115:1:21","nodeType":"YulLiteral","src":"10115:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10105:6:21","nodeType":"YulIdentifier","src":"10105:6:21"},"nativeSrc":"10105:12:21","nodeType":"YulFunctionCall","src":"10105:12:21"},"nativeSrc":"10105:12:21","nodeType":"YulExpressionStatement","src":"10105:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"10006:117:21","nodeType":"YulFunctionDefinition","src":"10006:117:21"},{"body":{"nativeSrc":"10218:28:21","nodeType":"YulBlock","src":"10218:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10235:1:21","nodeType":"YulLiteral","src":"10235:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10238:1:21","nodeType":"YulLiteral","src":"10238:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10228:6:21","nodeType":"YulIdentifier","src":"10228:6:21"},"nativeSrc":"10228:12:21","nodeType":"YulFunctionCall","src":"10228:12:21"},"nativeSrc":"10228:12:21","nodeType":"YulExpressionStatement","src":"10228:12:21"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"10129:117:21","nodeType":"YulFunctionDefinition","src":"10129:117:21"},{"body":{"nativeSrc":"10280:152:21","nodeType":"YulBlock","src":"10280:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10297:1:21","nodeType":"YulLiteral","src":"10297:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10300:77:21","nodeType":"YulLiteral","src":"10300:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10290:6:21","nodeType":"YulIdentifier","src":"10290:6:21"},"nativeSrc":"10290:88:21","nodeType":"YulFunctionCall","src":"10290:88:21"},"nativeSrc":"10290:88:21","nodeType":"YulExpressionStatement","src":"10290:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10394:1:21","nodeType":"YulLiteral","src":"10394:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"10397:4:21","nodeType":"YulLiteral","src":"10397:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"10387:6:21","nodeType":"YulIdentifier","src":"10387:6:21"},"nativeSrc":"10387:15:21","nodeType":"YulFunctionCall","src":"10387:15:21"},"nativeSrc":"10387:15:21","nodeType":"YulExpressionStatement","src":"10387:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10418:1:21","nodeType":"YulLiteral","src":"10418:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"10421:4:21","nodeType":"YulLiteral","src":"10421:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10411:6:21","nodeType":"YulIdentifier","src":"10411:6:21"},"nativeSrc":"10411:15:21","nodeType":"YulFunctionCall","src":"10411:15:21"},"nativeSrc":"10411:15:21","nodeType":"YulExpressionStatement","src":"10411:15:21"}]},"name":"panic_error_0x41","nativeSrc":"10252:180:21","nodeType":"YulFunctionDefinition","src":"10252:180:21"},{"body":{"nativeSrc":"10481:238:21","nodeType":"YulBlock","src":"10481:238:21","statements":[{"nativeSrc":"10491:58:21","nodeType":"YulVariableDeclaration","src":"10491:58:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"10513:6:21","nodeType":"YulIdentifier","src":"10513:6:21"},{"arguments":[{"name":"size","nativeSrc":"10543:4:21","nodeType":"YulIdentifier","src":"10543:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10521:21:21","nodeType":"YulIdentifier","src":"10521:21:21"},"nativeSrc":"10521:27:21","nodeType":"YulFunctionCall","src":"10521:27:21"}],"functionName":{"name":"add","nativeSrc":"10509:3:21","nodeType":"YulIdentifier","src":"10509:3:21"},"nativeSrc":"10509:40:21","nodeType":"YulFunctionCall","src":"10509:40:21"},"variables":[{"name":"newFreePtr","nativeSrc":"10495:10:21","nodeType":"YulTypedName","src":"10495:10:21","type":""}]},{"body":{"nativeSrc":"10660:22:21","nodeType":"YulBlock","src":"10660:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"10662:16:21","nodeType":"YulIdentifier","src":"10662:16:21"},"nativeSrc":"10662:18:21","nodeType":"YulFunctionCall","src":"10662:18:21"},"nativeSrc":"10662:18:21","nodeType":"YulExpressionStatement","src":"10662:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"10603:10:21","nodeType":"YulIdentifier","src":"10603:10:21"},{"kind":"number","nativeSrc":"10615:18:21","nodeType":"YulLiteral","src":"10615:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10600:2:21","nodeType":"YulIdentifier","src":"10600:2:21"},"nativeSrc":"10600:34:21","nodeType":"YulFunctionCall","src":"10600:34:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"10639:10:21","nodeType":"YulIdentifier","src":"10639:10:21"},{"name":"memPtr","nativeSrc":"10651:6:21","nodeType":"YulIdentifier","src":"10651:6:21"}],"functionName":{"name":"lt","nativeSrc":"10636:2:21","nodeType":"YulIdentifier","src":"10636:2:21"},"nativeSrc":"10636:22:21","nodeType":"YulFunctionCall","src":"10636:22:21"}],"functionName":{"name":"or","nativeSrc":"10597:2:21","nodeType":"YulIdentifier","src":"10597:2:21"},"nativeSrc":"10597:62:21","nodeType":"YulFunctionCall","src":"10597:62:21"},"nativeSrc":"10594:88:21","nodeType":"YulIf","src":"10594:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10698:2:21","nodeType":"YulLiteral","src":"10698:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"10702:10:21","nodeType":"YulIdentifier","src":"10702:10:21"}],"functionName":{"name":"mstore","nativeSrc":"10691:6:21","nodeType":"YulIdentifier","src":"10691:6:21"},"nativeSrc":"10691:22:21","nodeType":"YulFunctionCall","src":"10691:22:21"},"nativeSrc":"10691:22:21","nodeType":"YulExpressionStatement","src":"10691:22:21"}]},"name":"finalize_allocation","nativeSrc":"10438:281:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10467:6:21","nodeType":"YulTypedName","src":"10467:6:21","type":""},{"name":"size","nativeSrc":"10475:4:21","nodeType":"YulTypedName","src":"10475:4:21","type":""}],"src":"10438:281:21"},{"body":{"nativeSrc":"10766:88:21","nodeType":"YulBlock","src":"10766:88:21","statements":[{"nativeSrc":"10776:30:21","nodeType":"YulAssignment","src":"10776:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"10786:18:21","nodeType":"YulIdentifier","src":"10786:18:21"},"nativeSrc":"10786:20:21","nodeType":"YulFunctionCall","src":"10786:20:21"},"variableNames":[{"name":"memPtr","nativeSrc":"10776:6:21","nodeType":"YulIdentifier","src":"10776:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"10835:6:21","nodeType":"YulIdentifier","src":"10835:6:21"},{"name":"size","nativeSrc":"10843:4:21","nodeType":"YulIdentifier","src":"10843:4:21"}],"functionName":{"name":"finalize_allocation","nativeSrc":"10815:19:21","nodeType":"YulIdentifier","src":"10815:19:21"},"nativeSrc":"10815:33:21","nodeType":"YulFunctionCall","src":"10815:33:21"},"nativeSrc":"10815:33:21","nodeType":"YulExpressionStatement","src":"10815:33:21"}]},"name":"allocate_memory","nativeSrc":"10725:129:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"10750:4:21","nodeType":"YulTypedName","src":"10750:4:21","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"10759:6:21","nodeType":"YulTypedName","src":"10759:6:21","type":""}],"src":"10725:129:21"},{"body":{"nativeSrc":"10926:241:21","nodeType":"YulBlock","src":"10926:241:21","statements":[{"body":{"nativeSrc":"11031:22:21","nodeType":"YulBlock","src":"11031:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"11033:16:21","nodeType":"YulIdentifier","src":"11033:16:21"},"nativeSrc":"11033:18:21","nodeType":"YulFunctionCall","src":"11033:18:21"},"nativeSrc":"11033:18:21","nodeType":"YulExpressionStatement","src":"11033:18:21"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"11003:6:21","nodeType":"YulIdentifier","src":"11003:6:21"},{"kind":"number","nativeSrc":"11011:18:21","nodeType":"YulLiteral","src":"11011:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11000:2:21","nodeType":"YulIdentifier","src":"11000:2:21"},"nativeSrc":"11000:30:21","nodeType":"YulFunctionCall","src":"11000:30:21"},"nativeSrc":"10997:56:21","nodeType":"YulIf","src":"10997:56:21"},{"nativeSrc":"11063:37:21","nodeType":"YulAssignment","src":"11063:37:21","value":{"arguments":[{"name":"length","nativeSrc":"11093:6:21","nodeType":"YulIdentifier","src":"11093:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"11071:21:21","nodeType":"YulIdentifier","src":"11071:21:21"},"nativeSrc":"11071:29:21","nodeType":"YulFunctionCall","src":"11071:29:21"},"variableNames":[{"name":"size","nativeSrc":"11063:4:21","nodeType":"YulIdentifier","src":"11063:4:21"}]},{"nativeSrc":"11137:23:21","nodeType":"YulAssignment","src":"11137:23:21","value":{"arguments":[{"name":"size","nativeSrc":"11149:4:21","nodeType":"YulIdentifier","src":"11149:4:21"},{"kind":"number","nativeSrc":"11155:4:21","nodeType":"YulLiteral","src":"11155:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11145:3:21","nodeType":"YulIdentifier","src":"11145:3:21"},"nativeSrc":"11145:15:21","nodeType":"YulFunctionCall","src":"11145:15:21"},"variableNames":[{"name":"size","nativeSrc":"11137:4:21","nodeType":"YulIdentifier","src":"11137:4:21"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"10860:307:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"10910:6:21","nodeType":"YulTypedName","src":"10910:6:21","type":""}],"returnVariables":[{"name":"size","nativeSrc":"10921:4:21","nodeType":"YulTypedName","src":"10921:4:21","type":""}],"src":"10860:307:21"},{"body":{"nativeSrc":"11237:82:21","nodeType":"YulBlock","src":"11237:82:21","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"11260:3:21","nodeType":"YulIdentifier","src":"11260:3:21"},{"name":"src","nativeSrc":"11265:3:21","nodeType":"YulIdentifier","src":"11265:3:21"},{"name":"length","nativeSrc":"11270:6:21","nodeType":"YulIdentifier","src":"11270:6:21"}],"functionName":{"name":"calldatacopy","nativeSrc":"11247:12:21","nodeType":"YulIdentifier","src":"11247:12:21"},"nativeSrc":"11247:30:21","nodeType":"YulFunctionCall","src":"11247:30:21"},"nativeSrc":"11247:30:21","nodeType":"YulExpressionStatement","src":"11247:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"11297:3:21","nodeType":"YulIdentifier","src":"11297:3:21"},{"name":"length","nativeSrc":"11302:6:21","nodeType":"YulIdentifier","src":"11302:6:21"}],"functionName":{"name":"add","nativeSrc":"11293:3:21","nodeType":"YulIdentifier","src":"11293:3:21"},"nativeSrc":"11293:16:21","nodeType":"YulFunctionCall","src":"11293:16:21"},{"kind":"number","nativeSrc":"11311:1:21","nodeType":"YulLiteral","src":"11311:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"11286:6:21","nodeType":"YulIdentifier","src":"11286:6:21"},"nativeSrc":"11286:27:21","nodeType":"YulFunctionCall","src":"11286:27:21"},"nativeSrc":"11286:27:21","nodeType":"YulExpressionStatement","src":"11286:27:21"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"11173:146:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"11219:3:21","nodeType":"YulTypedName","src":"11219:3:21","type":""},{"name":"dst","nativeSrc":"11224:3:21","nodeType":"YulTypedName","src":"11224:3:21","type":""},{"name":"length","nativeSrc":"11229:6:21","nodeType":"YulTypedName","src":"11229:6:21","type":""}],"src":"11173:146:21"},{"body":{"nativeSrc":"11408:340:21","nodeType":"YulBlock","src":"11408:340:21","statements":[{"nativeSrc":"11418:74:21","nodeType":"YulAssignment","src":"11418:74:21","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"11484:6:21","nodeType":"YulIdentifier","src":"11484:6:21"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"11443:40:21","nodeType":"YulIdentifier","src":"11443:40:21"},"nativeSrc":"11443:48:21","nodeType":"YulFunctionCall","src":"11443:48:21"}],"functionName":{"name":"allocate_memory","nativeSrc":"11427:15:21","nodeType":"YulIdentifier","src":"11427:15:21"},"nativeSrc":"11427:65:21","nodeType":"YulFunctionCall","src":"11427:65:21"},"variableNames":[{"name":"array","nativeSrc":"11418:5:21","nodeType":"YulIdentifier","src":"11418:5:21"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"11508:5:21","nodeType":"YulIdentifier","src":"11508:5:21"},{"name":"length","nativeSrc":"11515:6:21","nodeType":"YulIdentifier","src":"11515:6:21"}],"functionName":{"name":"mstore","nativeSrc":"11501:6:21","nodeType":"YulIdentifier","src":"11501:6:21"},"nativeSrc":"11501:21:21","nodeType":"YulFunctionCall","src":"11501:21:21"},"nativeSrc":"11501:21:21","nodeType":"YulExpressionStatement","src":"11501:21:21"},{"nativeSrc":"11531:27:21","nodeType":"YulVariableDeclaration","src":"11531:27:21","value":{"arguments":[{"name":"array","nativeSrc":"11546:5:21","nodeType":"YulIdentifier","src":"11546:5:21"},{"kind":"number","nativeSrc":"11553:4:21","nodeType":"YulLiteral","src":"11553:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11542:3:21","nodeType":"YulIdentifier","src":"11542:3:21"},"nativeSrc":"11542:16:21","nodeType":"YulFunctionCall","src":"11542:16:21"},"variables":[{"name":"dst","nativeSrc":"11535:3:21","nodeType":"YulTypedName","src":"11535:3:21","type":""}]},{"body":{"nativeSrc":"11596:83:21","nodeType":"YulBlock","src":"11596:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"11598:77:21","nodeType":"YulIdentifier","src":"11598:77:21"},"nativeSrc":"11598:79:21","nodeType":"YulFunctionCall","src":"11598:79:21"},"nativeSrc":"11598:79:21","nodeType":"YulExpressionStatement","src":"11598:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11577:3:21","nodeType":"YulIdentifier","src":"11577:3:21"},{"name":"length","nativeSrc":"11582:6:21","nodeType":"YulIdentifier","src":"11582:6:21"}],"functionName":{"name":"add","nativeSrc":"11573:3:21","nodeType":"YulIdentifier","src":"11573:3:21"},"nativeSrc":"11573:16:21","nodeType":"YulFunctionCall","src":"11573:16:21"},{"name":"end","nativeSrc":"11591:3:21","nodeType":"YulIdentifier","src":"11591:3:21"}],"functionName":{"name":"gt","nativeSrc":"11570:2:21","nodeType":"YulIdentifier","src":"11570:2:21"},"nativeSrc":"11570:25:21","nodeType":"YulFunctionCall","src":"11570:25:21"},"nativeSrc":"11567:112:21","nodeType":"YulIf","src":"11567:112:21"},{"expression":{"arguments":[{"name":"src","nativeSrc":"11725:3:21","nodeType":"YulIdentifier","src":"11725:3:21"},{"name":"dst","nativeSrc":"11730:3:21","nodeType":"YulIdentifier","src":"11730:3:21"},{"name":"length","nativeSrc":"11735:6:21","nodeType":"YulIdentifier","src":"11735:6:21"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"11688:36:21","nodeType":"YulIdentifier","src":"11688:36:21"},"nativeSrc":"11688:54:21","nodeType":"YulFunctionCall","src":"11688:54:21"},"nativeSrc":"11688:54:21","nodeType":"YulExpressionStatement","src":"11688:54:21"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"11325:423:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"11381:3:21","nodeType":"YulTypedName","src":"11381:3:21","type":""},{"name":"length","nativeSrc":"11386:6:21","nodeType":"YulTypedName","src":"11386:6:21","type":""},{"name":"end","nativeSrc":"11394:3:21","nodeType":"YulTypedName","src":"11394:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"11402:5:21","nodeType":"YulTypedName","src":"11402:5:21","type":""}],"src":"11325:423:21"},{"body":{"nativeSrc":"11828:277:21","nodeType":"YulBlock","src":"11828:277:21","statements":[{"body":{"nativeSrc":"11877:83:21","nodeType":"YulBlock","src":"11877:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"11879:77:21","nodeType":"YulIdentifier","src":"11879:77:21"},"nativeSrc":"11879:79:21","nodeType":"YulFunctionCall","src":"11879:79:21"},"nativeSrc":"11879:79:21","nodeType":"YulExpressionStatement","src":"11879:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"11856:6:21","nodeType":"YulIdentifier","src":"11856:6:21"},{"kind":"number","nativeSrc":"11864:4:21","nodeType":"YulLiteral","src":"11864:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"11852:3:21","nodeType":"YulIdentifier","src":"11852:3:21"},"nativeSrc":"11852:17:21","nodeType":"YulFunctionCall","src":"11852:17:21"},{"name":"end","nativeSrc":"11871:3:21","nodeType":"YulIdentifier","src":"11871:3:21"}],"functionName":{"name":"slt","nativeSrc":"11848:3:21","nodeType":"YulIdentifier","src":"11848:3:21"},"nativeSrc":"11848:27:21","nodeType":"YulFunctionCall","src":"11848:27:21"}],"functionName":{"name":"iszero","nativeSrc":"11841:6:21","nodeType":"YulIdentifier","src":"11841:6:21"},"nativeSrc":"11841:35:21","nodeType":"YulFunctionCall","src":"11841:35:21"},"nativeSrc":"11838:122:21","nodeType":"YulIf","src":"11838:122:21"},{"nativeSrc":"11969:34:21","nodeType":"YulVariableDeclaration","src":"11969:34:21","value":{"arguments":[{"name":"offset","nativeSrc":"11996:6:21","nodeType":"YulIdentifier","src":"11996:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"11983:12:21","nodeType":"YulIdentifier","src":"11983:12:21"},"nativeSrc":"11983:20:21","nodeType":"YulFunctionCall","src":"11983:20:21"},"variables":[{"name":"length","nativeSrc":"11973:6:21","nodeType":"YulTypedName","src":"11973:6:21","type":""}]},{"nativeSrc":"12012:87:21","nodeType":"YulAssignment","src":"12012:87:21","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"12072:6:21","nodeType":"YulIdentifier","src":"12072:6:21"},{"kind":"number","nativeSrc":"12080:4:21","nodeType":"YulLiteral","src":"12080:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12068:3:21","nodeType":"YulIdentifier","src":"12068:3:21"},"nativeSrc":"12068:17:21","nodeType":"YulFunctionCall","src":"12068:17:21"},{"name":"length","nativeSrc":"12087:6:21","nodeType":"YulIdentifier","src":"12087:6:21"},{"name":"end","nativeSrc":"12095:3:21","nodeType":"YulIdentifier","src":"12095:3:21"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"12021:46:21","nodeType":"YulIdentifier","src":"12021:46:21"},"nativeSrc":"12021:78:21","nodeType":"YulFunctionCall","src":"12021:78:21"},"variableNames":[{"name":"array","nativeSrc":"12012:5:21","nodeType":"YulIdentifier","src":"12012:5:21"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"11767:338:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11806:6:21","nodeType":"YulTypedName","src":"11806:6:21","type":""},{"name":"end","nativeSrc":"11814:3:21","nodeType":"YulTypedName","src":"11814:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"11822:5:21","nodeType":"YulTypedName","src":"11822:5:21","type":""}],"src":"11767:338:21"},{"body":{"nativeSrc":"12203:560:21","nodeType":"YulBlock","src":"12203:560:21","statements":[{"body":{"nativeSrc":"12249:83:21","nodeType":"YulBlock","src":"12249:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12251:77:21","nodeType":"YulIdentifier","src":"12251:77:21"},"nativeSrc":"12251:79:21","nodeType":"YulFunctionCall","src":"12251:79:21"},"nativeSrc":"12251:79:21","nodeType":"YulExpressionStatement","src":"12251:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12224:7:21","nodeType":"YulIdentifier","src":"12224:7:21"},{"name":"headStart","nativeSrc":"12233:9:21","nodeType":"YulIdentifier","src":"12233:9:21"}],"functionName":{"name":"sub","nativeSrc":"12220:3:21","nodeType":"YulIdentifier","src":"12220:3:21"},"nativeSrc":"12220:23:21","nodeType":"YulFunctionCall","src":"12220:23:21"},{"kind":"number","nativeSrc":"12245:2:21","nodeType":"YulLiteral","src":"12245:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"12216:3:21","nodeType":"YulIdentifier","src":"12216:3:21"},"nativeSrc":"12216:32:21","nodeType":"YulFunctionCall","src":"12216:32:21"},"nativeSrc":"12213:119:21","nodeType":"YulIf","src":"12213:119:21"},{"nativeSrc":"12342:117:21","nodeType":"YulBlock","src":"12342:117:21","statements":[{"nativeSrc":"12357:15:21","nodeType":"YulVariableDeclaration","src":"12357:15:21","value":{"kind":"number","nativeSrc":"12371:1:21","nodeType":"YulLiteral","src":"12371:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12361:6:21","nodeType":"YulTypedName","src":"12361:6:21","type":""}]},{"nativeSrc":"12386:63:21","nodeType":"YulAssignment","src":"12386:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12421:9:21","nodeType":"YulIdentifier","src":"12421:9:21"},{"name":"offset","nativeSrc":"12432:6:21","nodeType":"YulIdentifier","src":"12432:6:21"}],"functionName":{"name":"add","nativeSrc":"12417:3:21","nodeType":"YulIdentifier","src":"12417:3:21"},"nativeSrc":"12417:22:21","nodeType":"YulFunctionCall","src":"12417:22:21"},{"name":"dataEnd","nativeSrc":"12441:7:21","nodeType":"YulIdentifier","src":"12441:7:21"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12396:20:21","nodeType":"YulIdentifier","src":"12396:20:21"},"nativeSrc":"12396:53:21","nodeType":"YulFunctionCall","src":"12396:53:21"},"variableNames":[{"name":"value0","nativeSrc":"12386:6:21","nodeType":"YulIdentifier","src":"12386:6:21"}]}]},{"nativeSrc":"12469:287:21","nodeType":"YulBlock","src":"12469:287:21","statements":[{"nativeSrc":"12484:46:21","nodeType":"YulVariableDeclaration","src":"12484:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12515:9:21","nodeType":"YulIdentifier","src":"12515:9:21"},{"kind":"number","nativeSrc":"12526:2:21","nodeType":"YulLiteral","src":"12526:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12511:3:21","nodeType":"YulIdentifier","src":"12511:3:21"},"nativeSrc":"12511:18:21","nodeType":"YulFunctionCall","src":"12511:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"12498:12:21","nodeType":"YulIdentifier","src":"12498:12:21"},"nativeSrc":"12498:32:21","nodeType":"YulFunctionCall","src":"12498:32:21"},"variables":[{"name":"offset","nativeSrc":"12488:6:21","nodeType":"YulTypedName","src":"12488:6:21","type":""}]},{"body":{"nativeSrc":"12577:83:21","nodeType":"YulBlock","src":"12577:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"12579:77:21","nodeType":"YulIdentifier","src":"12579:77:21"},"nativeSrc":"12579:79:21","nodeType":"YulFunctionCall","src":"12579:79:21"},"nativeSrc":"12579:79:21","nodeType":"YulExpressionStatement","src":"12579:79:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12549:6:21","nodeType":"YulIdentifier","src":"12549:6:21"},{"kind":"number","nativeSrc":"12557:18:21","nodeType":"YulLiteral","src":"12557:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12546:2:21","nodeType":"YulIdentifier","src":"12546:2:21"},"nativeSrc":"12546:30:21","nodeType":"YulFunctionCall","src":"12546:30:21"},"nativeSrc":"12543:117:21","nodeType":"YulIf","src":"12543:117:21"},{"nativeSrc":"12674:72:21","nodeType":"YulAssignment","src":"12674:72:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12718:9:21","nodeType":"YulIdentifier","src":"12718:9:21"},{"name":"offset","nativeSrc":"12729:6:21","nodeType":"YulIdentifier","src":"12729:6:21"}],"functionName":{"name":"add","nativeSrc":"12714:3:21","nodeType":"YulIdentifier","src":"12714:3:21"},"nativeSrc":"12714:22:21","nodeType":"YulFunctionCall","src":"12714:22:21"},{"name":"dataEnd","nativeSrc":"12738:7:21","nodeType":"YulIdentifier","src":"12738:7:21"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"12684:29:21","nodeType":"YulIdentifier","src":"12684:29:21"},"nativeSrc":"12684:62:21","nodeType":"YulFunctionCall","src":"12684:62:21"},"variableNames":[{"name":"value1","nativeSrc":"12674:6:21","nodeType":"YulIdentifier","src":"12674:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"12111:652:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12165:9:21","nodeType":"YulTypedName","src":"12165:9:21","type":""},{"name":"dataEnd","nativeSrc":"12176:7:21","nodeType":"YulTypedName","src":"12176:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12188:6:21","nodeType":"YulTypedName","src":"12188:6:21","type":""},{"name":"value1","nativeSrc":"12196:6:21","nodeType":"YulTypedName","src":"12196:6:21","type":""}],"src":"12111:652:21"},{"body":{"nativeSrc":"12834:53:21","nodeType":"YulBlock","src":"12834:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12851:3:21","nodeType":"YulIdentifier","src":"12851:3:21"},{"arguments":[{"name":"value","nativeSrc":"12874:5:21","nodeType":"YulIdentifier","src":"12874:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"12856:17:21","nodeType":"YulIdentifier","src":"12856:17:21"},"nativeSrc":"12856:24:21","nodeType":"YulFunctionCall","src":"12856:24:21"}],"functionName":{"name":"mstore","nativeSrc":"12844:6:21","nodeType":"YulIdentifier","src":"12844:6:21"},"nativeSrc":"12844:37:21","nodeType":"YulFunctionCall","src":"12844:37:21"},"nativeSrc":"12844:37:21","nodeType":"YulExpressionStatement","src":"12844:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12769:118:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12822:5:21","nodeType":"YulTypedName","src":"12822:5:21","type":""},{"name":"pos","nativeSrc":"12829:3:21","nodeType":"YulTypedName","src":"12829:3:21","type":""}],"src":"12769:118:21"},{"body":{"nativeSrc":"12991:124:21","nodeType":"YulBlock","src":"12991:124:21","statements":[{"nativeSrc":"13001:26:21","nodeType":"YulAssignment","src":"13001:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"13013:9:21","nodeType":"YulIdentifier","src":"13013:9:21"},{"kind":"number","nativeSrc":"13024:2:21","nodeType":"YulLiteral","src":"13024:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13009:3:21","nodeType":"YulIdentifier","src":"13009:3:21"},"nativeSrc":"13009:18:21","nodeType":"YulFunctionCall","src":"13009:18:21"},"variableNames":[{"name":"tail","nativeSrc":"13001:4:21","nodeType":"YulIdentifier","src":"13001:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13081:6:21","nodeType":"YulIdentifier","src":"13081:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"13094:9:21","nodeType":"YulIdentifier","src":"13094:9:21"},{"kind":"number","nativeSrc":"13105:1:21","nodeType":"YulLiteral","src":"13105:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13090:3:21","nodeType":"YulIdentifier","src":"13090:3:21"},"nativeSrc":"13090:17:21","nodeType":"YulFunctionCall","src":"13090:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"13037:43:21","nodeType":"YulIdentifier","src":"13037:43:21"},"nativeSrc":"13037:71:21","nodeType":"YulFunctionCall","src":"13037:71:21"},"nativeSrc":"13037:71:21","nodeType":"YulExpressionStatement","src":"13037:71:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"12893:222:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12963:9:21","nodeType":"YulTypedName","src":"12963:9:21","type":""},{"name":"value0","nativeSrc":"12975:6:21","nodeType":"YulTypedName","src":"12975:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12986:4:21","nodeType":"YulTypedName","src":"12986:4:21","type":""}],"src":"12893:222:21"},{"body":{"nativeSrc":"13210:28:21","nodeType":"YulBlock","src":"13210:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13227:1:21","nodeType":"YulLiteral","src":"13227:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"13230:1:21","nodeType":"YulLiteral","src":"13230:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13220:6:21","nodeType":"YulIdentifier","src":"13220:6:21"},"nativeSrc":"13220:12:21","nodeType":"YulFunctionCall","src":"13220:12:21"},"nativeSrc":"13220:12:21","nodeType":"YulExpressionStatement","src":"13220:12:21"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"13121:117:21","nodeType":"YulFunctionDefinition","src":"13121:117:21"},{"body":{"nativeSrc":"13333:28:21","nodeType":"YulBlock","src":"13333:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13350:1:21","nodeType":"YulLiteral","src":"13350:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"13353:1:21","nodeType":"YulLiteral","src":"13353:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13343:6:21","nodeType":"YulIdentifier","src":"13343:6:21"},"nativeSrc":"13343:12:21","nodeType":"YulFunctionCall","src":"13343:12:21"},"nativeSrc":"13343:12:21","nodeType":"YulExpressionStatement","src":"13343:12:21"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"13244:117:21","nodeType":"YulFunctionDefinition","src":"13244:117:21"},{"body":{"nativeSrc":"13483:478:21","nodeType":"YulBlock","src":"13483:478:21","statements":[{"body":{"nativeSrc":"13532:83:21","nodeType":"YulBlock","src":"13532:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"13534:77:21","nodeType":"YulIdentifier","src":"13534:77:21"},"nativeSrc":"13534:79:21","nodeType":"YulFunctionCall","src":"13534:79:21"},"nativeSrc":"13534:79:21","nodeType":"YulExpressionStatement","src":"13534:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"13511:6:21","nodeType":"YulIdentifier","src":"13511:6:21"},{"kind":"number","nativeSrc":"13519:4:21","nodeType":"YulLiteral","src":"13519:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"13507:3:21","nodeType":"YulIdentifier","src":"13507:3:21"},"nativeSrc":"13507:17:21","nodeType":"YulFunctionCall","src":"13507:17:21"},{"name":"end","nativeSrc":"13526:3:21","nodeType":"YulIdentifier","src":"13526:3:21"}],"functionName":{"name":"slt","nativeSrc":"13503:3:21","nodeType":"YulIdentifier","src":"13503:3:21"},"nativeSrc":"13503:27:21","nodeType":"YulFunctionCall","src":"13503:27:21"}],"functionName":{"name":"iszero","nativeSrc":"13496:6:21","nodeType":"YulIdentifier","src":"13496:6:21"},"nativeSrc":"13496:35:21","nodeType":"YulFunctionCall","src":"13496:35:21"},"nativeSrc":"13493:122:21","nodeType":"YulIf","src":"13493:122:21"},{"nativeSrc":"13624:30:21","nodeType":"YulAssignment","src":"13624:30:21","value":{"arguments":[{"name":"offset","nativeSrc":"13647:6:21","nodeType":"YulIdentifier","src":"13647:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"13634:12:21","nodeType":"YulIdentifier","src":"13634:12:21"},"nativeSrc":"13634:20:21","nodeType":"YulFunctionCall","src":"13634:20:21"},"variableNames":[{"name":"length","nativeSrc":"13624:6:21","nodeType":"YulIdentifier","src":"13624:6:21"}]},{"body":{"nativeSrc":"13697:83:21","nodeType":"YulBlock","src":"13697:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"13699:77:21","nodeType":"YulIdentifier","src":"13699:77:21"},"nativeSrc":"13699:79:21","nodeType":"YulFunctionCall","src":"13699:79:21"},"nativeSrc":"13699:79:21","nodeType":"YulExpressionStatement","src":"13699:79:21"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"13669:6:21","nodeType":"YulIdentifier","src":"13669:6:21"},{"kind":"number","nativeSrc":"13677:18:21","nodeType":"YulLiteral","src":"13677:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13666:2:21","nodeType":"YulIdentifier","src":"13666:2:21"},"nativeSrc":"13666:30:21","nodeType":"YulFunctionCall","src":"13666:30:21"},"nativeSrc":"13663:117:21","nodeType":"YulIf","src":"13663:117:21"},{"nativeSrc":"13789:29:21","nodeType":"YulAssignment","src":"13789:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"13805:6:21","nodeType":"YulIdentifier","src":"13805:6:21"},{"kind":"number","nativeSrc":"13813:4:21","nodeType":"YulLiteral","src":"13813:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13801:3:21","nodeType":"YulIdentifier","src":"13801:3:21"},"nativeSrc":"13801:17:21","nodeType":"YulFunctionCall","src":"13801:17:21"},"variableNames":[{"name":"arrayPos","nativeSrc":"13789:8:21","nodeType":"YulIdentifier","src":"13789:8:21"}]},{"body":{"nativeSrc":"13872:83:21","nodeType":"YulBlock","src":"13872:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"13874:77:21","nodeType":"YulIdentifier","src":"13874:77:21"},"nativeSrc":"13874:79:21","nodeType":"YulFunctionCall","src":"13874:79:21"},"nativeSrc":"13874:79:21","nodeType":"YulExpressionStatement","src":"13874:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"13837:8:21","nodeType":"YulIdentifier","src":"13837:8:21"},{"arguments":[{"name":"length","nativeSrc":"13851:6:21","nodeType":"YulIdentifier","src":"13851:6:21"},{"kind":"number","nativeSrc":"13859:4:21","nodeType":"YulLiteral","src":"13859:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"13847:3:21","nodeType":"YulIdentifier","src":"13847:3:21"},"nativeSrc":"13847:17:21","nodeType":"YulFunctionCall","src":"13847:17:21"}],"functionName":{"name":"add","nativeSrc":"13833:3:21","nodeType":"YulIdentifier","src":"13833:3:21"},"nativeSrc":"13833:32:21","nodeType":"YulFunctionCall","src":"13833:32:21"},{"name":"end","nativeSrc":"13867:3:21","nodeType":"YulIdentifier","src":"13867:3:21"}],"functionName":{"name":"gt","nativeSrc":"13830:2:21","nodeType":"YulIdentifier","src":"13830:2:21"},"nativeSrc":"13830:41:21","nodeType":"YulFunctionCall","src":"13830:41:21"},"nativeSrc":"13827:128:21","nodeType":"YulIf","src":"13827:128:21"}]},"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nativeSrc":"13382:579:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"13450:6:21","nodeType":"YulTypedName","src":"13450:6:21","type":""},{"name":"end","nativeSrc":"13458:3:21","nodeType":"YulTypedName","src":"13458:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"13466:8:21","nodeType":"YulTypedName","src":"13466:8:21","type":""},{"name":"length","nativeSrc":"13476:6:21","nodeType":"YulTypedName","src":"13476:6:21","type":""}],"src":"13382:579:21"},{"body":{"nativeSrc":"14074:478:21","nodeType":"YulBlock","src":"14074:478:21","statements":[{"body":{"nativeSrc":"14123:83:21","nodeType":"YulBlock","src":"14123:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"14125:77:21","nodeType":"YulIdentifier","src":"14125:77:21"},"nativeSrc":"14125:79:21","nodeType":"YulFunctionCall","src":"14125:79:21"},"nativeSrc":"14125:79:21","nodeType":"YulExpressionStatement","src":"14125:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"14102:6:21","nodeType":"YulIdentifier","src":"14102:6:21"},{"kind":"number","nativeSrc":"14110:4:21","nodeType":"YulLiteral","src":"14110:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"14098:3:21","nodeType":"YulIdentifier","src":"14098:3:21"},"nativeSrc":"14098:17:21","nodeType":"YulFunctionCall","src":"14098:17:21"},{"name":"end","nativeSrc":"14117:3:21","nodeType":"YulIdentifier","src":"14117:3:21"}],"functionName":{"name":"slt","nativeSrc":"14094:3:21","nodeType":"YulIdentifier","src":"14094:3:21"},"nativeSrc":"14094:27:21","nodeType":"YulFunctionCall","src":"14094:27:21"}],"functionName":{"name":"iszero","nativeSrc":"14087:6:21","nodeType":"YulIdentifier","src":"14087:6:21"},"nativeSrc":"14087:35:21","nodeType":"YulFunctionCall","src":"14087:35:21"},"nativeSrc":"14084:122:21","nodeType":"YulIf","src":"14084:122:21"},{"nativeSrc":"14215:30:21","nodeType":"YulAssignment","src":"14215:30:21","value":{"arguments":[{"name":"offset","nativeSrc":"14238:6:21","nodeType":"YulIdentifier","src":"14238:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"14225:12:21","nodeType":"YulIdentifier","src":"14225:12:21"},"nativeSrc":"14225:20:21","nodeType":"YulFunctionCall","src":"14225:20:21"},"variableNames":[{"name":"length","nativeSrc":"14215:6:21","nodeType":"YulIdentifier","src":"14215:6:21"}]},{"body":{"nativeSrc":"14288:83:21","nodeType":"YulBlock","src":"14288:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"14290:77:21","nodeType":"YulIdentifier","src":"14290:77:21"},"nativeSrc":"14290:79:21","nodeType":"YulFunctionCall","src":"14290:79:21"},"nativeSrc":"14290:79:21","nodeType":"YulExpressionStatement","src":"14290:79:21"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"14260:6:21","nodeType":"YulIdentifier","src":"14260:6:21"},{"kind":"number","nativeSrc":"14268:18:21","nodeType":"YulLiteral","src":"14268:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14257:2:21","nodeType":"YulIdentifier","src":"14257:2:21"},"nativeSrc":"14257:30:21","nodeType":"YulFunctionCall","src":"14257:30:21"},"nativeSrc":"14254:117:21","nodeType":"YulIf","src":"14254:117:21"},{"nativeSrc":"14380:29:21","nodeType":"YulAssignment","src":"14380:29:21","value":{"arguments":[{"name":"offset","nativeSrc":"14396:6:21","nodeType":"YulIdentifier","src":"14396:6:21"},{"kind":"number","nativeSrc":"14404:4:21","nodeType":"YulLiteral","src":"14404:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14392:3:21","nodeType":"YulIdentifier","src":"14392:3:21"},"nativeSrc":"14392:17:21","nodeType":"YulFunctionCall","src":"14392:17:21"},"variableNames":[{"name":"arrayPos","nativeSrc":"14380:8:21","nodeType":"YulIdentifier","src":"14380:8:21"}]},{"body":{"nativeSrc":"14463:83:21","nodeType":"YulBlock","src":"14463:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"14465:77:21","nodeType":"YulIdentifier","src":"14465:77:21"},"nativeSrc":"14465:79:21","nodeType":"YulFunctionCall","src":"14465:79:21"},"nativeSrc":"14465:79:21","nodeType":"YulExpressionStatement","src":"14465:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"14428:8:21","nodeType":"YulIdentifier","src":"14428:8:21"},{"arguments":[{"name":"length","nativeSrc":"14442:6:21","nodeType":"YulIdentifier","src":"14442:6:21"},{"kind":"number","nativeSrc":"14450:4:21","nodeType":"YulLiteral","src":"14450:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"14438:3:21","nodeType":"YulIdentifier","src":"14438:3:21"},"nativeSrc":"14438:17:21","nodeType":"YulFunctionCall","src":"14438:17:21"}],"functionName":{"name":"add","nativeSrc":"14424:3:21","nodeType":"YulIdentifier","src":"14424:3:21"},"nativeSrc":"14424:32:21","nodeType":"YulFunctionCall","src":"14424:32:21"},{"name":"end","nativeSrc":"14458:3:21","nodeType":"YulIdentifier","src":"14458:3:21"}],"functionName":{"name":"gt","nativeSrc":"14421:2:21","nodeType":"YulIdentifier","src":"14421:2:21"},"nativeSrc":"14421:41:21","nodeType":"YulFunctionCall","src":"14421:41:21"},"nativeSrc":"14418:128:21","nodeType":"YulIf","src":"14418:128:21"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"13984:568:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14041:6:21","nodeType":"YulTypedName","src":"14041:6:21","type":""},{"name":"end","nativeSrc":"14049:3:21","nodeType":"YulTypedName","src":"14049:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"14057:8:21","nodeType":"YulTypedName","src":"14057:8:21","type":""},{"name":"length","nativeSrc":"14067:6:21","nodeType":"YulTypedName","src":"14067:6:21","type":""}],"src":"13984:568:21"},{"body":{"nativeSrc":"14739:920:21","nodeType":"YulBlock","src":"14739:920:21","statements":[{"body":{"nativeSrc":"14785:83:21","nodeType":"YulBlock","src":"14785:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14787:77:21","nodeType":"YulIdentifier","src":"14787:77:21"},"nativeSrc":"14787:79:21","nodeType":"YulFunctionCall","src":"14787:79:21"},"nativeSrc":"14787:79:21","nodeType":"YulExpressionStatement","src":"14787:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14760:7:21","nodeType":"YulIdentifier","src":"14760:7:21"},{"name":"headStart","nativeSrc":"14769:9:21","nodeType":"YulIdentifier","src":"14769:9:21"}],"functionName":{"name":"sub","nativeSrc":"14756:3:21","nodeType":"YulIdentifier","src":"14756:3:21"},"nativeSrc":"14756:23:21","nodeType":"YulFunctionCall","src":"14756:23:21"},{"kind":"number","nativeSrc":"14781:2:21","nodeType":"YulLiteral","src":"14781:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"14752:3:21","nodeType":"YulIdentifier","src":"14752:3:21"},"nativeSrc":"14752:32:21","nodeType":"YulFunctionCall","src":"14752:32:21"},"nativeSrc":"14749:119:21","nodeType":"YulIf","src":"14749:119:21"},{"nativeSrc":"14878:117:21","nodeType":"YulBlock","src":"14878:117:21","statements":[{"nativeSrc":"14893:15:21","nodeType":"YulVariableDeclaration","src":"14893:15:21","value":{"kind":"number","nativeSrc":"14907:1:21","nodeType":"YulLiteral","src":"14907:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14897:6:21","nodeType":"YulTypedName","src":"14897:6:21","type":""}]},{"nativeSrc":"14922:63:21","nodeType":"YulAssignment","src":"14922:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14957:9:21","nodeType":"YulIdentifier","src":"14957:9:21"},{"name":"offset","nativeSrc":"14968:6:21","nodeType":"YulIdentifier","src":"14968:6:21"}],"functionName":{"name":"add","nativeSrc":"14953:3:21","nodeType":"YulIdentifier","src":"14953:3:21"},"nativeSrc":"14953:22:21","nodeType":"YulFunctionCall","src":"14953:22:21"},{"name":"dataEnd","nativeSrc":"14977:7:21","nodeType":"YulIdentifier","src":"14977:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"14932:20:21","nodeType":"YulIdentifier","src":"14932:20:21"},"nativeSrc":"14932:53:21","nodeType":"YulFunctionCall","src":"14932:53:21"},"variableNames":[{"name":"value0","nativeSrc":"14922:6:21","nodeType":"YulIdentifier","src":"14922:6:21"}]}]},{"nativeSrc":"15005:324:21","nodeType":"YulBlock","src":"15005:324:21","statements":[{"nativeSrc":"15020:46:21","nodeType":"YulVariableDeclaration","src":"15020:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15051:9:21","nodeType":"YulIdentifier","src":"15051:9:21"},{"kind":"number","nativeSrc":"15062:2:21","nodeType":"YulLiteral","src":"15062:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15047:3:21","nodeType":"YulIdentifier","src":"15047:3:21"},"nativeSrc":"15047:18:21","nodeType":"YulFunctionCall","src":"15047:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"15034:12:21","nodeType":"YulIdentifier","src":"15034:12:21"},"nativeSrc":"15034:32:21","nodeType":"YulFunctionCall","src":"15034:32:21"},"variables":[{"name":"offset","nativeSrc":"15024:6:21","nodeType":"YulTypedName","src":"15024:6:21","type":""}]},{"body":{"nativeSrc":"15113:83:21","nodeType":"YulBlock","src":"15113:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"15115:77:21","nodeType":"YulIdentifier","src":"15115:77:21"},"nativeSrc":"15115:79:21","nodeType":"YulFunctionCall","src":"15115:79:21"},"nativeSrc":"15115:79:21","nodeType":"YulExpressionStatement","src":"15115:79:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"15085:6:21","nodeType":"YulIdentifier","src":"15085:6:21"},{"kind":"number","nativeSrc":"15093:18:21","nodeType":"YulLiteral","src":"15093:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15082:2:21","nodeType":"YulIdentifier","src":"15082:2:21"},"nativeSrc":"15082:30:21","nodeType":"YulFunctionCall","src":"15082:30:21"},"nativeSrc":"15079:117:21","nodeType":"YulIf","src":"15079:117:21"},{"nativeSrc":"15210:109:21","nodeType":"YulAssignment","src":"15210:109:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15291:9:21","nodeType":"YulIdentifier","src":"15291:9:21"},{"name":"offset","nativeSrc":"15302:6:21","nodeType":"YulIdentifier","src":"15302:6:21"}],"functionName":{"name":"add","nativeSrc":"15287:3:21","nodeType":"YulIdentifier","src":"15287:3:21"},"nativeSrc":"15287:22:21","nodeType":"YulFunctionCall","src":"15287:22:21"},{"name":"dataEnd","nativeSrc":"15311:7:21","nodeType":"YulIdentifier","src":"15311:7:21"}],"functionName":{"name":"abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nativeSrc":"15228:58:21","nodeType":"YulIdentifier","src":"15228:58:21"},"nativeSrc":"15228:91:21","nodeType":"YulFunctionCall","src":"15228:91:21"},"variableNames":[{"name":"value1","nativeSrc":"15210:6:21","nodeType":"YulIdentifier","src":"15210:6:21"},{"name":"value2","nativeSrc":"15218:6:21","nodeType":"YulIdentifier","src":"15218:6:21"}]}]},{"nativeSrc":"15339:313:21","nodeType":"YulBlock","src":"15339:313:21","statements":[{"nativeSrc":"15354:46:21","nodeType":"YulVariableDeclaration","src":"15354:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15385:9:21","nodeType":"YulIdentifier","src":"15385:9:21"},{"kind":"number","nativeSrc":"15396:2:21","nodeType":"YulLiteral","src":"15396:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15381:3:21","nodeType":"YulIdentifier","src":"15381:3:21"},"nativeSrc":"15381:18:21","nodeType":"YulFunctionCall","src":"15381:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"15368:12:21","nodeType":"YulIdentifier","src":"15368:12:21"},"nativeSrc":"15368:32:21","nodeType":"YulFunctionCall","src":"15368:32:21"},"variables":[{"name":"offset","nativeSrc":"15358:6:21","nodeType":"YulTypedName","src":"15358:6:21","type":""}]},{"body":{"nativeSrc":"15447:83:21","nodeType":"YulBlock","src":"15447:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"15449:77:21","nodeType":"YulIdentifier","src":"15449:77:21"},"nativeSrc":"15449:79:21","nodeType":"YulFunctionCall","src":"15449:79:21"},"nativeSrc":"15449:79:21","nodeType":"YulExpressionStatement","src":"15449:79:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"15419:6:21","nodeType":"YulIdentifier","src":"15419:6:21"},{"kind":"number","nativeSrc":"15427:18:21","nodeType":"YulLiteral","src":"15427:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15416:2:21","nodeType":"YulIdentifier","src":"15416:2:21"},"nativeSrc":"15416:30:21","nodeType":"YulFunctionCall","src":"15416:30:21"},"nativeSrc":"15413:117:21","nodeType":"YulIf","src":"15413:117:21"},{"nativeSrc":"15544:98:21","nodeType":"YulAssignment","src":"15544:98:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15614:9:21","nodeType":"YulIdentifier","src":"15614:9:21"},{"name":"offset","nativeSrc":"15625:6:21","nodeType":"YulIdentifier","src":"15625:6:21"}],"functionName":{"name":"add","nativeSrc":"15610:3:21","nodeType":"YulIdentifier","src":"15610:3:21"},"nativeSrc":"15610:22:21","nodeType":"YulFunctionCall","src":"15610:22:21"},{"name":"dataEnd","nativeSrc":"15634:7:21","nodeType":"YulIdentifier","src":"15634:7:21"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"15562:47:21","nodeType":"YulIdentifier","src":"15562:47:21"},"nativeSrc":"15562:80:21","nodeType":"YulFunctionCall","src":"15562:80:21"},"variableNames":[{"name":"value3","nativeSrc":"15544:6:21","nodeType":"YulIdentifier","src":"15544:6:21"},{"name":"value4","nativeSrc":"15552:6:21","nodeType":"YulIdentifier","src":"15552:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr","nativeSrc":"14558:1101:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14677:9:21","nodeType":"YulTypedName","src":"14677:9:21","type":""},{"name":"dataEnd","nativeSrc":"14688:7:21","nodeType":"YulTypedName","src":"14688:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14700:6:21","nodeType":"YulTypedName","src":"14700:6:21","type":""},{"name":"value1","nativeSrc":"14708:6:21","nodeType":"YulTypedName","src":"14708:6:21","type":""},{"name":"value2","nativeSrc":"14716:6:21","nodeType":"YulTypedName","src":"14716:6:21","type":""},{"name":"value3","nativeSrc":"14724:6:21","nodeType":"YulTypedName","src":"14724:6:21","type":""},{"name":"value4","nativeSrc":"14732:6:21","nodeType":"YulTypedName","src":"14732:6:21","type":""}],"src":"14558:1101:21"},{"body":{"nativeSrc":"15731:263:21","nodeType":"YulBlock","src":"15731:263:21","statements":[{"body":{"nativeSrc":"15777:83:21","nodeType":"YulBlock","src":"15777:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15779:77:21","nodeType":"YulIdentifier","src":"15779:77:21"},"nativeSrc":"15779:79:21","nodeType":"YulFunctionCall","src":"15779:79:21"},"nativeSrc":"15779:79:21","nodeType":"YulExpressionStatement","src":"15779:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15752:7:21","nodeType":"YulIdentifier","src":"15752:7:21"},{"name":"headStart","nativeSrc":"15761:9:21","nodeType":"YulIdentifier","src":"15761:9:21"}],"functionName":{"name":"sub","nativeSrc":"15748:3:21","nodeType":"YulIdentifier","src":"15748:3:21"},"nativeSrc":"15748:23:21","nodeType":"YulFunctionCall","src":"15748:23:21"},{"kind":"number","nativeSrc":"15773:2:21","nodeType":"YulLiteral","src":"15773:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"15744:3:21","nodeType":"YulIdentifier","src":"15744:3:21"},"nativeSrc":"15744:32:21","nodeType":"YulFunctionCall","src":"15744:32:21"},"nativeSrc":"15741:119:21","nodeType":"YulIf","src":"15741:119:21"},{"nativeSrc":"15870:117:21","nodeType":"YulBlock","src":"15870:117:21","statements":[{"nativeSrc":"15885:15:21","nodeType":"YulVariableDeclaration","src":"15885:15:21","value":{"kind":"number","nativeSrc":"15899:1:21","nodeType":"YulLiteral","src":"15899:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15889:6:21","nodeType":"YulTypedName","src":"15889:6:21","type":""}]},{"nativeSrc":"15914:63:21","nodeType":"YulAssignment","src":"15914:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15949:9:21","nodeType":"YulIdentifier","src":"15949:9:21"},{"name":"offset","nativeSrc":"15960:6:21","nodeType":"YulIdentifier","src":"15960:6:21"}],"functionName":{"name":"add","nativeSrc":"15945:3:21","nodeType":"YulIdentifier","src":"15945:3:21"},"nativeSrc":"15945:22:21","nodeType":"YulFunctionCall","src":"15945:22:21"},{"name":"dataEnd","nativeSrc":"15969:7:21","nodeType":"YulIdentifier","src":"15969:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"15924:20:21","nodeType":"YulIdentifier","src":"15924:20:21"},"nativeSrc":"15924:53:21","nodeType":"YulFunctionCall","src":"15924:53:21"},"variableNames":[{"name":"value0","nativeSrc":"15914:6:21","nodeType":"YulIdentifier","src":"15914:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"15665:329:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15701:9:21","nodeType":"YulTypedName","src":"15701:9:21","type":""},{"name":"dataEnd","nativeSrc":"15712:7:21","nodeType":"YulTypedName","src":"15712:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15724:6:21","nodeType":"YulTypedName","src":"15724:6:21","type":""}],"src":"15665:329:21"},{"body":{"nativeSrc":"16042:52:21","nodeType":"YulBlock","src":"16042:52:21","statements":[{"nativeSrc":"16052:35:21","nodeType":"YulAssignment","src":"16052:35:21","value":{"arguments":[{"kind":"number","nativeSrc":"16077:2:21","nodeType":"YulLiteral","src":"16077:2:21","type":"","value":"96"},{"name":"value","nativeSrc":"16081:5:21","nodeType":"YulIdentifier","src":"16081:5:21"}],"functionName":{"name":"shl","nativeSrc":"16073:3:21","nodeType":"YulIdentifier","src":"16073:3:21"},"nativeSrc":"16073:14:21","nodeType":"YulFunctionCall","src":"16073:14:21"},"variableNames":[{"name":"newValue","nativeSrc":"16052:8:21","nodeType":"YulIdentifier","src":"16052:8:21"}]}]},"name":"shift_left_96","nativeSrc":"16000:94:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16023:5:21","nodeType":"YulTypedName","src":"16023:5:21","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"16033:8:21","nodeType":"YulTypedName","src":"16033:8:21","type":""}],"src":"16000:94:21"},{"body":{"nativeSrc":"16147:47:21","nodeType":"YulBlock","src":"16147:47:21","statements":[{"nativeSrc":"16157:31:21","nodeType":"YulAssignment","src":"16157:31:21","value":{"arguments":[{"name":"value","nativeSrc":"16182:5:21","nodeType":"YulIdentifier","src":"16182:5:21"}],"functionName":{"name":"shift_left_96","nativeSrc":"16168:13:21","nodeType":"YulIdentifier","src":"16168:13:21"},"nativeSrc":"16168:20:21","nodeType":"YulFunctionCall","src":"16168:20:21"},"variableNames":[{"name":"aligned","nativeSrc":"16157:7:21","nodeType":"YulIdentifier","src":"16157:7:21"}]}]},"name":"leftAlign_t_uint160","nativeSrc":"16100:94:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16129:5:21","nodeType":"YulTypedName","src":"16129:5:21","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"16139:7:21","nodeType":"YulTypedName","src":"16139:7:21","type":""}],"src":"16100:94:21"},{"body":{"nativeSrc":"16247:53:21","nodeType":"YulBlock","src":"16247:53:21","statements":[{"nativeSrc":"16257:37:21","nodeType":"YulAssignment","src":"16257:37:21","value":{"arguments":[{"name":"value","nativeSrc":"16288:5:21","nodeType":"YulIdentifier","src":"16288:5:21"}],"functionName":{"name":"leftAlign_t_uint160","nativeSrc":"16268:19:21","nodeType":"YulIdentifier","src":"16268:19:21"},"nativeSrc":"16268:26:21","nodeType":"YulFunctionCall","src":"16268:26:21"},"variableNames":[{"name":"aligned","nativeSrc":"16257:7:21","nodeType":"YulIdentifier","src":"16257:7:21"}]}]},"name":"leftAlign_t_address","nativeSrc":"16200:100:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16229:5:21","nodeType":"YulTypedName","src":"16229:5:21","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"16239:7:21","nodeType":"YulTypedName","src":"16239:7:21","type":""}],"src":"16200:100:21"},{"body":{"nativeSrc":"16389:74:21","nodeType":"YulBlock","src":"16389:74:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"16406:3:21","nodeType":"YulIdentifier","src":"16406:3:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16449:5:21","nodeType":"YulIdentifier","src":"16449:5:21"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"16431:17:21","nodeType":"YulIdentifier","src":"16431:17:21"},"nativeSrc":"16431:24:21","nodeType":"YulFunctionCall","src":"16431:24:21"}],"functionName":{"name":"leftAlign_t_address","nativeSrc":"16411:19:21","nodeType":"YulIdentifier","src":"16411:19:21"},"nativeSrc":"16411:45:21","nodeType":"YulFunctionCall","src":"16411:45:21"}],"functionName":{"name":"mstore","nativeSrc":"16399:6:21","nodeType":"YulIdentifier","src":"16399:6:21"},"nativeSrc":"16399:58:21","nodeType":"YulFunctionCall","src":"16399:58:21"},"nativeSrc":"16399:58:21","nodeType":"YulExpressionStatement","src":"16399:58:21"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"16306:157:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16377:5:21","nodeType":"YulTypedName","src":"16377:5:21","type":""},{"name":"pos","nativeSrc":"16384:3:21","nodeType":"YulTypedName","src":"16384:3:21","type":""}],"src":"16306:157:21"},{"body":{"nativeSrc":"16516:32:21","nodeType":"YulBlock","src":"16516:32:21","statements":[{"nativeSrc":"16526:16:21","nodeType":"YulAssignment","src":"16526:16:21","value":{"name":"value","nativeSrc":"16537:5:21","nodeType":"YulIdentifier","src":"16537:5:21"},"variableNames":[{"name":"aligned","nativeSrc":"16526:7:21","nodeType":"YulIdentifier","src":"16526:7:21"}]}]},"name":"leftAlign_t_uint256","nativeSrc":"16469:79:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16498:5:21","nodeType":"YulTypedName","src":"16498:5:21","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"16508:7:21","nodeType":"YulTypedName","src":"16508:7:21","type":""}],"src":"16469:79:21"},{"body":{"nativeSrc":"16637:74:21","nodeType":"YulBlock","src":"16637:74:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"16654:3:21","nodeType":"YulIdentifier","src":"16654:3:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16697:5:21","nodeType":"YulIdentifier","src":"16697:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16679:17:21","nodeType":"YulIdentifier","src":"16679:17:21"},"nativeSrc":"16679:24:21","nodeType":"YulFunctionCall","src":"16679:24:21"}],"functionName":{"name":"leftAlign_t_uint256","nativeSrc":"16659:19:21","nodeType":"YulIdentifier","src":"16659:19:21"},"nativeSrc":"16659:45:21","nodeType":"YulFunctionCall","src":"16659:45:21"}],"functionName":{"name":"mstore","nativeSrc":"16647:6:21","nodeType":"YulIdentifier","src":"16647:6:21"},"nativeSrc":"16647:58:21","nodeType":"YulFunctionCall","src":"16647:58:21"},"nativeSrc":"16647:58:21","nodeType":"YulExpressionStatement","src":"16647:58:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"16554:157:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16625:5:21","nodeType":"YulTypedName","src":"16625:5:21","type":""},{"name":"pos","nativeSrc":"16632:3:21","nodeType":"YulTypedName","src":"16632:3:21","type":""}],"src":"16554:157:21"},{"body":{"nativeSrc":"16861:253:21","nodeType":"YulBlock","src":"16861:253:21","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"16934:6:21","nodeType":"YulIdentifier","src":"16934:6:21"},{"name":"pos","nativeSrc":"16943:3:21","nodeType":"YulIdentifier","src":"16943:3:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"16872:61:21","nodeType":"YulIdentifier","src":"16872:61:21"},"nativeSrc":"16872:75:21","nodeType":"YulFunctionCall","src":"16872:75:21"},"nativeSrc":"16872:75:21","nodeType":"YulExpressionStatement","src":"16872:75:21"},{"nativeSrc":"16956:19:21","nodeType":"YulAssignment","src":"16956:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"16967:3:21","nodeType":"YulIdentifier","src":"16967:3:21"},{"kind":"number","nativeSrc":"16972:2:21","nodeType":"YulLiteral","src":"16972:2:21","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"16963:3:21","nodeType":"YulIdentifier","src":"16963:3:21"},"nativeSrc":"16963:12:21","nodeType":"YulFunctionCall","src":"16963:12:21"},"variableNames":[{"name":"pos","nativeSrc":"16956:3:21","nodeType":"YulIdentifier","src":"16956:3:21"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"17047:6:21","nodeType":"YulIdentifier","src":"17047:6:21"},{"name":"pos","nativeSrc":"17056:3:21","nodeType":"YulIdentifier","src":"17056:3:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"16985:61:21","nodeType":"YulIdentifier","src":"16985:61:21"},"nativeSrc":"16985:75:21","nodeType":"YulFunctionCall","src":"16985:75:21"},"nativeSrc":"16985:75:21","nodeType":"YulExpressionStatement","src":"16985:75:21"},{"nativeSrc":"17069:19:21","nodeType":"YulAssignment","src":"17069:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"17080:3:21","nodeType":"YulIdentifier","src":"17080:3:21"},{"kind":"number","nativeSrc":"17085:2:21","nodeType":"YulLiteral","src":"17085:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17076:3:21","nodeType":"YulIdentifier","src":"17076:3:21"},"nativeSrc":"17076:12:21","nodeType":"YulFunctionCall","src":"17076:12:21"},"variableNames":[{"name":"pos","nativeSrc":"17069:3:21","nodeType":"YulIdentifier","src":"17069:3:21"}]},{"nativeSrc":"17098:10:21","nodeType":"YulAssignment","src":"17098:10:21","value":{"name":"pos","nativeSrc":"17105:3:21","nodeType":"YulIdentifier","src":"17105:3:21"},"variableNames":[{"name":"end","nativeSrc":"17098:3:21","nodeType":"YulIdentifier","src":"17098:3:21"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nativeSrc":"16717:397:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16832:3:21","nodeType":"YulTypedName","src":"16832:3:21","type":""},{"name":"value1","nativeSrc":"16838:6:21","nodeType":"YulTypedName","src":"16838:6:21","type":""},{"name":"value0","nativeSrc":"16846:6:21","nodeType":"YulTypedName","src":"16846:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16857:3:21","nodeType":"YulTypedName","src":"16857:3:21","type":""}],"src":"16717:397:21"},{"body":{"nativeSrc":"17148:152:21","nodeType":"YulBlock","src":"17148:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17165:1:21","nodeType":"YulLiteral","src":"17165:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"17168:77:21","nodeType":"YulLiteral","src":"17168:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"17158:6:21","nodeType":"YulIdentifier","src":"17158:6:21"},"nativeSrc":"17158:88:21","nodeType":"YulFunctionCall","src":"17158:88:21"},"nativeSrc":"17158:88:21","nodeType":"YulExpressionStatement","src":"17158:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17262:1:21","nodeType":"YulLiteral","src":"17262:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"17265:4:21","nodeType":"YulLiteral","src":"17265:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"17255:6:21","nodeType":"YulIdentifier","src":"17255:6:21"},"nativeSrc":"17255:15:21","nodeType":"YulFunctionCall","src":"17255:15:21"},"nativeSrc":"17255:15:21","nodeType":"YulExpressionStatement","src":"17255:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17286:1:21","nodeType":"YulLiteral","src":"17286:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"17289:4:21","nodeType":"YulLiteral","src":"17289:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"17279:6:21","nodeType":"YulIdentifier","src":"17279:6:21"},"nativeSrc":"17279:15:21","nodeType":"YulFunctionCall","src":"17279:15:21"},"nativeSrc":"17279:15:21","nodeType":"YulExpressionStatement","src":"17279:15:21"}]},"name":"panic_error_0x11","nativeSrc":"17120:180:21","nodeType":"YulFunctionDefinition","src":"17120:180:21"},{"body":{"nativeSrc":"17350:147:21","nodeType":"YulBlock","src":"17350:147:21","statements":[{"nativeSrc":"17360:25:21","nodeType":"YulAssignment","src":"17360:25:21","value":{"arguments":[{"name":"x","nativeSrc":"17383:1:21","nodeType":"YulIdentifier","src":"17383:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"17365:17:21","nodeType":"YulIdentifier","src":"17365:17:21"},"nativeSrc":"17365:20:21","nodeType":"YulFunctionCall","src":"17365:20:21"},"variableNames":[{"name":"x","nativeSrc":"17360:1:21","nodeType":"YulIdentifier","src":"17360:1:21"}]},{"nativeSrc":"17394:25:21","nodeType":"YulAssignment","src":"17394:25:21","value":{"arguments":[{"name":"y","nativeSrc":"17417:1:21","nodeType":"YulIdentifier","src":"17417:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"17399:17:21","nodeType":"YulIdentifier","src":"17399:17:21"},"nativeSrc":"17399:20:21","nodeType":"YulFunctionCall","src":"17399:20:21"},"variableNames":[{"name":"y","nativeSrc":"17394:1:21","nodeType":"YulIdentifier","src":"17394:1:21"}]},{"nativeSrc":"17428:16:21","nodeType":"YulAssignment","src":"17428:16:21","value":{"arguments":[{"name":"x","nativeSrc":"17439:1:21","nodeType":"YulIdentifier","src":"17439:1:21"},{"name":"y","nativeSrc":"17442:1:21","nodeType":"YulIdentifier","src":"17442:1:21"}],"functionName":{"name":"add","nativeSrc":"17435:3:21","nodeType":"YulIdentifier","src":"17435:3:21"},"nativeSrc":"17435:9:21","nodeType":"YulFunctionCall","src":"17435:9:21"},"variableNames":[{"name":"sum","nativeSrc":"17428:3:21","nodeType":"YulIdentifier","src":"17428:3:21"}]},{"body":{"nativeSrc":"17468:22:21","nodeType":"YulBlock","src":"17468:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"17470:16:21","nodeType":"YulIdentifier","src":"17470:16:21"},"nativeSrc":"17470:18:21","nodeType":"YulFunctionCall","src":"17470:18:21"},"nativeSrc":"17470:18:21","nodeType":"YulExpressionStatement","src":"17470:18:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"17460:1:21","nodeType":"YulIdentifier","src":"17460:1:21"},{"name":"sum","nativeSrc":"17463:3:21","nodeType":"YulIdentifier","src":"17463:3:21"}],"functionName":{"name":"gt","nativeSrc":"17457:2:21","nodeType":"YulIdentifier","src":"17457:2:21"},"nativeSrc":"17457:10:21","nodeType":"YulFunctionCall","src":"17457:10:21"},"nativeSrc":"17454:36:21","nodeType":"YulIf","src":"17454:36:21"}]},"name":"checked_add_t_uint256","nativeSrc":"17306:191:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"17337:1:21","nodeType":"YulTypedName","src":"17337:1:21","type":""},{"name":"y","nativeSrc":"17340:1:21","nodeType":"YulTypedName","src":"17340:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"17346:3:21","nodeType":"YulTypedName","src":"17346:3:21","type":""}],"src":"17306:191:21"},{"body":{"nativeSrc":"17629:206:21","nodeType":"YulBlock","src":"17629:206:21","statements":[{"nativeSrc":"17639:26:21","nodeType":"YulAssignment","src":"17639:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"17651:9:21","nodeType":"YulIdentifier","src":"17651:9:21"},{"kind":"number","nativeSrc":"17662:2:21","nodeType":"YulLiteral","src":"17662:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17647:3:21","nodeType":"YulIdentifier","src":"17647:3:21"},"nativeSrc":"17647:18:21","nodeType":"YulFunctionCall","src":"17647:18:21"},"variableNames":[{"name":"tail","nativeSrc":"17639:4:21","nodeType":"YulIdentifier","src":"17639:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"17719:6:21","nodeType":"YulIdentifier","src":"17719:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"17732:9:21","nodeType":"YulIdentifier","src":"17732:9:21"},{"kind":"number","nativeSrc":"17743:1:21","nodeType":"YulLiteral","src":"17743:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17728:3:21","nodeType":"YulIdentifier","src":"17728:3:21"},"nativeSrc":"17728:17:21","nodeType":"YulFunctionCall","src":"17728:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"17675:43:21","nodeType":"YulIdentifier","src":"17675:43:21"},"nativeSrc":"17675:71:21","nodeType":"YulFunctionCall","src":"17675:71:21"},"nativeSrc":"17675:71:21","nodeType":"YulExpressionStatement","src":"17675:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"17800:6:21","nodeType":"YulIdentifier","src":"17800:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"17813:9:21","nodeType":"YulIdentifier","src":"17813:9:21"},{"kind":"number","nativeSrc":"17824:2:21","nodeType":"YulLiteral","src":"17824:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17809:3:21","nodeType":"YulIdentifier","src":"17809:3:21"},"nativeSrc":"17809:18:21","nodeType":"YulFunctionCall","src":"17809:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17756:43:21","nodeType":"YulIdentifier","src":"17756:43:21"},"nativeSrc":"17756:72:21","nodeType":"YulFunctionCall","src":"17756:72:21"},"nativeSrc":"17756:72:21","nodeType":"YulExpressionStatement","src":"17756:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"17503:332:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17593:9:21","nodeType":"YulTypedName","src":"17593:9:21","type":""},{"name":"value1","nativeSrc":"17605:6:21","nodeType":"YulTypedName","src":"17605:6:21","type":""},{"name":"value0","nativeSrc":"17613:6:21","nodeType":"YulTypedName","src":"17613:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17624:4:21","nodeType":"YulTypedName","src":"17624:4:21","type":""}],"src":"17503:332:21"},{"body":{"nativeSrc":"17869:152:21","nodeType":"YulBlock","src":"17869:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17886:1:21","nodeType":"YulLiteral","src":"17886:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"17889:77:21","nodeType":"YulLiteral","src":"17889:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"17879:6:21","nodeType":"YulIdentifier","src":"17879:6:21"},"nativeSrc":"17879:88:21","nodeType":"YulFunctionCall","src":"17879:88:21"},"nativeSrc":"17879:88:21","nodeType":"YulExpressionStatement","src":"17879:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17983:1:21","nodeType":"YulLiteral","src":"17983:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"17986:4:21","nodeType":"YulLiteral","src":"17986:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"17976:6:21","nodeType":"YulIdentifier","src":"17976:6:21"},"nativeSrc":"17976:15:21","nodeType":"YulFunctionCall","src":"17976:15:21"},"nativeSrc":"17976:15:21","nodeType":"YulExpressionStatement","src":"17976:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18007:1:21","nodeType":"YulLiteral","src":"18007:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"18010:4:21","nodeType":"YulLiteral","src":"18010:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"18000:6:21","nodeType":"YulIdentifier","src":"18000:6:21"},"nativeSrc":"18000:15:21","nodeType":"YulFunctionCall","src":"18000:15:21"},"nativeSrc":"18000:15:21","nodeType":"YulExpressionStatement","src":"18000:15:21"}]},"name":"panic_error_0x22","nativeSrc":"17841:180:21","nodeType":"YulFunctionDefinition","src":"17841:180:21"},{"body":{"nativeSrc":"18078:269:21","nodeType":"YulBlock","src":"18078:269:21","statements":[{"nativeSrc":"18088:22:21","nodeType":"YulAssignment","src":"18088:22:21","value":{"arguments":[{"name":"data","nativeSrc":"18102:4:21","nodeType":"YulIdentifier","src":"18102:4:21"},{"kind":"number","nativeSrc":"18108:1:21","nodeType":"YulLiteral","src":"18108:1:21","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"18098:3:21","nodeType":"YulIdentifier","src":"18098:3:21"},"nativeSrc":"18098:12:21","nodeType":"YulFunctionCall","src":"18098:12:21"},"variableNames":[{"name":"length","nativeSrc":"18088:6:21","nodeType":"YulIdentifier","src":"18088:6:21"}]},{"nativeSrc":"18119:38:21","nodeType":"YulVariableDeclaration","src":"18119:38:21","value":{"arguments":[{"name":"data","nativeSrc":"18149:4:21","nodeType":"YulIdentifier","src":"18149:4:21"},{"kind":"number","nativeSrc":"18155:1:21","nodeType":"YulLiteral","src":"18155:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"18145:3:21","nodeType":"YulIdentifier","src":"18145:3:21"},"nativeSrc":"18145:12:21","nodeType":"YulFunctionCall","src":"18145:12:21"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"18123:18:21","nodeType":"YulTypedName","src":"18123:18:21","type":""}]},{"body":{"nativeSrc":"18196:51:21","nodeType":"YulBlock","src":"18196:51:21","statements":[{"nativeSrc":"18210:27:21","nodeType":"YulAssignment","src":"18210:27:21","value":{"arguments":[{"name":"length","nativeSrc":"18224:6:21","nodeType":"YulIdentifier","src":"18224:6:21"},{"kind":"number","nativeSrc":"18232:4:21","nodeType":"YulLiteral","src":"18232:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"18220:3:21","nodeType":"YulIdentifier","src":"18220:3:21"},"nativeSrc":"18220:17:21","nodeType":"YulFunctionCall","src":"18220:17:21"},"variableNames":[{"name":"length","nativeSrc":"18210:6:21","nodeType":"YulIdentifier","src":"18210:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"18176:18:21","nodeType":"YulIdentifier","src":"18176:18:21"}],"functionName":{"name":"iszero","nativeSrc":"18169:6:21","nodeType":"YulIdentifier","src":"18169:6:21"},"nativeSrc":"18169:26:21","nodeType":"YulFunctionCall","src":"18169:26:21"},"nativeSrc":"18166:81:21","nodeType":"YulIf","src":"18166:81:21"},{"body":{"nativeSrc":"18299:42:21","nodeType":"YulBlock","src":"18299:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"18313:16:21","nodeType":"YulIdentifier","src":"18313:16:21"},"nativeSrc":"18313:18:21","nodeType":"YulFunctionCall","src":"18313:18:21"},"nativeSrc":"18313:18:21","nodeType":"YulExpressionStatement","src":"18313:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"18263:18:21","nodeType":"YulIdentifier","src":"18263:18:21"},{"arguments":[{"name":"length","nativeSrc":"18286:6:21","nodeType":"YulIdentifier","src":"18286:6:21"},{"kind":"number","nativeSrc":"18294:2:21","nodeType":"YulLiteral","src":"18294:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"18283:2:21","nodeType":"YulIdentifier","src":"18283:2:21"},"nativeSrc":"18283:14:21","nodeType":"YulFunctionCall","src":"18283:14:21"}],"functionName":{"name":"eq","nativeSrc":"18260:2:21","nodeType":"YulIdentifier","src":"18260:2:21"},"nativeSrc":"18260:38:21","nodeType":"YulFunctionCall","src":"18260:38:21"},"nativeSrc":"18257:84:21","nodeType":"YulIf","src":"18257:84:21"}]},"name":"extract_byte_array_length","nativeSrc":"18027:320:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"18062:4:21","nodeType":"YulTypedName","src":"18062:4:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"18071:6:21","nodeType":"YulTypedName","src":"18071:6:21","type":""}],"src":"18027:320:21"},{"body":{"nativeSrc":"18401:362:21","nodeType":"YulBlock","src":"18401:362:21","statements":[{"nativeSrc":"18411:25:21","nodeType":"YulAssignment","src":"18411:25:21","value":{"arguments":[{"name":"x","nativeSrc":"18434:1:21","nodeType":"YulIdentifier","src":"18434:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18416:17:21","nodeType":"YulIdentifier","src":"18416:17:21"},"nativeSrc":"18416:20:21","nodeType":"YulFunctionCall","src":"18416:20:21"},"variableNames":[{"name":"x","nativeSrc":"18411:1:21","nodeType":"YulIdentifier","src":"18411:1:21"}]},{"nativeSrc":"18445:25:21","nodeType":"YulAssignment","src":"18445:25:21","value":{"arguments":[{"name":"y","nativeSrc":"18468:1:21","nodeType":"YulIdentifier","src":"18468:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18450:17:21","nodeType":"YulIdentifier","src":"18450:17:21"},"nativeSrc":"18450:20:21","nodeType":"YulFunctionCall","src":"18450:20:21"},"variableNames":[{"name":"y","nativeSrc":"18445:1:21","nodeType":"YulIdentifier","src":"18445:1:21"}]},{"nativeSrc":"18479:28:21","nodeType":"YulVariableDeclaration","src":"18479:28:21","value":{"arguments":[{"name":"x","nativeSrc":"18502:1:21","nodeType":"YulIdentifier","src":"18502:1:21"},{"name":"y","nativeSrc":"18505:1:21","nodeType":"YulIdentifier","src":"18505:1:21"}],"functionName":{"name":"mul","nativeSrc":"18498:3:21","nodeType":"YulIdentifier","src":"18498:3:21"},"nativeSrc":"18498:9:21","nodeType":"YulFunctionCall","src":"18498:9:21"},"variables":[{"name":"product_raw","nativeSrc":"18483:11:21","nodeType":"YulTypedName","src":"18483:11:21","type":""}]},{"nativeSrc":"18516:41:21","nodeType":"YulAssignment","src":"18516:41:21","value":{"arguments":[{"name":"product_raw","nativeSrc":"18545:11:21","nodeType":"YulIdentifier","src":"18545:11:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18527:17:21","nodeType":"YulIdentifier","src":"18527:17:21"},"nativeSrc":"18527:30:21","nodeType":"YulFunctionCall","src":"18527:30:21"},"variableNames":[{"name":"product","nativeSrc":"18516:7:21","nodeType":"YulIdentifier","src":"18516:7:21"}]},{"body":{"nativeSrc":"18734:22:21","nodeType":"YulBlock","src":"18734:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"18736:16:21","nodeType":"YulIdentifier","src":"18736:16:21"},"nativeSrc":"18736:18:21","nodeType":"YulFunctionCall","src":"18736:18:21"},"nativeSrc":"18736:18:21","nodeType":"YulExpressionStatement","src":"18736:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"18667:1:21","nodeType":"YulIdentifier","src":"18667:1:21"}],"functionName":{"name":"iszero","nativeSrc":"18660:6:21","nodeType":"YulIdentifier","src":"18660:6:21"},"nativeSrc":"18660:9:21","nodeType":"YulFunctionCall","src":"18660:9:21"},{"arguments":[{"name":"y","nativeSrc":"18690:1:21","nodeType":"YulIdentifier","src":"18690:1:21"},{"arguments":[{"name":"product","nativeSrc":"18697:7:21","nodeType":"YulIdentifier","src":"18697:7:21"},{"name":"x","nativeSrc":"18706:1:21","nodeType":"YulIdentifier","src":"18706:1:21"}],"functionName":{"name":"div","nativeSrc":"18693:3:21","nodeType":"YulIdentifier","src":"18693:3:21"},"nativeSrc":"18693:15:21","nodeType":"YulFunctionCall","src":"18693:15:21"}],"functionName":{"name":"eq","nativeSrc":"18687:2:21","nodeType":"YulIdentifier","src":"18687:2:21"},"nativeSrc":"18687:22:21","nodeType":"YulFunctionCall","src":"18687:22:21"}],"functionName":{"name":"or","nativeSrc":"18640:2:21","nodeType":"YulIdentifier","src":"18640:2:21"},"nativeSrc":"18640:83:21","nodeType":"YulFunctionCall","src":"18640:83:21"}],"functionName":{"name":"iszero","nativeSrc":"18620:6:21","nodeType":"YulIdentifier","src":"18620:6:21"},"nativeSrc":"18620:113:21","nodeType":"YulFunctionCall","src":"18620:113:21"},"nativeSrc":"18617:139:21","nodeType":"YulIf","src":"18617:139:21"}]},"name":"checked_mul_t_uint256","nativeSrc":"18353:410:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"18384:1:21","nodeType":"YulTypedName","src":"18384:1:21","type":""},{"name":"y","nativeSrc":"18387:1:21","nodeType":"YulTypedName","src":"18387:1:21","type":""}],"returnVariables":[{"name":"product","nativeSrc":"18393:7:21","nodeType":"YulTypedName","src":"18393:7:21","type":""}],"src":"18353:410:21"},{"body":{"nativeSrc":"18797:152:21","nodeType":"YulBlock","src":"18797:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18814:1:21","nodeType":"YulLiteral","src":"18814:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"18817:77:21","nodeType":"YulLiteral","src":"18817:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"18807:6:21","nodeType":"YulIdentifier","src":"18807:6:21"},"nativeSrc":"18807:88:21","nodeType":"YulFunctionCall","src":"18807:88:21"},"nativeSrc":"18807:88:21","nodeType":"YulExpressionStatement","src":"18807:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18911:1:21","nodeType":"YulLiteral","src":"18911:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"18914:4:21","nodeType":"YulLiteral","src":"18914:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"18904:6:21","nodeType":"YulIdentifier","src":"18904:6:21"},"nativeSrc":"18904:15:21","nodeType":"YulFunctionCall","src":"18904:15:21"},"nativeSrc":"18904:15:21","nodeType":"YulExpressionStatement","src":"18904:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18935:1:21","nodeType":"YulLiteral","src":"18935:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"18938:4:21","nodeType":"YulLiteral","src":"18938:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"18928:6:21","nodeType":"YulIdentifier","src":"18928:6:21"},"nativeSrc":"18928:15:21","nodeType":"YulFunctionCall","src":"18928:15:21"},"nativeSrc":"18928:15:21","nodeType":"YulExpressionStatement","src":"18928:15:21"}]},"name":"panic_error_0x12","nativeSrc":"18769:180:21","nodeType":"YulFunctionDefinition","src":"18769:180:21"},{"body":{"nativeSrc":"18997:143:21","nodeType":"YulBlock","src":"18997:143:21","statements":[{"nativeSrc":"19007:25:21","nodeType":"YulAssignment","src":"19007:25:21","value":{"arguments":[{"name":"x","nativeSrc":"19030:1:21","nodeType":"YulIdentifier","src":"19030:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19012:17:21","nodeType":"YulIdentifier","src":"19012:17:21"},"nativeSrc":"19012:20:21","nodeType":"YulFunctionCall","src":"19012:20:21"},"variableNames":[{"name":"x","nativeSrc":"19007:1:21","nodeType":"YulIdentifier","src":"19007:1:21"}]},{"nativeSrc":"19041:25:21","nodeType":"YulAssignment","src":"19041:25:21","value":{"arguments":[{"name":"y","nativeSrc":"19064:1:21","nodeType":"YulIdentifier","src":"19064:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19046:17:21","nodeType":"YulIdentifier","src":"19046:17:21"},"nativeSrc":"19046:20:21","nodeType":"YulFunctionCall","src":"19046:20:21"},"variableNames":[{"name":"y","nativeSrc":"19041:1:21","nodeType":"YulIdentifier","src":"19041:1:21"}]},{"body":{"nativeSrc":"19088:22:21","nodeType":"YulBlock","src":"19088:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"19090:16:21","nodeType":"YulIdentifier","src":"19090:16:21"},"nativeSrc":"19090:18:21","nodeType":"YulFunctionCall","src":"19090:18:21"},"nativeSrc":"19090:18:21","nodeType":"YulExpressionStatement","src":"19090:18:21"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"19085:1:21","nodeType":"YulIdentifier","src":"19085:1:21"}],"functionName":{"name":"iszero","nativeSrc":"19078:6:21","nodeType":"YulIdentifier","src":"19078:6:21"},"nativeSrc":"19078:9:21","nodeType":"YulFunctionCall","src":"19078:9:21"},"nativeSrc":"19075:35:21","nodeType":"YulIf","src":"19075:35:21"},{"nativeSrc":"19120:14:21","nodeType":"YulAssignment","src":"19120:14:21","value":{"arguments":[{"name":"x","nativeSrc":"19129:1:21","nodeType":"YulIdentifier","src":"19129:1:21"},{"name":"y","nativeSrc":"19132:1:21","nodeType":"YulIdentifier","src":"19132:1:21"}],"functionName":{"name":"div","nativeSrc":"19125:3:21","nodeType":"YulIdentifier","src":"19125:3:21"},"nativeSrc":"19125:9:21","nodeType":"YulFunctionCall","src":"19125:9:21"},"variableNames":[{"name":"r","nativeSrc":"19120:1:21","nodeType":"YulIdentifier","src":"19120:1:21"}]}]},"name":"checked_div_t_uint256","nativeSrc":"18955:185:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"18986:1:21","nodeType":"YulTypedName","src":"18986:1:21","type":""},{"name":"y","nativeSrc":"18989:1:21","nodeType":"YulTypedName","src":"18989:1:21","type":""}],"returnVariables":[{"name":"r","nativeSrc":"18995:1:21","nodeType":"YulTypedName","src":"18995:1:21","type":""}],"src":"18955:185:21"},{"body":{"nativeSrc":"19191:149:21","nodeType":"YulBlock","src":"19191:149:21","statements":[{"nativeSrc":"19201:25:21","nodeType":"YulAssignment","src":"19201:25:21","value":{"arguments":[{"name":"x","nativeSrc":"19224:1:21","nodeType":"YulIdentifier","src":"19224:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19206:17:21","nodeType":"YulIdentifier","src":"19206:17:21"},"nativeSrc":"19206:20:21","nodeType":"YulFunctionCall","src":"19206:20:21"},"variableNames":[{"name":"x","nativeSrc":"19201:1:21","nodeType":"YulIdentifier","src":"19201:1:21"}]},{"nativeSrc":"19235:25:21","nodeType":"YulAssignment","src":"19235:25:21","value":{"arguments":[{"name":"y","nativeSrc":"19258:1:21","nodeType":"YulIdentifier","src":"19258:1:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19240:17:21","nodeType":"YulIdentifier","src":"19240:17:21"},"nativeSrc":"19240:20:21","nodeType":"YulFunctionCall","src":"19240:20:21"},"variableNames":[{"name":"y","nativeSrc":"19235:1:21","nodeType":"YulIdentifier","src":"19235:1:21"}]},{"nativeSrc":"19269:17:21","nodeType":"YulAssignment","src":"19269:17:21","value":{"arguments":[{"name":"x","nativeSrc":"19281:1:21","nodeType":"YulIdentifier","src":"19281:1:21"},{"name":"y","nativeSrc":"19284:1:21","nodeType":"YulIdentifier","src":"19284:1:21"}],"functionName":{"name":"sub","nativeSrc":"19277:3:21","nodeType":"YulIdentifier","src":"19277:3:21"},"nativeSrc":"19277:9:21","nodeType":"YulFunctionCall","src":"19277:9:21"},"variableNames":[{"name":"diff","nativeSrc":"19269:4:21","nodeType":"YulIdentifier","src":"19269:4:21"}]},{"body":{"nativeSrc":"19311:22:21","nodeType":"YulBlock","src":"19311:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"19313:16:21","nodeType":"YulIdentifier","src":"19313:16:21"},"nativeSrc":"19313:18:21","nodeType":"YulFunctionCall","src":"19313:18:21"},"nativeSrc":"19313:18:21","nodeType":"YulExpressionStatement","src":"19313:18:21"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"19302:4:21","nodeType":"YulIdentifier","src":"19302:4:21"},{"name":"x","nativeSrc":"19308:1:21","nodeType":"YulIdentifier","src":"19308:1:21"}],"functionName":{"name":"gt","nativeSrc":"19299:2:21","nodeType":"YulIdentifier","src":"19299:2:21"},"nativeSrc":"19299:11:21","nodeType":"YulFunctionCall","src":"19299:11:21"},"nativeSrc":"19296:37:21","nodeType":"YulIf","src":"19296:37:21"}]},"name":"checked_sub_t_uint256","nativeSrc":"19146:194:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"19177:1:21","nodeType":"YulTypedName","src":"19177:1:21","type":""},{"name":"y","nativeSrc":"19180:1:21","nodeType":"YulTypedName","src":"19180:1:21","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"19186:4:21","nodeType":"YulTypedName","src":"19186:4:21","type":""}],"src":"19146:194:21"},{"body":{"nativeSrc":"19389:190:21","nodeType":"YulBlock","src":"19389:190:21","statements":[{"nativeSrc":"19399:33:21","nodeType":"YulAssignment","src":"19399:33:21","value":{"arguments":[{"name":"value","nativeSrc":"19426:5:21","nodeType":"YulIdentifier","src":"19426:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19408:17:21","nodeType":"YulIdentifier","src":"19408:17:21"},"nativeSrc":"19408:24:21","nodeType":"YulFunctionCall","src":"19408:24:21"},"variableNames":[{"name":"value","nativeSrc":"19399:5:21","nodeType":"YulIdentifier","src":"19399:5:21"}]},{"body":{"nativeSrc":"19522:22:21","nodeType":"YulBlock","src":"19522:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"19524:16:21","nodeType":"YulIdentifier","src":"19524:16:21"},"nativeSrc":"19524:18:21","nodeType":"YulFunctionCall","src":"19524:18:21"},"nativeSrc":"19524:18:21","nodeType":"YulExpressionStatement","src":"19524:18:21"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"19447:5:21","nodeType":"YulIdentifier","src":"19447:5:21"},{"kind":"number","nativeSrc":"19454:66:21","nodeType":"YulLiteral","src":"19454:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"19444:2:21","nodeType":"YulIdentifier","src":"19444:2:21"},"nativeSrc":"19444:77:21","nodeType":"YulFunctionCall","src":"19444:77:21"},"nativeSrc":"19441:103:21","nodeType":"YulIf","src":"19441:103:21"},{"nativeSrc":"19553:20:21","nodeType":"YulAssignment","src":"19553:20:21","value":{"arguments":[{"name":"value","nativeSrc":"19564:5:21","nodeType":"YulIdentifier","src":"19564:5:21"},{"kind":"number","nativeSrc":"19571:1:21","nodeType":"YulLiteral","src":"19571:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"19560:3:21","nodeType":"YulIdentifier","src":"19560:3:21"},"nativeSrc":"19560:13:21","nodeType":"YulFunctionCall","src":"19560:13:21"},"variableNames":[{"name":"ret","nativeSrc":"19553:3:21","nodeType":"YulIdentifier","src":"19553:3:21"}]}]},"name":"increment_t_uint256","nativeSrc":"19346:233:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19375:5:21","nodeType":"YulTypedName","src":"19375:5:21","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"19385:3:21","nodeType":"YulTypedName","src":"19385:3:21","type":""}],"src":"19346:233:21"},{"body":{"nativeSrc":"19628:128:21","nodeType":"YulBlock","src":"19628:128:21","statements":[{"nativeSrc":"19638:33:21","nodeType":"YulAssignment","src":"19638:33:21","value":{"arguments":[{"name":"value","nativeSrc":"19665:5:21","nodeType":"YulIdentifier","src":"19665:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19647:17:21","nodeType":"YulIdentifier","src":"19647:17:21"},"nativeSrc":"19647:24:21","nodeType":"YulFunctionCall","src":"19647:24:21"},"variableNames":[{"name":"value","nativeSrc":"19638:5:21","nodeType":"YulIdentifier","src":"19638:5:21"}]},{"body":{"nativeSrc":"19699:22:21","nodeType":"YulBlock","src":"19699:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"19701:16:21","nodeType":"YulIdentifier","src":"19701:16:21"},"nativeSrc":"19701:18:21","nodeType":"YulFunctionCall","src":"19701:18:21"},"nativeSrc":"19701:18:21","nodeType":"YulExpressionStatement","src":"19701:18:21"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"19686:5:21","nodeType":"YulIdentifier","src":"19686:5:21"},{"kind":"number","nativeSrc":"19693:4:21","nodeType":"YulLiteral","src":"19693:4:21","type":"","value":"0x00"}],"functionName":{"name":"eq","nativeSrc":"19683:2:21","nodeType":"YulIdentifier","src":"19683:2:21"},"nativeSrc":"19683:15:21","nodeType":"YulFunctionCall","src":"19683:15:21"},"nativeSrc":"19680:41:21","nodeType":"YulIf","src":"19680:41:21"},{"nativeSrc":"19730:20:21","nodeType":"YulAssignment","src":"19730:20:21","value":{"arguments":[{"name":"value","nativeSrc":"19741:5:21","nodeType":"YulIdentifier","src":"19741:5:21"},{"kind":"number","nativeSrc":"19748:1:21","nodeType":"YulLiteral","src":"19748:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"19737:3:21","nodeType":"YulIdentifier","src":"19737:3:21"},"nativeSrc":"19737:13:21","nodeType":"YulFunctionCall","src":"19737:13:21"},"variableNames":[{"name":"ret","nativeSrc":"19730:3:21","nodeType":"YulIdentifier","src":"19730:3:21"}]}]},"name":"decrement_t_uint256","nativeSrc":"19585:171:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19614:5:21","nodeType":"YulTypedName","src":"19614:5:21","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"19624:3:21","nodeType":"YulTypedName","src":"19624:3:21","type":""}],"src":"19585:171:21"},{"body":{"nativeSrc":"19875:34:21","nodeType":"YulBlock","src":"19875:34:21","statements":[{"nativeSrc":"19885:18:21","nodeType":"YulAssignment","src":"19885:18:21","value":{"name":"pos","nativeSrc":"19900:3:21","nodeType":"YulIdentifier","src":"19900:3:21"},"variableNames":[{"name":"updated_pos","nativeSrc":"19885:11:21","nodeType":"YulIdentifier","src":"19885:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19762:147:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19847:3:21","nodeType":"YulTypedName","src":"19847:3:21","type":""},{"name":"length","nativeSrc":"19852:6:21","nodeType":"YulTypedName","src":"19852:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"19863:11:21","nodeType":"YulTypedName","src":"19863:11:21","type":""}],"src":"19762:147:21"},{"body":{"nativeSrc":"20021:8:21","nodeType":"YulBlock","src":"20021:8:21","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"19915:114:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"20013:6:21","nodeType":"YulTypedName","src":"20013:6:21","type":""}],"src":"19915:114:21"},{"body":{"nativeSrc":"20198:235:21","nodeType":"YulBlock","src":"20198:235:21","statements":[{"nativeSrc":"20208:90:21","nodeType":"YulAssignment","src":"20208:90:21","value":{"arguments":[{"name":"pos","nativeSrc":"20291:3:21","nodeType":"YulIdentifier","src":"20291:3:21"},{"kind":"number","nativeSrc":"20296:1:21","nodeType":"YulLiteral","src":"20296:1:21","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"20215:75:21","nodeType":"YulIdentifier","src":"20215:75:21"},"nativeSrc":"20215:83:21","nodeType":"YulFunctionCall","src":"20215:83:21"},"variableNames":[{"name":"pos","nativeSrc":"20208:3:21","nodeType":"YulIdentifier","src":"20208:3:21"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"20396:3:21","nodeType":"YulIdentifier","src":"20396:3:21"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"20307:88:21","nodeType":"YulIdentifier","src":"20307:88:21"},"nativeSrc":"20307:93:21","nodeType":"YulFunctionCall","src":"20307:93:21"},"nativeSrc":"20307:93:21","nodeType":"YulExpressionStatement","src":"20307:93:21"},{"nativeSrc":"20409:18:21","nodeType":"YulAssignment","src":"20409:18:21","value":{"arguments":[{"name":"pos","nativeSrc":"20420:3:21","nodeType":"YulIdentifier","src":"20420:3:21"},{"kind":"number","nativeSrc":"20425:1:21","nodeType":"YulLiteral","src":"20425:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20416:3:21","nodeType":"YulIdentifier","src":"20416:3:21"},"nativeSrc":"20416:11:21","nodeType":"YulFunctionCall","src":"20416:11:21"},"variableNames":[{"name":"end","nativeSrc":"20409:3:21","nodeType":"YulIdentifier","src":"20409:3:21"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"20035:398:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20186:3:21","nodeType":"YulTypedName","src":"20186:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20194:3:21","nodeType":"YulTypedName","src":"20194:3:21","type":""}],"src":"20035:398:21"},{"body":{"nativeSrc":"20627:191:21","nodeType":"YulBlock","src":"20627:191:21","statements":[{"nativeSrc":"20638:154:21","nodeType":"YulAssignment","src":"20638:154:21","value":{"arguments":[{"name":"pos","nativeSrc":"20788:3:21","nodeType":"YulIdentifier","src":"20788:3:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"20645:141:21","nodeType":"YulIdentifier","src":"20645:141:21"},"nativeSrc":"20645:147:21","nodeType":"YulFunctionCall","src":"20645:147:21"},"variableNames":[{"name":"pos","nativeSrc":"20638:3:21","nodeType":"YulIdentifier","src":"20638:3:21"}]},{"nativeSrc":"20802:10:21","nodeType":"YulAssignment","src":"20802:10:21","value":{"name":"pos","nativeSrc":"20809:3:21","nodeType":"YulIdentifier","src":"20809:3:21"},"variableNames":[{"name":"end","nativeSrc":"20802:3:21","nodeType":"YulIdentifier","src":"20802:3:21"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"20439:379:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20614:3:21","nodeType":"YulTypedName","src":"20614:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20623:3:21","nodeType":"YulTypedName","src":"20623:3:21","type":""}],"src":"20439:379:21"},{"body":{"nativeSrc":"20871:32:21","nodeType":"YulBlock","src":"20871:32:21","statements":[{"nativeSrc":"20881:16:21","nodeType":"YulAssignment","src":"20881:16:21","value":{"name":"value","nativeSrc":"20892:5:21","nodeType":"YulIdentifier","src":"20892:5:21"},"variableNames":[{"name":"aligned","nativeSrc":"20881:7:21","nodeType":"YulIdentifier","src":"20881:7:21"}]}]},"name":"leftAlign_t_bytes32","nativeSrc":"20824:79:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20853:5:21","nodeType":"YulTypedName","src":"20853:5:21","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"20863:7:21","nodeType":"YulTypedName","src":"20863:7:21","type":""}],"src":"20824:79:21"},{"body":{"nativeSrc":"20992:74:21","nodeType":"YulBlock","src":"20992:74:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"21009:3:21","nodeType":"YulIdentifier","src":"21009:3:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"21052:5:21","nodeType":"YulIdentifier","src":"21052:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"21034:17:21","nodeType":"YulIdentifier","src":"21034:17:21"},"nativeSrc":"21034:24:21","nodeType":"YulFunctionCall","src":"21034:24:21"}],"functionName":{"name":"leftAlign_t_bytes32","nativeSrc":"21014:19:21","nodeType":"YulIdentifier","src":"21014:19:21"},"nativeSrc":"21014:45:21","nodeType":"YulFunctionCall","src":"21014:45:21"}],"functionName":{"name":"mstore","nativeSrc":"21002:6:21","nodeType":"YulIdentifier","src":"21002:6:21"},"nativeSrc":"21002:58:21","nodeType":"YulFunctionCall","src":"21002:58:21"},"nativeSrc":"21002:58:21","nodeType":"YulExpressionStatement","src":"21002:58:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nativeSrc":"20909:157:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20980:5:21","nodeType":"YulTypedName","src":"20980:5:21","type":""},{"name":"pos","nativeSrc":"20987:3:21","nodeType":"YulTypedName","src":"20987:3:21","type":""}],"src":"20909:157:21"},{"body":{"nativeSrc":"21272:479:21","nodeType":"YulBlock","src":"21272:479:21","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"21345:6:21","nodeType":"YulIdentifier","src":"21345:6:21"},{"name":"pos","nativeSrc":"21354:3:21","nodeType":"YulIdentifier","src":"21354:3:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nativeSrc":"21283:61:21","nodeType":"YulIdentifier","src":"21283:61:21"},"nativeSrc":"21283:75:21","nodeType":"YulFunctionCall","src":"21283:75:21"},"nativeSrc":"21283:75:21","nodeType":"YulExpressionStatement","src":"21283:75:21"},{"nativeSrc":"21367:19:21","nodeType":"YulAssignment","src":"21367:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"21378:3:21","nodeType":"YulIdentifier","src":"21378:3:21"},{"kind":"number","nativeSrc":"21383:2:21","nodeType":"YulLiteral","src":"21383:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21374:3:21","nodeType":"YulIdentifier","src":"21374:3:21"},"nativeSrc":"21374:12:21","nodeType":"YulFunctionCall","src":"21374:12:21"},"variableNames":[{"name":"pos","nativeSrc":"21367:3:21","nodeType":"YulIdentifier","src":"21367:3:21"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21458:6:21","nodeType":"YulIdentifier","src":"21458:6:21"},{"name":"pos","nativeSrc":"21467:3:21","nodeType":"YulIdentifier","src":"21467:3:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"21396:61:21","nodeType":"YulIdentifier","src":"21396:61:21"},"nativeSrc":"21396:75:21","nodeType":"YulFunctionCall","src":"21396:75:21"},"nativeSrc":"21396:75:21","nodeType":"YulExpressionStatement","src":"21396:75:21"},{"nativeSrc":"21480:19:21","nodeType":"YulAssignment","src":"21480:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"21491:3:21","nodeType":"YulIdentifier","src":"21491:3:21"},{"kind":"number","nativeSrc":"21496:2:21","nodeType":"YulLiteral","src":"21496:2:21","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"21487:3:21","nodeType":"YulIdentifier","src":"21487:3:21"},"nativeSrc":"21487:12:21","nodeType":"YulFunctionCall","src":"21487:12:21"},"variableNames":[{"name":"pos","nativeSrc":"21480:3:21","nodeType":"YulIdentifier","src":"21480:3:21"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"21571:6:21","nodeType":"YulIdentifier","src":"21571:6:21"},{"name":"pos","nativeSrc":"21580:3:21","nodeType":"YulIdentifier","src":"21580:3:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"21509:61:21","nodeType":"YulIdentifier","src":"21509:61:21"},"nativeSrc":"21509:75:21","nodeType":"YulFunctionCall","src":"21509:75:21"},"nativeSrc":"21509:75:21","nodeType":"YulExpressionStatement","src":"21509:75:21"},{"nativeSrc":"21593:19:21","nodeType":"YulAssignment","src":"21593:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"21604:3:21","nodeType":"YulIdentifier","src":"21604:3:21"},{"kind":"number","nativeSrc":"21609:2:21","nodeType":"YulLiteral","src":"21609:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21600:3:21","nodeType":"YulIdentifier","src":"21600:3:21"},"nativeSrc":"21600:12:21","nodeType":"YulFunctionCall","src":"21600:12:21"},"variableNames":[{"name":"pos","nativeSrc":"21593:3:21","nodeType":"YulIdentifier","src":"21593:3:21"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"21684:6:21","nodeType":"YulIdentifier","src":"21684:6:21"},{"name":"pos","nativeSrc":"21693:3:21","nodeType":"YulIdentifier","src":"21693:3:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"21622:61:21","nodeType":"YulIdentifier","src":"21622:61:21"},"nativeSrc":"21622:75:21","nodeType":"YulFunctionCall","src":"21622:75:21"},"nativeSrc":"21622:75:21","nodeType":"YulExpressionStatement","src":"21622:75:21"},{"nativeSrc":"21706:19:21","nodeType":"YulAssignment","src":"21706:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"21717:3:21","nodeType":"YulIdentifier","src":"21717:3:21"},{"kind":"number","nativeSrc":"21722:2:21","nodeType":"YulLiteral","src":"21722:2:21","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"21713:3:21","nodeType":"YulIdentifier","src":"21713:3:21"},"nativeSrc":"21713:12:21","nodeType":"YulFunctionCall","src":"21713:12:21"},"variableNames":[{"name":"pos","nativeSrc":"21706:3:21","nodeType":"YulIdentifier","src":"21706:3:21"}]},{"nativeSrc":"21735:10:21","nodeType":"YulAssignment","src":"21735:10:21","value":{"name":"pos","nativeSrc":"21742:3:21","nodeType":"YulIdentifier","src":"21742:3:21"},"variableNames":[{"name":"end","nativeSrc":"21735:3:21","nodeType":"YulIdentifier","src":"21735:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_address_t_uint256_t_address__to_t_bytes32_t_address_t_uint256_t_address__nonPadded_inplace_fromStack_reversed","nativeSrc":"21072:679:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21227:3:21","nodeType":"YulTypedName","src":"21227:3:21","type":""},{"name":"value3","nativeSrc":"21233:6:21","nodeType":"YulTypedName","src":"21233:6:21","type":""},{"name":"value2","nativeSrc":"21241:6:21","nodeType":"YulTypedName","src":"21241:6:21","type":""},{"name":"value1","nativeSrc":"21249:6:21","nodeType":"YulTypedName","src":"21249:6:21","type":""},{"name":"value0","nativeSrc":"21257:6:21","nodeType":"YulTypedName","src":"21257:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21268:3:21","nodeType":"YulTypedName","src":"21268:3:21","type":""}],"src":"21072:679:21"},{"body":{"nativeSrc":"21785:152:21","nodeType":"YulBlock","src":"21785:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21802:1:21","nodeType":"YulLiteral","src":"21802:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"21805:77:21","nodeType":"YulLiteral","src":"21805:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"21795:6:21","nodeType":"YulIdentifier","src":"21795:6:21"},"nativeSrc":"21795:88:21","nodeType":"YulFunctionCall","src":"21795:88:21"},"nativeSrc":"21795:88:21","nodeType":"YulExpressionStatement","src":"21795:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21899:1:21","nodeType":"YulLiteral","src":"21899:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"21902:4:21","nodeType":"YulLiteral","src":"21902:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"21892:6:21","nodeType":"YulIdentifier","src":"21892:6:21"},"nativeSrc":"21892:15:21","nodeType":"YulFunctionCall","src":"21892:15:21"},"nativeSrc":"21892:15:21","nodeType":"YulExpressionStatement","src":"21892:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21923:1:21","nodeType":"YulLiteral","src":"21923:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"21926:4:21","nodeType":"YulLiteral","src":"21926:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"21916:6:21","nodeType":"YulIdentifier","src":"21916:6:21"},"nativeSrc":"21916:15:21","nodeType":"YulFunctionCall","src":"21916:15:21"},"nativeSrc":"21916:15:21","nodeType":"YulExpressionStatement","src":"21916:15:21"}]},"name":"panic_error_0x32","nativeSrc":"21757:180:21","nodeType":"YulFunctionDefinition","src":"21757:180:21"},{"body":{"nativeSrc":"22032:28:21","nodeType":"YulBlock","src":"22032:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22049:1:21","nodeType":"YulLiteral","src":"22049:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"22052:1:21","nodeType":"YulLiteral","src":"22052:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"22042:6:21","nodeType":"YulIdentifier","src":"22042:6:21"},"nativeSrc":"22042:12:21","nodeType":"YulFunctionCall","src":"22042:12:21"},"nativeSrc":"22042:12:21","nodeType":"YulExpressionStatement","src":"22042:12:21"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nativeSrc":"21943:117:21","nodeType":"YulFunctionDefinition","src":"21943:117:21"},{"body":{"nativeSrc":"22155:28:21","nodeType":"YulBlock","src":"22155:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22172:1:21","nodeType":"YulLiteral","src":"22172:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"22175:1:21","nodeType":"YulLiteral","src":"22175:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"22165:6:21","nodeType":"YulIdentifier","src":"22165:6:21"},"nativeSrc":"22165:12:21","nodeType":"YulFunctionCall","src":"22165:12:21"},"nativeSrc":"22165:12:21","nodeType":"YulExpressionStatement","src":"22165:12:21"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nativeSrc":"22066:117:21","nodeType":"YulFunctionDefinition","src":"22066:117:21"},{"body":{"nativeSrc":"22278:28:21","nodeType":"YulBlock","src":"22278:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22295:1:21","nodeType":"YulLiteral","src":"22295:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"22298:1:21","nodeType":"YulLiteral","src":"22298:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"22288:6:21","nodeType":"YulIdentifier","src":"22288:6:21"},"nativeSrc":"22288:12:21","nodeType":"YulFunctionCall","src":"22288:12:21"},"nativeSrc":"22288:12:21","nodeType":"YulExpressionStatement","src":"22288:12:21"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nativeSrc":"22189:117:21","nodeType":"YulFunctionDefinition","src":"22189:117:21"},{"body":{"nativeSrc":"22402:634:21","nodeType":"YulBlock","src":"22402:634:21","statements":[{"nativeSrc":"22412:51:21","nodeType":"YulVariableDeclaration","src":"22412:51:21","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"22451:11:21","nodeType":"YulIdentifier","src":"22451:11:21"}],"functionName":{"name":"calldataload","nativeSrc":"22438:12:21","nodeType":"YulIdentifier","src":"22438:12:21"},"nativeSrc":"22438:25:21","nodeType":"YulFunctionCall","src":"22438:25:21"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"22416:18:21","nodeType":"YulTypedName","src":"22416:18:21","type":""}]},{"body":{"nativeSrc":"22557:83:21","nodeType":"YulBlock","src":"22557:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nativeSrc":"22559:77:21","nodeType":"YulIdentifier","src":"22559:77:21"},"nativeSrc":"22559:79:21","nodeType":"YulFunctionCall","src":"22559:79:21"},"nativeSrc":"22559:79:21","nodeType":"YulExpressionStatement","src":"22559:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"22486:18:21","nodeType":"YulIdentifier","src":"22486:18:21"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"22514:12:21","nodeType":"YulIdentifier","src":"22514:12:21"},"nativeSrc":"22514:14:21","nodeType":"YulFunctionCall","src":"22514:14:21"},{"name":"base_ref","nativeSrc":"22530:8:21","nodeType":"YulIdentifier","src":"22530:8:21"}],"functionName":{"name":"sub","nativeSrc":"22510:3:21","nodeType":"YulIdentifier","src":"22510:3:21"},"nativeSrc":"22510:29:21","nodeType":"YulFunctionCall","src":"22510:29:21"},{"arguments":[{"kind":"number","nativeSrc":"22545:4:21","nodeType":"YulLiteral","src":"22545:4:21","type":"","value":"0x20"},{"kind":"number","nativeSrc":"22551:1:21","nodeType":"YulLiteral","src":"22551:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"22541:3:21","nodeType":"YulIdentifier","src":"22541:3:21"},"nativeSrc":"22541:12:21","nodeType":"YulFunctionCall","src":"22541:12:21"}],"functionName":{"name":"sub","nativeSrc":"22506:3:21","nodeType":"YulIdentifier","src":"22506:3:21"},"nativeSrc":"22506:48:21","nodeType":"YulFunctionCall","src":"22506:48:21"}],"functionName":{"name":"slt","nativeSrc":"22482:3:21","nodeType":"YulIdentifier","src":"22482:3:21"},"nativeSrc":"22482:73:21","nodeType":"YulFunctionCall","src":"22482:73:21"}],"functionName":{"name":"iszero","nativeSrc":"22475:6:21","nodeType":"YulIdentifier","src":"22475:6:21"},"nativeSrc":"22475:81:21","nodeType":"YulFunctionCall","src":"22475:81:21"},"nativeSrc":"22472:168:21","nodeType":"YulIf","src":"22472:168:21"},{"nativeSrc":"22649:41:21","nodeType":"YulAssignment","src":"22649:41:21","value":{"arguments":[{"name":"base_ref","nativeSrc":"22661:8:21","nodeType":"YulIdentifier","src":"22661:8:21"},{"name":"rel_offset_of_tail","nativeSrc":"22671:18:21","nodeType":"YulIdentifier","src":"22671:18:21"}],"functionName":{"name":"add","nativeSrc":"22657:3:21","nodeType":"YulIdentifier","src":"22657:3:21"},"nativeSrc":"22657:33:21","nodeType":"YulFunctionCall","src":"22657:33:21"},"variableNames":[{"name":"addr","nativeSrc":"22649:4:21","nodeType":"YulIdentifier","src":"22649:4:21"}]},{"nativeSrc":"22700:28:21","nodeType":"YulAssignment","src":"22700:28:21","value":{"arguments":[{"name":"addr","nativeSrc":"22723:4:21","nodeType":"YulIdentifier","src":"22723:4:21"}],"functionName":{"name":"calldataload","nativeSrc":"22710:12:21","nodeType":"YulIdentifier","src":"22710:12:21"},"nativeSrc":"22710:18:21","nodeType":"YulFunctionCall","src":"22710:18:21"},"variableNames":[{"name":"length","nativeSrc":"22700:6:21","nodeType":"YulIdentifier","src":"22700:6:21"}]},{"body":{"nativeSrc":"22771:83:21","nodeType":"YulBlock","src":"22771:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nativeSrc":"22773:77:21","nodeType":"YulIdentifier","src":"22773:77:21"},"nativeSrc":"22773:79:21","nodeType":"YulFunctionCall","src":"22773:79:21"},"nativeSrc":"22773:79:21","nodeType":"YulExpressionStatement","src":"22773:79:21"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"22743:6:21","nodeType":"YulIdentifier","src":"22743:6:21"},{"kind":"number","nativeSrc":"22751:18:21","nodeType":"YulLiteral","src":"22751:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"22740:2:21","nodeType":"YulIdentifier","src":"22740:2:21"},"nativeSrc":"22740:30:21","nodeType":"YulFunctionCall","src":"22740:30:21"},"nativeSrc":"22737:117:21","nodeType":"YulIf","src":"22737:117:21"},{"nativeSrc":"22863:21:21","nodeType":"YulAssignment","src":"22863:21:21","value":{"arguments":[{"name":"addr","nativeSrc":"22875:4:21","nodeType":"YulIdentifier","src":"22875:4:21"},{"kind":"number","nativeSrc":"22881:2:21","nodeType":"YulLiteral","src":"22881:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22871:3:21","nodeType":"YulIdentifier","src":"22871:3:21"},"nativeSrc":"22871:13:21","nodeType":"YulFunctionCall","src":"22871:13:21"},"variableNames":[{"name":"addr","nativeSrc":"22863:4:21","nodeType":"YulIdentifier","src":"22863:4:21"}]},{"body":{"nativeSrc":"22946:83:21","nodeType":"YulBlock","src":"22946:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nativeSrc":"22948:77:21","nodeType":"YulIdentifier","src":"22948:77:21"},"nativeSrc":"22948:79:21","nodeType":"YulFunctionCall","src":"22948:79:21"},"nativeSrc":"22948:79:21","nodeType":"YulExpressionStatement","src":"22948:79:21"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"22900:4:21","nodeType":"YulIdentifier","src":"22900:4:21"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"22910:12:21","nodeType":"YulIdentifier","src":"22910:12:21"},"nativeSrc":"22910:14:21","nodeType":"YulFunctionCall","src":"22910:14:21"},{"arguments":[{"name":"length","nativeSrc":"22930:6:21","nodeType":"YulIdentifier","src":"22930:6:21"},{"kind":"number","nativeSrc":"22938:4:21","nodeType":"YulLiteral","src":"22938:4:21","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"22926:3:21","nodeType":"YulIdentifier","src":"22926:3:21"},"nativeSrc":"22926:17:21","nodeType":"YulFunctionCall","src":"22926:17:21"}],"functionName":{"name":"sub","nativeSrc":"22906:3:21","nodeType":"YulIdentifier","src":"22906:3:21"},"nativeSrc":"22906:38:21","nodeType":"YulFunctionCall","src":"22906:38:21"}],"functionName":{"name":"sgt","nativeSrc":"22896:3:21","nodeType":"YulIdentifier","src":"22896:3:21"},"nativeSrc":"22896:49:21","nodeType":"YulFunctionCall","src":"22896:49:21"},"nativeSrc":"22893:136:21","nodeType":"YulIf","src":"22893:136:21"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nativeSrc":"22312:724:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"22363:8:21","nodeType":"YulTypedName","src":"22363:8:21","type":""},{"name":"ptr_to_tail","nativeSrc":"22373:11:21","nodeType":"YulTypedName","src":"22373:11:21","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"22389:4:21","nodeType":"YulTypedName","src":"22389:4:21","type":""},{"name":"length","nativeSrc":"22395:6:21","nodeType":"YulTypedName","src":"22395:6:21","type":""}],"src":"22312:724:21"},{"body":{"nativeSrc":"23096:87:21","nodeType":"YulBlock","src":"23096:87:21","statements":[{"nativeSrc":"23106:11:21","nodeType":"YulAssignment","src":"23106:11:21","value":{"name":"ptr","nativeSrc":"23114:3:21","nodeType":"YulIdentifier","src":"23114:3:21"},"variableNames":[{"name":"data","nativeSrc":"23106:4:21","nodeType":"YulIdentifier","src":"23106:4:21"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23134:1:21","nodeType":"YulLiteral","src":"23134:1:21","type":"","value":"0"},{"name":"ptr","nativeSrc":"23137:3:21","nodeType":"YulIdentifier","src":"23137:3:21"}],"functionName":{"name":"mstore","nativeSrc":"23127:6:21","nodeType":"YulIdentifier","src":"23127:6:21"},"nativeSrc":"23127:14:21","nodeType":"YulFunctionCall","src":"23127:14:21"},"nativeSrc":"23127:14:21","nodeType":"YulExpressionStatement","src":"23127:14:21"},{"nativeSrc":"23150:26:21","nodeType":"YulAssignment","src":"23150:26:21","value":{"arguments":[{"kind":"number","nativeSrc":"23168:1:21","nodeType":"YulLiteral","src":"23168:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"23171:4:21","nodeType":"YulLiteral","src":"23171:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"23158:9:21","nodeType":"YulIdentifier","src":"23158:9:21"},"nativeSrc":"23158:18:21","nodeType":"YulFunctionCall","src":"23158:18:21"},"variableNames":[{"name":"data","nativeSrc":"23150:4:21","nodeType":"YulIdentifier","src":"23150:4:21"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"23042:141:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"23083:3:21","nodeType":"YulTypedName","src":"23083:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"23091:4:21","nodeType":"YulTypedName","src":"23091:4:21","type":""}],"src":"23042:141:21"},{"body":{"nativeSrc":"23233:49:21","nodeType":"YulBlock","src":"23233:49:21","statements":[{"nativeSrc":"23243:33:21","nodeType":"YulAssignment","src":"23243:33:21","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23261:5:21","nodeType":"YulIdentifier","src":"23261:5:21"},{"kind":"number","nativeSrc":"23268:2:21","nodeType":"YulLiteral","src":"23268:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"23257:3:21","nodeType":"YulIdentifier","src":"23257:3:21"},"nativeSrc":"23257:14:21","nodeType":"YulFunctionCall","src":"23257:14:21"},{"kind":"number","nativeSrc":"23273:2:21","nodeType":"YulLiteral","src":"23273:2:21","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"23253:3:21","nodeType":"YulIdentifier","src":"23253:3:21"},"nativeSrc":"23253:23:21","nodeType":"YulFunctionCall","src":"23253:23:21"},"variableNames":[{"name":"result","nativeSrc":"23243:6:21","nodeType":"YulIdentifier","src":"23243:6:21"}]}]},"name":"divide_by_32_ceil","nativeSrc":"23189:93:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23216:5:21","nodeType":"YulTypedName","src":"23216:5:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"23226:6:21","nodeType":"YulTypedName","src":"23226:6:21","type":""}],"src":"23189:93:21"},{"body":{"nativeSrc":"23341:54:21","nodeType":"YulBlock","src":"23341:54:21","statements":[{"nativeSrc":"23351:37:21","nodeType":"YulAssignment","src":"23351:37:21","value":{"arguments":[{"name":"bits","nativeSrc":"23376:4:21","nodeType":"YulIdentifier","src":"23376:4:21"},{"name":"value","nativeSrc":"23382:5:21","nodeType":"YulIdentifier","src":"23382:5:21"}],"functionName":{"name":"shl","nativeSrc":"23372:3:21","nodeType":"YulIdentifier","src":"23372:3:21"},"nativeSrc":"23372:16:21","nodeType":"YulFunctionCall","src":"23372:16:21"},"variableNames":[{"name":"newValue","nativeSrc":"23351:8:21","nodeType":"YulIdentifier","src":"23351:8:21"}]}]},"name":"shift_left_dynamic","nativeSrc":"23288:107:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"23316:4:21","nodeType":"YulTypedName","src":"23316:4:21","type":""},{"name":"value","nativeSrc":"23322:5:21","nodeType":"YulTypedName","src":"23322:5:21","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"23332:8:21","nodeType":"YulTypedName","src":"23332:8:21","type":""}],"src":"23288:107:21"},{"body":{"nativeSrc":"23477:317:21","nodeType":"YulBlock","src":"23477:317:21","statements":[{"nativeSrc":"23487:35:21","nodeType":"YulVariableDeclaration","src":"23487:35:21","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"23508:10:21","nodeType":"YulIdentifier","src":"23508:10:21"},{"kind":"number","nativeSrc":"23520:1:21","nodeType":"YulLiteral","src":"23520:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"23504:3:21","nodeType":"YulIdentifier","src":"23504:3:21"},"nativeSrc":"23504:18:21","nodeType":"YulFunctionCall","src":"23504:18:21"},"variables":[{"name":"shiftBits","nativeSrc":"23491:9:21","nodeType":"YulTypedName","src":"23491:9:21","type":""}]},{"nativeSrc":"23531:109:21","nodeType":"YulVariableDeclaration","src":"23531:109:21","value":{"arguments":[{"name":"shiftBits","nativeSrc":"23562:9:21","nodeType":"YulIdentifier","src":"23562:9:21"},{"kind":"number","nativeSrc":"23573:66:21","nodeType":"YulLiteral","src":"23573:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"23543:18:21","nodeType":"YulIdentifier","src":"23543:18:21"},"nativeSrc":"23543:97:21","nodeType":"YulFunctionCall","src":"23543:97:21"},"variables":[{"name":"mask","nativeSrc":"23535:4:21","nodeType":"YulTypedName","src":"23535:4:21","type":""}]},{"nativeSrc":"23649:51:21","nodeType":"YulAssignment","src":"23649:51:21","value":{"arguments":[{"name":"shiftBits","nativeSrc":"23680:9:21","nodeType":"YulIdentifier","src":"23680:9:21"},{"name":"toInsert","nativeSrc":"23691:8:21","nodeType":"YulIdentifier","src":"23691:8:21"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"23661:18:21","nodeType":"YulIdentifier","src":"23661:18:21"},"nativeSrc":"23661:39:21","nodeType":"YulFunctionCall","src":"23661:39:21"},"variableNames":[{"name":"toInsert","nativeSrc":"23649:8:21","nodeType":"YulIdentifier","src":"23649:8:21"}]},{"nativeSrc":"23709:30:21","nodeType":"YulAssignment","src":"23709:30:21","value":{"arguments":[{"name":"value","nativeSrc":"23722:5:21","nodeType":"YulIdentifier","src":"23722:5:21"},{"arguments":[{"name":"mask","nativeSrc":"23733:4:21","nodeType":"YulIdentifier","src":"23733:4:21"}],"functionName":{"name":"not","nativeSrc":"23729:3:21","nodeType":"YulIdentifier","src":"23729:3:21"},"nativeSrc":"23729:9:21","nodeType":"YulFunctionCall","src":"23729:9:21"}],"functionName":{"name":"and","nativeSrc":"23718:3:21","nodeType":"YulIdentifier","src":"23718:3:21"},"nativeSrc":"23718:21:21","nodeType":"YulFunctionCall","src":"23718:21:21"},"variableNames":[{"name":"value","nativeSrc":"23709:5:21","nodeType":"YulIdentifier","src":"23709:5:21"}]},{"nativeSrc":"23748:40:21","nodeType":"YulAssignment","src":"23748:40:21","value":{"arguments":[{"name":"value","nativeSrc":"23761:5:21","nodeType":"YulIdentifier","src":"23761:5:21"},{"arguments":[{"name":"toInsert","nativeSrc":"23772:8:21","nodeType":"YulIdentifier","src":"23772:8:21"},{"name":"mask","nativeSrc":"23782:4:21","nodeType":"YulIdentifier","src":"23782:4:21"}],"functionName":{"name":"and","nativeSrc":"23768:3:21","nodeType":"YulIdentifier","src":"23768:3:21"},"nativeSrc":"23768:19:21","nodeType":"YulFunctionCall","src":"23768:19:21"}],"functionName":{"name":"or","nativeSrc":"23758:2:21","nodeType":"YulIdentifier","src":"23758:2:21"},"nativeSrc":"23758:30:21","nodeType":"YulFunctionCall","src":"23758:30:21"},"variableNames":[{"name":"result","nativeSrc":"23748:6:21","nodeType":"YulIdentifier","src":"23748:6:21"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"23401:393:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23438:5:21","nodeType":"YulTypedName","src":"23438:5:21","type":""},{"name":"shiftBytes","nativeSrc":"23445:10:21","nodeType":"YulTypedName","src":"23445:10:21","type":""},{"name":"toInsert","nativeSrc":"23457:8:21","nodeType":"YulTypedName","src":"23457:8:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"23470:6:21","nodeType":"YulTypedName","src":"23470:6:21","type":""}],"src":"23401:393:21"},{"body":{"nativeSrc":"23832:28:21","nodeType":"YulBlock","src":"23832:28:21","statements":[{"nativeSrc":"23842:12:21","nodeType":"YulAssignment","src":"23842:12:21","value":{"name":"value","nativeSrc":"23849:5:21","nodeType":"YulIdentifier","src":"23849:5:21"},"variableNames":[{"name":"ret","nativeSrc":"23842:3:21","nodeType":"YulIdentifier","src":"23842:3:21"}]}]},"name":"identity","nativeSrc":"23800:60:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23818:5:21","nodeType":"YulTypedName","src":"23818:5:21","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"23828:3:21","nodeType":"YulTypedName","src":"23828:3:21","type":""}],"src":"23800:60:21"},{"body":{"nativeSrc":"23926:82:21","nodeType":"YulBlock","src":"23926:82:21","statements":[{"nativeSrc":"23936:66:21","nodeType":"YulAssignment","src":"23936:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23994:5:21","nodeType":"YulIdentifier","src":"23994:5:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"23976:17:21","nodeType":"YulIdentifier","src":"23976:17:21"},"nativeSrc":"23976:24:21","nodeType":"YulFunctionCall","src":"23976:24:21"}],"functionName":{"name":"identity","nativeSrc":"23967:8:21","nodeType":"YulIdentifier","src":"23967:8:21"},"nativeSrc":"23967:34:21","nodeType":"YulFunctionCall","src":"23967:34:21"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"23949:17:21","nodeType":"YulIdentifier","src":"23949:17:21"},"nativeSrc":"23949:53:21","nodeType":"YulFunctionCall","src":"23949:53:21"},"variableNames":[{"name":"converted","nativeSrc":"23936:9:21","nodeType":"YulIdentifier","src":"23936:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"23866:142:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23906:5:21","nodeType":"YulTypedName","src":"23906:5:21","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"23916:9:21","nodeType":"YulTypedName","src":"23916:9:21","type":""}],"src":"23866:142:21"},{"body":{"nativeSrc":"24061:28:21","nodeType":"YulBlock","src":"24061:28:21","statements":[{"nativeSrc":"24071:12:21","nodeType":"YulAssignment","src":"24071:12:21","value":{"name":"value","nativeSrc":"24078:5:21","nodeType":"YulIdentifier","src":"24078:5:21"},"variableNames":[{"name":"ret","nativeSrc":"24071:3:21","nodeType":"YulIdentifier","src":"24071:3:21"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"24014:75:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24047:5:21","nodeType":"YulTypedName","src":"24047:5:21","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"24057:3:21","nodeType":"YulTypedName","src":"24057:3:21","type":""}],"src":"24014:75:21"},{"body":{"nativeSrc":"24171:193:21","nodeType":"YulBlock","src":"24171:193:21","statements":[{"nativeSrc":"24181:63:21","nodeType":"YulVariableDeclaration","src":"24181:63:21","value":{"arguments":[{"name":"value_0","nativeSrc":"24236:7:21","nodeType":"YulIdentifier","src":"24236:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"24205:30:21","nodeType":"YulIdentifier","src":"24205:30:21"},"nativeSrc":"24205:39:21","nodeType":"YulFunctionCall","src":"24205:39:21"},"variables":[{"name":"convertedValue_0","nativeSrc":"24185:16:21","nodeType":"YulTypedName","src":"24185:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"24260:4:21","nodeType":"YulIdentifier","src":"24260:4:21"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"24300:4:21","nodeType":"YulIdentifier","src":"24300:4:21"}],"functionName":{"name":"sload","nativeSrc":"24294:5:21","nodeType":"YulIdentifier","src":"24294:5:21"},"nativeSrc":"24294:11:21","nodeType":"YulFunctionCall","src":"24294:11:21"},{"name":"offset","nativeSrc":"24307:6:21","nodeType":"YulIdentifier","src":"24307:6:21"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"24339:16:21","nodeType":"YulIdentifier","src":"24339:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"24315:23:21","nodeType":"YulIdentifier","src":"24315:23:21"},"nativeSrc":"24315:41:21","nodeType":"YulFunctionCall","src":"24315:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"24266:27:21","nodeType":"YulIdentifier","src":"24266:27:21"},"nativeSrc":"24266:91:21","nodeType":"YulFunctionCall","src":"24266:91:21"}],"functionName":{"name":"sstore","nativeSrc":"24253:6:21","nodeType":"YulIdentifier","src":"24253:6:21"},"nativeSrc":"24253:105:21","nodeType":"YulFunctionCall","src":"24253:105:21"},"nativeSrc":"24253:105:21","nodeType":"YulExpressionStatement","src":"24253:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"24095:269:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"24148:4:21","nodeType":"YulTypedName","src":"24148:4:21","type":""},{"name":"offset","nativeSrc":"24154:6:21","nodeType":"YulTypedName","src":"24154:6:21","type":""},{"name":"value_0","nativeSrc":"24162:7:21","nodeType":"YulTypedName","src":"24162:7:21","type":""}],"src":"24095:269:21"},{"body":{"nativeSrc":"24419:24:21","nodeType":"YulBlock","src":"24419:24:21","statements":[{"nativeSrc":"24429:8:21","nodeType":"YulAssignment","src":"24429:8:21","value":{"kind":"number","nativeSrc":"24436:1:21","nodeType":"YulLiteral","src":"24436:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"24429:3:21","nodeType":"YulIdentifier","src":"24429:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"24370:73:21","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"24415:3:21","nodeType":"YulTypedName","src":"24415:3:21","type":""}],"src":"24370:73:21"},{"body":{"nativeSrc":"24502:136:21","nodeType":"YulBlock","src":"24502:136:21","statements":[{"nativeSrc":"24512:46:21","nodeType":"YulVariableDeclaration","src":"24512:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"24526:30:21","nodeType":"YulIdentifier","src":"24526:30:21"},"nativeSrc":"24526:32:21","nodeType":"YulFunctionCall","src":"24526:32:21"},"variables":[{"name":"zero_0","nativeSrc":"24516:6:21","nodeType":"YulTypedName","src":"24516:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"24611:4:21","nodeType":"YulIdentifier","src":"24611:4:21"},{"name":"offset","nativeSrc":"24617:6:21","nodeType":"YulIdentifier","src":"24617:6:21"},{"name":"zero_0","nativeSrc":"24625:6:21","nodeType":"YulIdentifier","src":"24625:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"24567:43:21","nodeType":"YulIdentifier","src":"24567:43:21"},"nativeSrc":"24567:65:21","nodeType":"YulFunctionCall","src":"24567:65:21"},"nativeSrc":"24567:65:21","nodeType":"YulExpressionStatement","src":"24567:65:21"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"24449:189:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"24488:4:21","nodeType":"YulTypedName","src":"24488:4:21","type":""},{"name":"offset","nativeSrc":"24494:6:21","nodeType":"YulTypedName","src":"24494:6:21","type":""}],"src":"24449:189:21"},{"body":{"nativeSrc":"24694:136:21","nodeType":"YulBlock","src":"24694:136:21","statements":[{"body":{"nativeSrc":"24761:63:21","nodeType":"YulBlock","src":"24761:63:21","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"24805:5:21","nodeType":"YulIdentifier","src":"24805:5:21"},{"kind":"number","nativeSrc":"24812:1:21","nodeType":"YulLiteral","src":"24812:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"24775:29:21","nodeType":"YulIdentifier","src":"24775:29:21"},"nativeSrc":"24775:39:21","nodeType":"YulFunctionCall","src":"24775:39:21"},"nativeSrc":"24775:39:21","nodeType":"YulExpressionStatement","src":"24775:39:21"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"24714:5:21","nodeType":"YulIdentifier","src":"24714:5:21"},{"name":"end","nativeSrc":"24721:3:21","nodeType":"YulIdentifier","src":"24721:3:21"}],"functionName":{"name":"lt","nativeSrc":"24711:2:21","nodeType":"YulIdentifier","src":"24711:2:21"},"nativeSrc":"24711:14:21","nodeType":"YulFunctionCall","src":"24711:14:21"},"nativeSrc":"24704:120:21","nodeType":"YulForLoop","post":{"nativeSrc":"24726:26:21","nodeType":"YulBlock","src":"24726:26:21","statements":[{"nativeSrc":"24728:22:21","nodeType":"YulAssignment","src":"24728:22:21","value":{"arguments":[{"name":"start","nativeSrc":"24741:5:21","nodeType":"YulIdentifier","src":"24741:5:21"},{"kind":"number","nativeSrc":"24748:1:21","nodeType":"YulLiteral","src":"24748:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"24737:3:21","nodeType":"YulIdentifier","src":"24737:3:21"},"nativeSrc":"24737:13:21","nodeType":"YulFunctionCall","src":"24737:13:21"},"variableNames":[{"name":"start","nativeSrc":"24728:5:21","nodeType":"YulIdentifier","src":"24728:5:21"}]}]},"pre":{"nativeSrc":"24708:2:21","nodeType":"YulBlock","src":"24708:2:21","statements":[]},"src":"24704:120:21"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"24644:186:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"24682:5:21","nodeType":"YulTypedName","src":"24682:5:21","type":""},{"name":"end","nativeSrc":"24689:3:21","nodeType":"YulTypedName","src":"24689:3:21","type":""}],"src":"24644:186:21"},{"body":{"nativeSrc":"24915:464:21","nodeType":"YulBlock","src":"24915:464:21","statements":[{"body":{"nativeSrc":"24941:431:21","nodeType":"YulBlock","src":"24941:431:21","statements":[{"nativeSrc":"24955:54:21","nodeType":"YulVariableDeclaration","src":"24955:54:21","value":{"arguments":[{"name":"array","nativeSrc":"25003:5:21","nodeType":"YulIdentifier","src":"25003:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"24971:31:21","nodeType":"YulIdentifier","src":"24971:31:21"},"nativeSrc":"24971:38:21","nodeType":"YulFunctionCall","src":"24971:38:21"},"variables":[{"name":"dataArea","nativeSrc":"24959:8:21","nodeType":"YulTypedName","src":"24959:8:21","type":""}]},{"nativeSrc":"25022:63:21","nodeType":"YulVariableDeclaration","src":"25022:63:21","value":{"arguments":[{"name":"dataArea","nativeSrc":"25045:8:21","nodeType":"YulIdentifier","src":"25045:8:21"},{"arguments":[{"name":"startIndex","nativeSrc":"25073:10:21","nodeType":"YulIdentifier","src":"25073:10:21"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"25055:17:21","nodeType":"YulIdentifier","src":"25055:17:21"},"nativeSrc":"25055:29:21","nodeType":"YulFunctionCall","src":"25055:29:21"}],"functionName":{"name":"add","nativeSrc":"25041:3:21","nodeType":"YulIdentifier","src":"25041:3:21"},"nativeSrc":"25041:44:21","nodeType":"YulFunctionCall","src":"25041:44:21"},"variables":[{"name":"deleteStart","nativeSrc":"25026:11:21","nodeType":"YulTypedName","src":"25026:11:21","type":""}]},{"body":{"nativeSrc":"25242:27:21","nodeType":"YulBlock","src":"25242:27:21","statements":[{"nativeSrc":"25244:23:21","nodeType":"YulAssignment","src":"25244:23:21","value":{"name":"dataArea","nativeSrc":"25259:8:21","nodeType":"YulIdentifier","src":"25259:8:21"},"variableNames":[{"name":"deleteStart","nativeSrc":"25244:11:21","nodeType":"YulIdentifier","src":"25244:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"25226:10:21","nodeType":"YulIdentifier","src":"25226:10:21"},{"kind":"number","nativeSrc":"25238:2:21","nodeType":"YulLiteral","src":"25238:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"25223:2:21","nodeType":"YulIdentifier","src":"25223:2:21"},"nativeSrc":"25223:18:21","nodeType":"YulFunctionCall","src":"25223:18:21"},"nativeSrc":"25220:49:21","nodeType":"YulIf","src":"25220:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"25311:11:21","nodeType":"YulIdentifier","src":"25311:11:21"},{"arguments":[{"name":"dataArea","nativeSrc":"25328:8:21","nodeType":"YulIdentifier","src":"25328:8:21"},{"arguments":[{"name":"len","nativeSrc":"25356:3:21","nodeType":"YulIdentifier","src":"25356:3:21"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"25338:17:21","nodeType":"YulIdentifier","src":"25338:17:21"},"nativeSrc":"25338:22:21","nodeType":"YulFunctionCall","src":"25338:22:21"}],"functionName":{"name":"add","nativeSrc":"25324:3:21","nodeType":"YulIdentifier","src":"25324:3:21"},"nativeSrc":"25324:37:21","nodeType":"YulFunctionCall","src":"25324:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"25282:28:21","nodeType":"YulIdentifier","src":"25282:28:21"},"nativeSrc":"25282:80:21","nodeType":"YulFunctionCall","src":"25282:80:21"},"nativeSrc":"25282:80:21","nodeType":"YulExpressionStatement","src":"25282:80:21"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"24932:3:21","nodeType":"YulIdentifier","src":"24932:3:21"},{"kind":"number","nativeSrc":"24937:2:21","nodeType":"YulLiteral","src":"24937:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"24929:2:21","nodeType":"YulIdentifier","src":"24929:2:21"},"nativeSrc":"24929:11:21","nodeType":"YulFunctionCall","src":"24929:11:21"},"nativeSrc":"24926:446:21","nodeType":"YulIf","src":"24926:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"24836:543:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"24891:5:21","nodeType":"YulTypedName","src":"24891:5:21","type":""},{"name":"len","nativeSrc":"24898:3:21","nodeType":"YulTypedName","src":"24898:3:21","type":""},{"name":"startIndex","nativeSrc":"24903:10:21","nodeType":"YulTypedName","src":"24903:10:21","type":""}],"src":"24836:543:21"},{"body":{"nativeSrc":"25448:54:21","nodeType":"YulBlock","src":"25448:54:21","statements":[{"nativeSrc":"25458:37:21","nodeType":"YulAssignment","src":"25458:37:21","value":{"arguments":[{"name":"bits","nativeSrc":"25483:4:21","nodeType":"YulIdentifier","src":"25483:4:21"},{"name":"value","nativeSrc":"25489:5:21","nodeType":"YulIdentifier","src":"25489:5:21"}],"functionName":{"name":"shr","nativeSrc":"25479:3:21","nodeType":"YulIdentifier","src":"25479:3:21"},"nativeSrc":"25479:16:21","nodeType":"YulFunctionCall","src":"25479:16:21"},"variableNames":[{"name":"newValue","nativeSrc":"25458:8:21","nodeType":"YulIdentifier","src":"25458:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"25385:117:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"25423:4:21","nodeType":"YulTypedName","src":"25423:4:21","type":""},{"name":"value","nativeSrc":"25429:5:21","nodeType":"YulTypedName","src":"25429:5:21","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"25439:8:21","nodeType":"YulTypedName","src":"25439:8:21","type":""}],"src":"25385:117:21"},{"body":{"nativeSrc":"25559:118:21","nodeType":"YulBlock","src":"25559:118:21","statements":[{"nativeSrc":"25569:68:21","nodeType":"YulVariableDeclaration","src":"25569:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"25618:1:21","nodeType":"YulLiteral","src":"25618:1:21","type":"","value":"8"},{"name":"bytes","nativeSrc":"25621:5:21","nodeType":"YulIdentifier","src":"25621:5:21"}],"functionName":{"name":"mul","nativeSrc":"25614:3:21","nodeType":"YulIdentifier","src":"25614:3:21"},"nativeSrc":"25614:13:21","nodeType":"YulFunctionCall","src":"25614:13:21"},{"arguments":[{"kind":"number","nativeSrc":"25633:1:21","nodeType":"YulLiteral","src":"25633:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"25629:3:21","nodeType":"YulIdentifier","src":"25629:3:21"},"nativeSrc":"25629:6:21","nodeType":"YulFunctionCall","src":"25629:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"25585:28:21","nodeType":"YulIdentifier","src":"25585:28:21"},"nativeSrc":"25585:51:21","nodeType":"YulFunctionCall","src":"25585:51:21"}],"functionName":{"name":"not","nativeSrc":"25581:3:21","nodeType":"YulIdentifier","src":"25581:3:21"},"nativeSrc":"25581:56:21","nodeType":"YulFunctionCall","src":"25581:56:21"},"variables":[{"name":"mask","nativeSrc":"25573:4:21","nodeType":"YulTypedName","src":"25573:4:21","type":""}]},{"nativeSrc":"25646:25:21","nodeType":"YulAssignment","src":"25646:25:21","value":{"arguments":[{"name":"data","nativeSrc":"25660:4:21","nodeType":"YulIdentifier","src":"25660:4:21"},{"name":"mask","nativeSrc":"25666:4:21","nodeType":"YulIdentifier","src":"25666:4:21"}],"functionName":{"name":"and","nativeSrc":"25656:3:21","nodeType":"YulIdentifier","src":"25656:3:21"},"nativeSrc":"25656:15:21","nodeType":"YulFunctionCall","src":"25656:15:21"},"variableNames":[{"name":"result","nativeSrc":"25646:6:21","nodeType":"YulIdentifier","src":"25646:6:21"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"25508:169:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"25536:4:21","nodeType":"YulTypedName","src":"25536:4:21","type":""},{"name":"bytes","nativeSrc":"25542:5:21","nodeType":"YulTypedName","src":"25542:5:21","type":""}],"returnVariables":[{"name":"result","nativeSrc":"25552:6:21","nodeType":"YulTypedName","src":"25552:6:21","type":""}],"src":"25508:169:21"},{"body":{"nativeSrc":"25763:214:21","nodeType":"YulBlock","src":"25763:214:21","statements":[{"nativeSrc":"25896:37:21","nodeType":"YulAssignment","src":"25896:37:21","value":{"arguments":[{"name":"data","nativeSrc":"25923:4:21","nodeType":"YulIdentifier","src":"25923:4:21"},{"name":"len","nativeSrc":"25929:3:21","nodeType":"YulIdentifier","src":"25929:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"25904:18:21","nodeType":"YulIdentifier","src":"25904:18:21"},"nativeSrc":"25904:29:21","nodeType":"YulFunctionCall","src":"25904:29:21"},"variableNames":[{"name":"data","nativeSrc":"25896:4:21","nodeType":"YulIdentifier","src":"25896:4:21"}]},{"nativeSrc":"25942:29:21","nodeType":"YulAssignment","src":"25942:29:21","value":{"arguments":[{"name":"data","nativeSrc":"25953:4:21","nodeType":"YulIdentifier","src":"25953:4:21"},{"arguments":[{"kind":"number","nativeSrc":"25963:1:21","nodeType":"YulLiteral","src":"25963:1:21","type":"","value":"2"},{"name":"len","nativeSrc":"25966:3:21","nodeType":"YulIdentifier","src":"25966:3:21"}],"functionName":{"name":"mul","nativeSrc":"25959:3:21","nodeType":"YulIdentifier","src":"25959:3:21"},"nativeSrc":"25959:11:21","nodeType":"YulFunctionCall","src":"25959:11:21"}],"functionName":{"name":"or","nativeSrc":"25950:2:21","nodeType":"YulIdentifier","src":"25950:2:21"},"nativeSrc":"25950:21:21","nodeType":"YulFunctionCall","src":"25950:21:21"},"variableNames":[{"name":"used","nativeSrc":"25942:4:21","nodeType":"YulIdentifier","src":"25942:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"25682:295:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"25744:4:21","nodeType":"YulTypedName","src":"25744:4:21","type":""},{"name":"len","nativeSrc":"25750:3:21","nodeType":"YulTypedName","src":"25750:3:21","type":""}],"returnVariables":[{"name":"used","nativeSrc":"25758:4:21","nodeType":"YulTypedName","src":"25758:4:21","type":""}],"src":"25682:295:21"},{"body":{"nativeSrc":"26074:1303:21","nodeType":"YulBlock","src":"26074:1303:21","statements":[{"nativeSrc":"26085:51:21","nodeType":"YulVariableDeclaration","src":"26085:51:21","value":{"arguments":[{"name":"src","nativeSrc":"26132:3:21","nodeType":"YulIdentifier","src":"26132:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"26099:32:21","nodeType":"YulIdentifier","src":"26099:32:21"},"nativeSrc":"26099:37:21","nodeType":"YulFunctionCall","src":"26099:37:21"},"variables":[{"name":"newLen","nativeSrc":"26089:6:21","nodeType":"YulTypedName","src":"26089:6:21","type":""}]},{"body":{"nativeSrc":"26221:22:21","nodeType":"YulBlock","src":"26221:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"26223:16:21","nodeType":"YulIdentifier","src":"26223:16:21"},"nativeSrc":"26223:18:21","nodeType":"YulFunctionCall","src":"26223:18:21"},"nativeSrc":"26223:18:21","nodeType":"YulExpressionStatement","src":"26223:18:21"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"26193:6:21","nodeType":"YulIdentifier","src":"26193:6:21"},{"kind":"number","nativeSrc":"26201:18:21","nodeType":"YulLiteral","src":"26201:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"26190:2:21","nodeType":"YulIdentifier","src":"26190:2:21"},"nativeSrc":"26190:30:21","nodeType":"YulFunctionCall","src":"26190:30:21"},"nativeSrc":"26187:56:21","nodeType":"YulIf","src":"26187:56:21"},{"nativeSrc":"26253:52:21","nodeType":"YulVariableDeclaration","src":"26253:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"26299:4:21","nodeType":"YulIdentifier","src":"26299:4:21"}],"functionName":{"name":"sload","nativeSrc":"26293:5:21","nodeType":"YulIdentifier","src":"26293:5:21"},"nativeSrc":"26293:11:21","nodeType":"YulFunctionCall","src":"26293:11:21"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"26267:25:21","nodeType":"YulIdentifier","src":"26267:25:21"},"nativeSrc":"26267:38:21","nodeType":"YulFunctionCall","src":"26267:38:21"},"variables":[{"name":"oldLen","nativeSrc":"26257:6:21","nodeType":"YulTypedName","src":"26257:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"26398:4:21","nodeType":"YulIdentifier","src":"26398:4:21"},{"name":"oldLen","nativeSrc":"26404:6:21","nodeType":"YulIdentifier","src":"26404:6:21"},{"name":"newLen","nativeSrc":"26412:6:21","nodeType":"YulIdentifier","src":"26412:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"26352:45:21","nodeType":"YulIdentifier","src":"26352:45:21"},"nativeSrc":"26352:67:21","nodeType":"YulFunctionCall","src":"26352:67:21"},"nativeSrc":"26352:67:21","nodeType":"YulExpressionStatement","src":"26352:67:21"},{"nativeSrc":"26429:18:21","nodeType":"YulVariableDeclaration","src":"26429:18:21","value":{"kind":"number","nativeSrc":"26446:1:21","nodeType":"YulLiteral","src":"26446:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"26433:9:21","nodeType":"YulTypedName","src":"26433:9:21","type":""}]},{"nativeSrc":"26457:17:21","nodeType":"YulAssignment","src":"26457:17:21","value":{"kind":"number","nativeSrc":"26470:4:21","nodeType":"YulLiteral","src":"26470:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"26457:9:21","nodeType":"YulIdentifier","src":"26457:9:21"}]},{"cases":[{"body":{"nativeSrc":"26521:611:21","nodeType":"YulBlock","src":"26521:611:21","statements":[{"nativeSrc":"26535:37:21","nodeType":"YulVariableDeclaration","src":"26535:37:21","value":{"arguments":[{"name":"newLen","nativeSrc":"26554:6:21","nodeType":"YulIdentifier","src":"26554:6:21"},{"arguments":[{"kind":"number","nativeSrc":"26566:4:21","nodeType":"YulLiteral","src":"26566:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"26562:3:21","nodeType":"YulIdentifier","src":"26562:3:21"},"nativeSrc":"26562:9:21","nodeType":"YulFunctionCall","src":"26562:9:21"}],"functionName":{"name":"and","nativeSrc":"26550:3:21","nodeType":"YulIdentifier","src":"26550:3:21"},"nativeSrc":"26550:22:21","nodeType":"YulFunctionCall","src":"26550:22:21"},"variables":[{"name":"loopEnd","nativeSrc":"26539:7:21","nodeType":"YulTypedName","src":"26539:7:21","type":""}]},{"nativeSrc":"26586:51:21","nodeType":"YulVariableDeclaration","src":"26586:51:21","value":{"arguments":[{"name":"slot","nativeSrc":"26632:4:21","nodeType":"YulIdentifier","src":"26632:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"26600:31:21","nodeType":"YulIdentifier","src":"26600:31:21"},"nativeSrc":"26600:37:21","nodeType":"YulFunctionCall","src":"26600:37:21"},"variables":[{"name":"dstPtr","nativeSrc":"26590:6:21","nodeType":"YulTypedName","src":"26590:6:21","type":""}]},{"nativeSrc":"26650:10:21","nodeType":"YulVariableDeclaration","src":"26650:10:21","value":{"kind":"number","nativeSrc":"26659:1:21","nodeType":"YulLiteral","src":"26659:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"26654:1:21","nodeType":"YulTypedName","src":"26654:1:21","type":""}]},{"body":{"nativeSrc":"26718:163:21","nodeType":"YulBlock","src":"26718:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"26743:6:21","nodeType":"YulIdentifier","src":"26743:6:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"26761:3:21","nodeType":"YulIdentifier","src":"26761:3:21"},{"name":"srcOffset","nativeSrc":"26766:9:21","nodeType":"YulIdentifier","src":"26766:9:21"}],"functionName":{"name":"add","nativeSrc":"26757:3:21","nodeType":"YulIdentifier","src":"26757:3:21"},"nativeSrc":"26757:19:21","nodeType":"YulFunctionCall","src":"26757:19:21"}],"functionName":{"name":"mload","nativeSrc":"26751:5:21","nodeType":"YulIdentifier","src":"26751:5:21"},"nativeSrc":"26751:26:21","nodeType":"YulFunctionCall","src":"26751:26:21"}],"functionName":{"name":"sstore","nativeSrc":"26736:6:21","nodeType":"YulIdentifier","src":"26736:6:21"},"nativeSrc":"26736:42:21","nodeType":"YulFunctionCall","src":"26736:42:21"},"nativeSrc":"26736:42:21","nodeType":"YulExpressionStatement","src":"26736:42:21"},{"nativeSrc":"26795:24:21","nodeType":"YulAssignment","src":"26795:24:21","value":{"arguments":[{"name":"dstPtr","nativeSrc":"26809:6:21","nodeType":"YulIdentifier","src":"26809:6:21"},{"kind":"number","nativeSrc":"26817:1:21","nodeType":"YulLiteral","src":"26817:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"26805:3:21","nodeType":"YulIdentifier","src":"26805:3:21"},"nativeSrc":"26805:14:21","nodeType":"YulFunctionCall","src":"26805:14:21"},"variableNames":[{"name":"dstPtr","nativeSrc":"26795:6:21","nodeType":"YulIdentifier","src":"26795:6:21"}]},{"nativeSrc":"26836:31:21","nodeType":"YulAssignment","src":"26836:31:21","value":{"arguments":[{"name":"srcOffset","nativeSrc":"26853:9:21","nodeType":"YulIdentifier","src":"26853:9:21"},{"kind":"number","nativeSrc":"26864:2:21","nodeType":"YulLiteral","src":"26864:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26849:3:21","nodeType":"YulIdentifier","src":"26849:3:21"},"nativeSrc":"26849:18:21","nodeType":"YulFunctionCall","src":"26849:18:21"},"variableNames":[{"name":"srcOffset","nativeSrc":"26836:9:21","nodeType":"YulIdentifier","src":"26836:9:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"26684:1:21","nodeType":"YulIdentifier","src":"26684:1:21"},{"name":"loopEnd","nativeSrc":"26687:7:21","nodeType":"YulIdentifier","src":"26687:7:21"}],"functionName":{"name":"lt","nativeSrc":"26681:2:21","nodeType":"YulIdentifier","src":"26681:2:21"},"nativeSrc":"26681:14:21","nodeType":"YulFunctionCall","src":"26681:14:21"},"nativeSrc":"26673:208:21","nodeType":"YulForLoop","post":{"nativeSrc":"26696:21:21","nodeType":"YulBlock","src":"26696:21:21","statements":[{"nativeSrc":"26698:17:21","nodeType":"YulAssignment","src":"26698:17:21","value":{"arguments":[{"name":"i","nativeSrc":"26707:1:21","nodeType":"YulIdentifier","src":"26707:1:21"},{"kind":"number","nativeSrc":"26710:4:21","nodeType":"YulLiteral","src":"26710:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"26703:3:21","nodeType":"YulIdentifier","src":"26703:3:21"},"nativeSrc":"26703:12:21","nodeType":"YulFunctionCall","src":"26703:12:21"},"variableNames":[{"name":"i","nativeSrc":"26698:1:21","nodeType":"YulIdentifier","src":"26698:1:21"}]}]},"pre":{"nativeSrc":"26677:3:21","nodeType":"YulBlock","src":"26677:3:21","statements":[]},"src":"26673:208:21"},{"body":{"nativeSrc":"26917:156:21","nodeType":"YulBlock","src":"26917:156:21","statements":[{"nativeSrc":"26935:43:21","nodeType":"YulVariableDeclaration","src":"26935:43:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"26962:3:21","nodeType":"YulIdentifier","src":"26962:3:21"},{"name":"srcOffset","nativeSrc":"26967:9:21","nodeType":"YulIdentifier","src":"26967:9:21"}],"functionName":{"name":"add","nativeSrc":"26958:3:21","nodeType":"YulIdentifier","src":"26958:3:21"},"nativeSrc":"26958:19:21","nodeType":"YulFunctionCall","src":"26958:19:21"}],"functionName":{"name":"mload","nativeSrc":"26952:5:21","nodeType":"YulIdentifier","src":"26952:5:21"},"nativeSrc":"26952:26:21","nodeType":"YulFunctionCall","src":"26952:26:21"},"variables":[{"name":"lastValue","nativeSrc":"26939:9:21","nodeType":"YulTypedName","src":"26939:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"27002:6:21","nodeType":"YulIdentifier","src":"27002:6:21"},{"arguments":[{"name":"lastValue","nativeSrc":"27029:9:21","nodeType":"YulIdentifier","src":"27029:9:21"},{"arguments":[{"name":"newLen","nativeSrc":"27044:6:21","nodeType":"YulIdentifier","src":"27044:6:21"},{"kind":"number","nativeSrc":"27052:4:21","nodeType":"YulLiteral","src":"27052:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"27040:3:21","nodeType":"YulIdentifier","src":"27040:3:21"},"nativeSrc":"27040:17:21","nodeType":"YulFunctionCall","src":"27040:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"27010:18:21","nodeType":"YulIdentifier","src":"27010:18:21"},"nativeSrc":"27010:48:21","nodeType":"YulFunctionCall","src":"27010:48:21"}],"functionName":{"name":"sstore","nativeSrc":"26995:6:21","nodeType":"YulIdentifier","src":"26995:6:21"},"nativeSrc":"26995:64:21","nodeType":"YulFunctionCall","src":"26995:64:21"},"nativeSrc":"26995:64:21","nodeType":"YulExpressionStatement","src":"26995:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"26900:7:21","nodeType":"YulIdentifier","src":"26900:7:21"},{"name":"newLen","nativeSrc":"26909:6:21","nodeType":"YulIdentifier","src":"26909:6:21"}],"functionName":{"name":"lt","nativeSrc":"26897:2:21","nodeType":"YulIdentifier","src":"26897:2:21"},"nativeSrc":"26897:19:21","nodeType":"YulFunctionCall","src":"26897:19:21"},"nativeSrc":"26894:179:21","nodeType":"YulIf","src":"26894:179:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"27093:4:21","nodeType":"YulIdentifier","src":"27093:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"27107:6:21","nodeType":"YulIdentifier","src":"27107:6:21"},{"kind":"number","nativeSrc":"27115:1:21","nodeType":"YulLiteral","src":"27115:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"27103:3:21","nodeType":"YulIdentifier","src":"27103:3:21"},"nativeSrc":"27103:14:21","nodeType":"YulFunctionCall","src":"27103:14:21"},{"kind":"number","nativeSrc":"27119:1:21","nodeType":"YulLiteral","src":"27119:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"27099:3:21","nodeType":"YulIdentifier","src":"27099:3:21"},"nativeSrc":"27099:22:21","nodeType":"YulFunctionCall","src":"27099:22:21"}],"functionName":{"name":"sstore","nativeSrc":"27086:6:21","nodeType":"YulIdentifier","src":"27086:6:21"},"nativeSrc":"27086:36:21","nodeType":"YulFunctionCall","src":"27086:36:21"},"nativeSrc":"27086:36:21","nodeType":"YulExpressionStatement","src":"27086:36:21"}]},"nativeSrc":"26514:618:21","nodeType":"YulCase","src":"26514:618:21","value":{"kind":"number","nativeSrc":"26519:1:21","nodeType":"YulLiteral","src":"26519:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"27149:222:21","nodeType":"YulBlock","src":"27149:222:21","statements":[{"nativeSrc":"27163:14:21","nodeType":"YulVariableDeclaration","src":"27163:14:21","value":{"kind":"number","nativeSrc":"27176:1:21","nodeType":"YulLiteral","src":"27176:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"27167:5:21","nodeType":"YulTypedName","src":"27167:5:21","type":""}]},{"body":{"nativeSrc":"27200:67:21","nodeType":"YulBlock","src":"27200:67:21","statements":[{"nativeSrc":"27218:35:21","nodeType":"YulAssignment","src":"27218:35:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"27237:3:21","nodeType":"YulIdentifier","src":"27237:3:21"},{"name":"srcOffset","nativeSrc":"27242:9:21","nodeType":"YulIdentifier","src":"27242:9:21"}],"functionName":{"name":"add","nativeSrc":"27233:3:21","nodeType":"YulIdentifier","src":"27233:3:21"},"nativeSrc":"27233:19:21","nodeType":"YulFunctionCall","src":"27233:19:21"}],"functionName":{"name":"mload","nativeSrc":"27227:5:21","nodeType":"YulIdentifier","src":"27227:5:21"},"nativeSrc":"27227:26:21","nodeType":"YulFunctionCall","src":"27227:26:21"},"variableNames":[{"name":"value","nativeSrc":"27218:5:21","nodeType":"YulIdentifier","src":"27218:5:21"}]}]},"condition":{"name":"newLen","nativeSrc":"27193:6:21","nodeType":"YulIdentifier","src":"27193:6:21"},"nativeSrc":"27190:77:21","nodeType":"YulIf","src":"27190:77:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"27287:4:21","nodeType":"YulIdentifier","src":"27287:4:21"},{"arguments":[{"name":"value","nativeSrc":"27346:5:21","nodeType":"YulIdentifier","src":"27346:5:21"},{"name":"newLen","nativeSrc":"27353:6:21","nodeType":"YulIdentifier","src":"27353:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"27293:52:21","nodeType":"YulIdentifier","src":"27293:52:21"},"nativeSrc":"27293:67:21","nodeType":"YulFunctionCall","src":"27293:67:21"}],"functionName":{"name":"sstore","nativeSrc":"27280:6:21","nodeType":"YulIdentifier","src":"27280:6:21"},"nativeSrc":"27280:81:21","nodeType":"YulFunctionCall","src":"27280:81:21"},"nativeSrc":"27280:81:21","nodeType":"YulExpressionStatement","src":"27280:81:21"}]},"nativeSrc":"27141:230:21","nodeType":"YulCase","src":"27141:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"26494:6:21","nodeType":"YulIdentifier","src":"26494:6:21"},{"kind":"number","nativeSrc":"26502:2:21","nodeType":"YulLiteral","src":"26502:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"26491:2:21","nodeType":"YulIdentifier","src":"26491:2:21"},"nativeSrc":"26491:14:21","nodeType":"YulFunctionCall","src":"26491:14:21"},"nativeSrc":"26484:887:21","nodeType":"YulSwitch","src":"26484:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"25982:1395:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"26063:4:21","nodeType":"YulTypedName","src":"26063:4:21","type":""},{"name":"src","nativeSrc":"26069:3:21","nodeType":"YulTypedName","src":"26069:3:21","type":""}],"src":"25982:1395:21"},{"body":{"nativeSrc":"27436:32:21","nodeType":"YulBlock","src":"27436:32:21","statements":[{"nativeSrc":"27446:16:21","nodeType":"YulAssignment","src":"27446:16:21","value":{"name":"value","nativeSrc":"27457:5:21","nodeType":"YulIdentifier","src":"27457:5:21"},"variableNames":[{"name":"cleaned","nativeSrc":"27446:7:21","nodeType":"YulIdentifier","src":"27446:7:21"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"27383:85:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27418:5:21","nodeType":"YulTypedName","src":"27418:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"27428:7:21","nodeType":"YulTypedName","src":"27428:7:21","type":""}],"src":"27383:85:21"},{"body":{"nativeSrc":"27518:57:21","nodeType":"YulBlock","src":"27518:57:21","statements":[{"nativeSrc":"27528:41:21","nodeType":"YulAssignment","src":"27528:41:21","value":{"arguments":[{"name":"value","nativeSrc":"27543:5:21","nodeType":"YulIdentifier","src":"27543:5:21"},{"kind":"number","nativeSrc":"27550:18:21","nodeType":"YulLiteral","src":"27550:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"27539:3:21","nodeType":"YulIdentifier","src":"27539:3:21"},"nativeSrc":"27539:30:21","nodeType":"YulFunctionCall","src":"27539:30:21"},"variableNames":[{"name":"cleaned","nativeSrc":"27528:7:21","nodeType":"YulIdentifier","src":"27528:7:21"}]}]},"name":"cleanup_t_uint64","nativeSrc":"27474:101:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27500:5:21","nodeType":"YulTypedName","src":"27500:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"27510:7:21","nodeType":"YulTypedName","src":"27510:7:21","type":""}],"src":"27474:101:21"},{"body":{"nativeSrc":"27648:89:21","nodeType":"YulBlock","src":"27648:89:21","statements":[{"nativeSrc":"27658:73:21","nodeType":"YulAssignment","src":"27658:73:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27723:5:21","nodeType":"YulIdentifier","src":"27723:5:21"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"27697:25:21","nodeType":"YulIdentifier","src":"27697:25:21"},"nativeSrc":"27697:32:21","nodeType":"YulFunctionCall","src":"27697:32:21"}],"functionName":{"name":"identity","nativeSrc":"27688:8:21","nodeType":"YulIdentifier","src":"27688:8:21"},"nativeSrc":"27688:42:21","nodeType":"YulFunctionCall","src":"27688:42:21"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"27671:16:21","nodeType":"YulIdentifier","src":"27671:16:21"},"nativeSrc":"27671:60:21","nodeType":"YulFunctionCall","src":"27671:60:21"},"variableNames":[{"name":"converted","nativeSrc":"27658:9:21","nodeType":"YulIdentifier","src":"27658:9:21"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"27581:156:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27628:5:21","nodeType":"YulTypedName","src":"27628:5:21","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"27638:9:21","nodeType":"YulTypedName","src":"27638:9:21","type":""}],"src":"27581:156:21"},{"body":{"nativeSrc":"27815:73:21","nodeType":"YulBlock","src":"27815:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"27832:3:21","nodeType":"YulIdentifier","src":"27832:3:21"},{"arguments":[{"name":"value","nativeSrc":"27875:5:21","nodeType":"YulIdentifier","src":"27875:5:21"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"27837:37:21","nodeType":"YulIdentifier","src":"27837:37:21"},"nativeSrc":"27837:44:21","nodeType":"YulFunctionCall","src":"27837:44:21"}],"functionName":{"name":"mstore","nativeSrc":"27825:6:21","nodeType":"YulIdentifier","src":"27825:6:21"},"nativeSrc":"27825:57:21","nodeType":"YulFunctionCall","src":"27825:57:21"},"nativeSrc":"27825:57:21","nodeType":"YulExpressionStatement","src":"27825:57:21"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"27743:145:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27803:5:21","nodeType":"YulTypedName","src":"27803:5:21","type":""},{"name":"pos","nativeSrc":"27810:3:21","nodeType":"YulTypedName","src":"27810:3:21","type":""}],"src":"27743:145:21"},{"body":{"nativeSrc":"27999:131:21","nodeType":"YulBlock","src":"27999:131:21","statements":[{"nativeSrc":"28009:26:21","nodeType":"YulAssignment","src":"28009:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"28021:9:21","nodeType":"YulIdentifier","src":"28021:9:21"},{"kind":"number","nativeSrc":"28032:2:21","nodeType":"YulLiteral","src":"28032:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28017:3:21","nodeType":"YulIdentifier","src":"28017:3:21"},"nativeSrc":"28017:18:21","nodeType":"YulFunctionCall","src":"28017:18:21"},"variableNames":[{"name":"tail","nativeSrc":"28009:4:21","nodeType":"YulIdentifier","src":"28009:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"28096:6:21","nodeType":"YulIdentifier","src":"28096:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"28109:9:21","nodeType":"YulIdentifier","src":"28109:9:21"},{"kind":"number","nativeSrc":"28120:1:21","nodeType":"YulLiteral","src":"28120:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28105:3:21","nodeType":"YulIdentifier","src":"28105:3:21"},"nativeSrc":"28105:17:21","nodeType":"YulFunctionCall","src":"28105:17:21"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"28045:50:21","nodeType":"YulIdentifier","src":"28045:50:21"},"nativeSrc":"28045:78:21","nodeType":"YulFunctionCall","src":"28045:78:21"},"nativeSrc":"28045:78:21","nodeType":"YulExpressionStatement","src":"28045:78:21"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"27894:236:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27971:9:21","nodeType":"YulTypedName","src":"27971:9:21","type":""},{"name":"value0","nativeSrc":"27983:6:21","nodeType":"YulTypedName","src":"27983:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27994:4:21","nodeType":"YulTypedName","src":"27994:4:21","type":""}],"src":"27894:236:21"},{"body":{"nativeSrc":"28262:206:21","nodeType":"YulBlock","src":"28262:206:21","statements":[{"nativeSrc":"28272:26:21","nodeType":"YulAssignment","src":"28272:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"28284:9:21","nodeType":"YulIdentifier","src":"28284:9:21"},{"kind":"number","nativeSrc":"28295:2:21","nodeType":"YulLiteral","src":"28295:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"28280:3:21","nodeType":"YulIdentifier","src":"28280:3:21"},"nativeSrc":"28280:18:21","nodeType":"YulFunctionCall","src":"28280:18:21"},"variableNames":[{"name":"tail","nativeSrc":"28272:4:21","nodeType":"YulIdentifier","src":"28272:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"28352:6:21","nodeType":"YulIdentifier","src":"28352:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"28365:9:21","nodeType":"YulIdentifier","src":"28365:9:21"},{"kind":"number","nativeSrc":"28376:1:21","nodeType":"YulLiteral","src":"28376:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28361:3:21","nodeType":"YulIdentifier","src":"28361:3:21"},"nativeSrc":"28361:17:21","nodeType":"YulFunctionCall","src":"28361:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"28308:43:21","nodeType":"YulIdentifier","src":"28308:43:21"},"nativeSrc":"28308:71:21","nodeType":"YulFunctionCall","src":"28308:71:21"},"nativeSrc":"28308:71:21","nodeType":"YulExpressionStatement","src":"28308:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"28433:6:21","nodeType":"YulIdentifier","src":"28433:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"28446:9:21","nodeType":"YulIdentifier","src":"28446:9:21"},{"kind":"number","nativeSrc":"28457:2:21","nodeType":"YulLiteral","src":"28457:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28442:3:21","nodeType":"YulIdentifier","src":"28442:3:21"},"nativeSrc":"28442:18:21","nodeType":"YulFunctionCall","src":"28442:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"28389:43:21","nodeType":"YulIdentifier","src":"28389:43:21"},"nativeSrc":"28389:72:21","nodeType":"YulFunctionCall","src":"28389:72:21"},"nativeSrc":"28389:72:21","nodeType":"YulExpressionStatement","src":"28389:72:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"28136:332:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28226:9:21","nodeType":"YulTypedName","src":"28226:9:21","type":""},{"name":"value1","nativeSrc":"28238:6:21","nodeType":"YulTypedName","src":"28238:6:21","type":""},{"name":"value0","nativeSrc":"28246:6:21","nodeType":"YulTypedName","src":"28246:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28257:4:21","nodeType":"YulTypedName","src":"28257:4:21","type":""}],"src":"28136:332:21"},{"body":{"nativeSrc":"28702:592:21","nodeType":"YulBlock","src":"28702:592:21","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"28775:6:21","nodeType":"YulIdentifier","src":"28775:6:21"},{"name":"pos","nativeSrc":"28784:3:21","nodeType":"YulIdentifier","src":"28784:3:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"28713:61:21","nodeType":"YulIdentifier","src":"28713:61:21"},"nativeSrc":"28713:75:21","nodeType":"YulFunctionCall","src":"28713:75:21"},"nativeSrc":"28713:75:21","nodeType":"YulExpressionStatement","src":"28713:75:21"},{"nativeSrc":"28797:19:21","nodeType":"YulAssignment","src":"28797:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"28808:3:21","nodeType":"YulIdentifier","src":"28808:3:21"},{"kind":"number","nativeSrc":"28813:2:21","nodeType":"YulLiteral","src":"28813:2:21","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"28804:3:21","nodeType":"YulIdentifier","src":"28804:3:21"},"nativeSrc":"28804:12:21","nodeType":"YulFunctionCall","src":"28804:12:21"},"variableNames":[{"name":"pos","nativeSrc":"28797:3:21","nodeType":"YulIdentifier","src":"28797:3:21"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"28888:6:21","nodeType":"YulIdentifier","src":"28888:6:21"},{"name":"pos","nativeSrc":"28897:3:21","nodeType":"YulIdentifier","src":"28897:3:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"28826:61:21","nodeType":"YulIdentifier","src":"28826:61:21"},"nativeSrc":"28826:75:21","nodeType":"YulFunctionCall","src":"28826:75:21"},"nativeSrc":"28826:75:21","nodeType":"YulExpressionStatement","src":"28826:75:21"},{"nativeSrc":"28910:19:21","nodeType":"YulAssignment","src":"28910:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"28921:3:21","nodeType":"YulIdentifier","src":"28921:3:21"},{"kind":"number","nativeSrc":"28926:2:21","nodeType":"YulLiteral","src":"28926:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28917:3:21","nodeType":"YulIdentifier","src":"28917:3:21"},"nativeSrc":"28917:12:21","nodeType":"YulFunctionCall","src":"28917:12:21"},"variableNames":[{"name":"pos","nativeSrc":"28910:3:21","nodeType":"YulIdentifier","src":"28910:3:21"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"29001:6:21","nodeType":"YulIdentifier","src":"29001:6:21"},{"name":"pos","nativeSrc":"29010:3:21","nodeType":"YulIdentifier","src":"29010:3:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"28939:61:21","nodeType":"YulIdentifier","src":"28939:61:21"},"nativeSrc":"28939:75:21","nodeType":"YulFunctionCall","src":"28939:75:21"},"nativeSrc":"28939:75:21","nodeType":"YulExpressionStatement","src":"28939:75:21"},{"nativeSrc":"29023:19:21","nodeType":"YulAssignment","src":"29023:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"29034:3:21","nodeType":"YulIdentifier","src":"29034:3:21"},{"kind":"number","nativeSrc":"29039:2:21","nodeType":"YulLiteral","src":"29039:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29030:3:21","nodeType":"YulIdentifier","src":"29030:3:21"},"nativeSrc":"29030:12:21","nodeType":"YulFunctionCall","src":"29030:12:21"},"variableNames":[{"name":"pos","nativeSrc":"29023:3:21","nodeType":"YulIdentifier","src":"29023:3:21"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"29114:6:21","nodeType":"YulIdentifier","src":"29114:6:21"},{"name":"pos","nativeSrc":"29123:3:21","nodeType":"YulIdentifier","src":"29123:3:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"29052:61:21","nodeType":"YulIdentifier","src":"29052:61:21"},"nativeSrc":"29052:75:21","nodeType":"YulFunctionCall","src":"29052:75:21"},"nativeSrc":"29052:75:21","nodeType":"YulExpressionStatement","src":"29052:75:21"},{"nativeSrc":"29136:19:21","nodeType":"YulAssignment","src":"29136:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"29147:3:21","nodeType":"YulIdentifier","src":"29147:3:21"},{"kind":"number","nativeSrc":"29152:2:21","nodeType":"YulLiteral","src":"29152:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29143:3:21","nodeType":"YulIdentifier","src":"29143:3:21"},"nativeSrc":"29143:12:21","nodeType":"YulFunctionCall","src":"29143:12:21"},"variableNames":[{"name":"pos","nativeSrc":"29136:3:21","nodeType":"YulIdentifier","src":"29136:3:21"}]},{"expression":{"arguments":[{"name":"value4","nativeSrc":"29227:6:21","nodeType":"YulIdentifier","src":"29227:6:21"},{"name":"pos","nativeSrc":"29236:3:21","nodeType":"YulIdentifier","src":"29236:3:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"29165:61:21","nodeType":"YulIdentifier","src":"29165:61:21"},"nativeSrc":"29165:75:21","nodeType":"YulFunctionCall","src":"29165:75:21"},"nativeSrc":"29165:75:21","nodeType":"YulExpressionStatement","src":"29165:75:21"},{"nativeSrc":"29249:19:21","nodeType":"YulAssignment","src":"29249:19:21","value":{"arguments":[{"name":"pos","nativeSrc":"29260:3:21","nodeType":"YulIdentifier","src":"29260:3:21"},{"kind":"number","nativeSrc":"29265:2:21","nodeType":"YulLiteral","src":"29265:2:21","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"29256:3:21","nodeType":"YulIdentifier","src":"29256:3:21"},"nativeSrc":"29256:12:21","nodeType":"YulFunctionCall","src":"29256:12:21"},"variableNames":[{"name":"pos","nativeSrc":"29249:3:21","nodeType":"YulIdentifier","src":"29249:3:21"}]},{"nativeSrc":"29278:10:21","nodeType":"YulAssignment","src":"29278:10:21","value":{"name":"pos","nativeSrc":"29285:3:21","nodeType":"YulIdentifier","src":"29285:3:21"},"variableNames":[{"name":"end","nativeSrc":"29278:3:21","nodeType":"YulIdentifier","src":"29278:3:21"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed","nativeSrc":"28474:820:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"28649:3:21","nodeType":"YulTypedName","src":"28649:3:21","type":""},{"name":"value4","nativeSrc":"28655:6:21","nodeType":"YulTypedName","src":"28655:6:21","type":""},{"name":"value3","nativeSrc":"28663:6:21","nodeType":"YulTypedName","src":"28663:6:21","type":""},{"name":"value2","nativeSrc":"28671:6:21","nodeType":"YulTypedName","src":"28671:6:21","type":""},{"name":"value1","nativeSrc":"28679:6:21","nodeType":"YulTypedName","src":"28679:6:21","type":""},{"name":"value0","nativeSrc":"28687:6:21","nodeType":"YulTypedName","src":"28687:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28698:3:21","nodeType":"YulTypedName","src":"28698:3:21","type":""}],"src":"28474:820:21"},{"body":{"nativeSrc":"29482:371:21","nodeType":"YulBlock","src":"29482:371:21","statements":[{"nativeSrc":"29492:27:21","nodeType":"YulAssignment","src":"29492:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"29504:9:21","nodeType":"YulIdentifier","src":"29504:9:21"},{"kind":"number","nativeSrc":"29515:3:21","nodeType":"YulLiteral","src":"29515:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"29500:3:21","nodeType":"YulIdentifier","src":"29500:3:21"},"nativeSrc":"29500:19:21","nodeType":"YulFunctionCall","src":"29500:19:21"},"variableNames":[{"name":"tail","nativeSrc":"29492:4:21","nodeType":"YulIdentifier","src":"29492:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"29573:6:21","nodeType":"YulIdentifier","src":"29573:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"29586:9:21","nodeType":"YulIdentifier","src":"29586:9:21"},{"kind":"number","nativeSrc":"29597:1:21","nodeType":"YulLiteral","src":"29597:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29582:3:21","nodeType":"YulIdentifier","src":"29582:3:21"},"nativeSrc":"29582:17:21","nodeType":"YulFunctionCall","src":"29582:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"29529:43:21","nodeType":"YulIdentifier","src":"29529:43:21"},"nativeSrc":"29529:71:21","nodeType":"YulFunctionCall","src":"29529:71:21"},"nativeSrc":"29529:71:21","nodeType":"YulExpressionStatement","src":"29529:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"29654:6:21","nodeType":"YulIdentifier","src":"29654:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"29667:9:21","nodeType":"YulIdentifier","src":"29667:9:21"},{"kind":"number","nativeSrc":"29678:2:21","nodeType":"YulLiteral","src":"29678:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29663:3:21","nodeType":"YulIdentifier","src":"29663:3:21"},"nativeSrc":"29663:18:21","nodeType":"YulFunctionCall","src":"29663:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"29610:43:21","nodeType":"YulIdentifier","src":"29610:43:21"},"nativeSrc":"29610:72:21","nodeType":"YulFunctionCall","src":"29610:72:21"},"nativeSrc":"29610:72:21","nodeType":"YulExpressionStatement","src":"29610:72:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"29736:6:21","nodeType":"YulIdentifier","src":"29736:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"29749:9:21","nodeType":"YulIdentifier","src":"29749:9:21"},{"kind":"number","nativeSrc":"29760:2:21","nodeType":"YulLiteral","src":"29760:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29745:3:21","nodeType":"YulIdentifier","src":"29745:3:21"},"nativeSrc":"29745:18:21","nodeType":"YulFunctionCall","src":"29745:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"29692:43:21","nodeType":"YulIdentifier","src":"29692:43:21"},"nativeSrc":"29692:72:21","nodeType":"YulFunctionCall","src":"29692:72:21"},"nativeSrc":"29692:72:21","nodeType":"YulExpressionStatement","src":"29692:72:21"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"29818:6:21","nodeType":"YulIdentifier","src":"29818:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"29831:9:21","nodeType":"YulIdentifier","src":"29831:9:21"},{"kind":"number","nativeSrc":"29842:2:21","nodeType":"YulLiteral","src":"29842:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"29827:3:21","nodeType":"YulIdentifier","src":"29827:3:21"},"nativeSrc":"29827:18:21","nodeType":"YulFunctionCall","src":"29827:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"29774:43:21","nodeType":"YulIdentifier","src":"29774:43:21"},"nativeSrc":"29774:72:21","nodeType":"YulFunctionCall","src":"29774:72:21"},"nativeSrc":"29774:72:21","nodeType":"YulExpressionStatement","src":"29774:72:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_bytes32_t_uint256__fromStack_reversed","nativeSrc":"29300:553:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29430:9:21","nodeType":"YulTypedName","src":"29430:9:21","type":""},{"name":"value3","nativeSrc":"29442:6:21","nodeType":"YulTypedName","src":"29442:6:21","type":""},{"name":"value2","nativeSrc":"29450:6:21","nodeType":"YulTypedName","src":"29450:6:21","type":""},{"name":"value1","nativeSrc":"29458:6:21","nodeType":"YulTypedName","src":"29458:6:21","type":""},{"name":"value0","nativeSrc":"29466:6:21","nodeType":"YulTypedName","src":"29466:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29477:4:21","nodeType":"YulTypedName","src":"29477:4:21","type":""}],"src":"29300:553:21"},{"body":{"nativeSrc":"29922:80:21","nodeType":"YulBlock","src":"29922:80:21","statements":[{"nativeSrc":"29932:22:21","nodeType":"YulAssignment","src":"29932:22:21","value":{"arguments":[{"name":"offset","nativeSrc":"29947:6:21","nodeType":"YulIdentifier","src":"29947:6:21"}],"functionName":{"name":"mload","nativeSrc":"29941:5:21","nodeType":"YulIdentifier","src":"29941:5:21"},"nativeSrc":"29941:13:21","nodeType":"YulFunctionCall","src":"29941:13:21"},"variableNames":[{"name":"value","nativeSrc":"29932:5:21","nodeType":"YulIdentifier","src":"29932:5:21"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"29990:5:21","nodeType":"YulIdentifier","src":"29990:5:21"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"29963:26:21","nodeType":"YulIdentifier","src":"29963:26:21"},"nativeSrc":"29963:33:21","nodeType":"YulFunctionCall","src":"29963:33:21"},"nativeSrc":"29963:33:21","nodeType":"YulExpressionStatement","src":"29963:33:21"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"29859:143:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"29900:6:21","nodeType":"YulTypedName","src":"29900:6:21","type":""},{"name":"end","nativeSrc":"29908:3:21","nodeType":"YulTypedName","src":"29908:3:21","type":""}],"returnVariables":[{"name":"value","nativeSrc":"29916:5:21","nodeType":"YulTypedName","src":"29916:5:21","type":""}],"src":"29859:143:21"},{"body":{"nativeSrc":"30085:274:21","nodeType":"YulBlock","src":"30085:274:21","statements":[{"body":{"nativeSrc":"30131:83:21","nodeType":"YulBlock","src":"30131:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"30133:77:21","nodeType":"YulIdentifier","src":"30133:77:21"},"nativeSrc":"30133:79:21","nodeType":"YulFunctionCall","src":"30133:79:21"},"nativeSrc":"30133:79:21","nodeType":"YulExpressionStatement","src":"30133:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"30106:7:21","nodeType":"YulIdentifier","src":"30106:7:21"},{"name":"headStart","nativeSrc":"30115:9:21","nodeType":"YulIdentifier","src":"30115:9:21"}],"functionName":{"name":"sub","nativeSrc":"30102:3:21","nodeType":"YulIdentifier","src":"30102:3:21"},"nativeSrc":"30102:23:21","nodeType":"YulFunctionCall","src":"30102:23:21"},{"kind":"number","nativeSrc":"30127:2:21","nodeType":"YulLiteral","src":"30127:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"30098:3:21","nodeType":"YulIdentifier","src":"30098:3:21"},"nativeSrc":"30098:32:21","nodeType":"YulFunctionCall","src":"30098:32:21"},"nativeSrc":"30095:119:21","nodeType":"YulIf","src":"30095:119:21"},{"nativeSrc":"30224:128:21","nodeType":"YulBlock","src":"30224:128:21","statements":[{"nativeSrc":"30239:15:21","nodeType":"YulVariableDeclaration","src":"30239:15:21","value":{"kind":"number","nativeSrc":"30253:1:21","nodeType":"YulLiteral","src":"30253:1:21","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"30243:6:21","nodeType":"YulTypedName","src":"30243:6:21","type":""}]},{"nativeSrc":"30268:74:21","nodeType":"YulAssignment","src":"30268:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30314:9:21","nodeType":"YulIdentifier","src":"30314:9:21"},{"name":"offset","nativeSrc":"30325:6:21","nodeType":"YulIdentifier","src":"30325:6:21"}],"functionName":{"name":"add","nativeSrc":"30310:3:21","nodeType":"YulIdentifier","src":"30310:3:21"},"nativeSrc":"30310:22:21","nodeType":"YulFunctionCall","src":"30310:22:21"},{"name":"dataEnd","nativeSrc":"30334:7:21","nodeType":"YulIdentifier","src":"30334:7:21"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"30278:31:21","nodeType":"YulIdentifier","src":"30278:31:21"},"nativeSrc":"30278:64:21","nodeType":"YulFunctionCall","src":"30278:64:21"},"variableNames":[{"name":"value0","nativeSrc":"30268:6:21","nodeType":"YulIdentifier","src":"30268:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"30008:351:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30055:9:21","nodeType":"YulTypedName","src":"30055:9:21","type":""},{"name":"dataEnd","nativeSrc":"30066:7:21","nodeType":"YulTypedName","src":"30066:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"30078:6:21","nodeType":"YulTypedName","src":"30078:6:21","type":""}],"src":"30008:351:21"},{"body":{"nativeSrc":"30423:40:21","nodeType":"YulBlock","src":"30423:40:21","statements":[{"nativeSrc":"30434:22:21","nodeType":"YulAssignment","src":"30434:22:21","value":{"arguments":[{"name":"value","nativeSrc":"30450:5:21","nodeType":"YulIdentifier","src":"30450:5:21"}],"functionName":{"name":"mload","nativeSrc":"30444:5:21","nodeType":"YulIdentifier","src":"30444:5:21"},"nativeSrc":"30444:12:21","nodeType":"YulFunctionCall","src":"30444:12:21"},"variableNames":[{"name":"length","nativeSrc":"30434:6:21","nodeType":"YulIdentifier","src":"30434:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"30365:98:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"30406:5:21","nodeType":"YulTypedName","src":"30406:5:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"30416:6:21","nodeType":"YulTypedName","src":"30416:6:21","type":""}],"src":"30365:98:21"},{"body":{"nativeSrc":"30577:278:21","nodeType":"YulBlock","src":"30577:278:21","statements":[{"nativeSrc":"30587:52:21","nodeType":"YulVariableDeclaration","src":"30587:52:21","value":{"arguments":[{"name":"value","nativeSrc":"30633:5:21","nodeType":"YulIdentifier","src":"30633:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"30601:31:21","nodeType":"YulIdentifier","src":"30601:31:21"},"nativeSrc":"30601:38:21","nodeType":"YulFunctionCall","src":"30601:38:21"},"variables":[{"name":"length","nativeSrc":"30591:6:21","nodeType":"YulTypedName","src":"30591:6:21","type":""}]},{"nativeSrc":"30648:95:21","nodeType":"YulAssignment","src":"30648:95:21","value":{"arguments":[{"name":"pos","nativeSrc":"30731:3:21","nodeType":"YulIdentifier","src":"30731:3:21"},{"name":"length","nativeSrc":"30736:6:21","nodeType":"YulIdentifier","src":"30736:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"30655:75:21","nodeType":"YulIdentifier","src":"30655:75:21"},"nativeSrc":"30655:88:21","nodeType":"YulFunctionCall","src":"30655:88:21"},"variableNames":[{"name":"pos","nativeSrc":"30648:3:21","nodeType":"YulIdentifier","src":"30648:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"30791:5:21","nodeType":"YulIdentifier","src":"30791:5:21"},{"kind":"number","nativeSrc":"30798:4:21","nodeType":"YulLiteral","src":"30798:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"30787:3:21","nodeType":"YulIdentifier","src":"30787:3:21"},"nativeSrc":"30787:16:21","nodeType":"YulFunctionCall","src":"30787:16:21"},{"name":"pos","nativeSrc":"30805:3:21","nodeType":"YulIdentifier","src":"30805:3:21"},{"name":"length","nativeSrc":"30810:6:21","nodeType":"YulIdentifier","src":"30810:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"30752:34:21","nodeType":"YulIdentifier","src":"30752:34:21"},"nativeSrc":"30752:65:21","nodeType":"YulFunctionCall","src":"30752:65:21"},"nativeSrc":"30752:65:21","nodeType":"YulExpressionStatement","src":"30752:65:21"},{"nativeSrc":"30826:23:21","nodeType":"YulAssignment","src":"30826:23:21","value":{"arguments":[{"name":"pos","nativeSrc":"30837:3:21","nodeType":"YulIdentifier","src":"30837:3:21"},{"name":"length","nativeSrc":"30842:6:21","nodeType":"YulIdentifier","src":"30842:6:21"}],"functionName":{"name":"add","nativeSrc":"30833:3:21","nodeType":"YulIdentifier","src":"30833:3:21"},"nativeSrc":"30833:16:21","nodeType":"YulFunctionCall","src":"30833:16:21"},"variableNames":[{"name":"end","nativeSrc":"30826:3:21","nodeType":"YulIdentifier","src":"30826:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"30469:386:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"30558:5:21","nodeType":"YulTypedName","src":"30558:5:21","type":""},{"name":"pos","nativeSrc":"30565:3:21","nodeType":"YulTypedName","src":"30565:3:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"30573:3:21","nodeType":"YulTypedName","src":"30573:3:21","type":""}],"src":"30469:386:21"},{"body":{"nativeSrc":"30995:137:21","nodeType":"YulBlock","src":"30995:137:21","statements":[{"nativeSrc":"31006:100:21","nodeType":"YulAssignment","src":"31006:100:21","value":{"arguments":[{"name":"value0","nativeSrc":"31093:6:21","nodeType":"YulIdentifier","src":"31093:6:21"},{"name":"pos","nativeSrc":"31102:3:21","nodeType":"YulIdentifier","src":"31102:3:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"31013:79:21","nodeType":"YulIdentifier","src":"31013:79:21"},"nativeSrc":"31013:93:21","nodeType":"YulFunctionCall","src":"31013:93:21"},"variableNames":[{"name":"pos","nativeSrc":"31006:3:21","nodeType":"YulIdentifier","src":"31006:3:21"}]},{"nativeSrc":"31116:10:21","nodeType":"YulAssignment","src":"31116:10:21","value":{"name":"pos","nativeSrc":"31123:3:21","nodeType":"YulIdentifier","src":"31123:3:21"},"variableNames":[{"name":"end","nativeSrc":"31116:3:21","nodeType":"YulIdentifier","src":"31116:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"30861:271:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"30974:3:21","nodeType":"YulTypedName","src":"30974:3:21","type":""},{"name":"value0","nativeSrc":"30980:6:21","nodeType":"YulTypedName","src":"30980:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"30991:3:21","nodeType":"YulTypedName","src":"30991:3:21","type":""}],"src":"30861:271:21"},{"body":{"nativeSrc":"31181:43:21","nodeType":"YulBlock","src":"31181:43:21","statements":[{"nativeSrc":"31191:27:21","nodeType":"YulAssignment","src":"31191:27:21","value":{"arguments":[{"name":"value","nativeSrc":"31206:5:21","nodeType":"YulIdentifier","src":"31206:5:21"},{"kind":"number","nativeSrc":"31213:4:21","nodeType":"YulLiteral","src":"31213:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"31202:3:21","nodeType":"YulIdentifier","src":"31202:3:21"},"nativeSrc":"31202:16:21","nodeType":"YulFunctionCall","src":"31202:16:21"},"variableNames":[{"name":"cleaned","nativeSrc":"31191:7:21","nodeType":"YulIdentifier","src":"31191:7:21"}]}]},"name":"cleanup_t_uint8","nativeSrc":"31138:86:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"31163:5:21","nodeType":"YulTypedName","src":"31163:5:21","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"31173:7:21","nodeType":"YulTypedName","src":"31173:7:21","type":""}],"src":"31138:86:21"},{"body":{"nativeSrc":"31291:51:21","nodeType":"YulBlock","src":"31291:51:21","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"31308:3:21","nodeType":"YulIdentifier","src":"31308:3:21"},{"arguments":[{"name":"value","nativeSrc":"31329:5:21","nodeType":"YulIdentifier","src":"31329:5:21"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"31313:15:21","nodeType":"YulIdentifier","src":"31313:15:21"},"nativeSrc":"31313:22:21","nodeType":"YulFunctionCall","src":"31313:22:21"}],"functionName":{"name":"mstore","nativeSrc":"31301:6:21","nodeType":"YulIdentifier","src":"31301:6:21"},"nativeSrc":"31301:35:21","nodeType":"YulFunctionCall","src":"31301:35:21"},"nativeSrc":"31301:35:21","nodeType":"YulExpressionStatement","src":"31301:35:21"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"31230:112:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"31279:5:21","nodeType":"YulTypedName","src":"31279:5:21","type":""},{"name":"pos","nativeSrc":"31286:3:21","nodeType":"YulTypedName","src":"31286:3:21","type":""}],"src":"31230:112:21"},{"body":{"nativeSrc":"31526:367:21","nodeType":"YulBlock","src":"31526:367:21","statements":[{"nativeSrc":"31536:27:21","nodeType":"YulAssignment","src":"31536:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"31548:9:21","nodeType":"YulIdentifier","src":"31548:9:21"},{"kind":"number","nativeSrc":"31559:3:21","nodeType":"YulLiteral","src":"31559:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"31544:3:21","nodeType":"YulIdentifier","src":"31544:3:21"},"nativeSrc":"31544:19:21","nodeType":"YulFunctionCall","src":"31544:19:21"},"variableNames":[{"name":"tail","nativeSrc":"31536:4:21","nodeType":"YulIdentifier","src":"31536:4:21"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"31617:6:21","nodeType":"YulIdentifier","src":"31617:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"31630:9:21","nodeType":"YulIdentifier","src":"31630:9:21"},{"kind":"number","nativeSrc":"31641:1:21","nodeType":"YulLiteral","src":"31641:1:21","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31626:3:21","nodeType":"YulIdentifier","src":"31626:3:21"},"nativeSrc":"31626:17:21","nodeType":"YulFunctionCall","src":"31626:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"31573:43:21","nodeType":"YulIdentifier","src":"31573:43:21"},"nativeSrc":"31573:71:21","nodeType":"YulFunctionCall","src":"31573:71:21"},"nativeSrc":"31573:71:21","nodeType":"YulExpressionStatement","src":"31573:71:21"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"31694:6:21","nodeType":"YulIdentifier","src":"31694:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"31707:9:21","nodeType":"YulIdentifier","src":"31707:9:21"},{"kind":"number","nativeSrc":"31718:2:21","nodeType":"YulLiteral","src":"31718:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31703:3:21","nodeType":"YulIdentifier","src":"31703:3:21"},"nativeSrc":"31703:18:21","nodeType":"YulFunctionCall","src":"31703:18:21"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"31654:39:21","nodeType":"YulIdentifier","src":"31654:39:21"},"nativeSrc":"31654:68:21","nodeType":"YulFunctionCall","src":"31654:68:21"},"nativeSrc":"31654:68:21","nodeType":"YulExpressionStatement","src":"31654:68:21"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"31776:6:21","nodeType":"YulIdentifier","src":"31776:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"31789:9:21","nodeType":"YulIdentifier","src":"31789:9:21"},{"kind":"number","nativeSrc":"31800:2:21","nodeType":"YulLiteral","src":"31800:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"31785:3:21","nodeType":"YulIdentifier","src":"31785:3:21"},"nativeSrc":"31785:18:21","nodeType":"YulFunctionCall","src":"31785:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"31732:43:21","nodeType":"YulIdentifier","src":"31732:43:21"},"nativeSrc":"31732:72:21","nodeType":"YulFunctionCall","src":"31732:72:21"},"nativeSrc":"31732:72:21","nodeType":"YulExpressionStatement","src":"31732:72:21"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"31858:6:21","nodeType":"YulIdentifier","src":"31858:6:21"},{"arguments":[{"name":"headStart","nativeSrc":"31871:9:21","nodeType":"YulIdentifier","src":"31871:9:21"},{"kind":"number","nativeSrc":"31882:2:21","nodeType":"YulLiteral","src":"31882:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"31867:3:21","nodeType":"YulIdentifier","src":"31867:3:21"},"nativeSrc":"31867:18:21","nodeType":"YulFunctionCall","src":"31867:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"31814:43:21","nodeType":"YulIdentifier","src":"31814:43:21"},"nativeSrc":"31814:72:21","nodeType":"YulFunctionCall","src":"31814:72:21"},"nativeSrc":"31814:72:21","nodeType":"YulExpressionStatement","src":"31814:72:21"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"31348:545:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"31474:9:21","nodeType":"YulTypedName","src":"31474:9:21","type":""},{"name":"value3","nativeSrc":"31486:6:21","nodeType":"YulTypedName","src":"31486:6:21","type":""},{"name":"value2","nativeSrc":"31494:6:21","nodeType":"YulTypedName","src":"31494:6:21","type":""},{"name":"value1","nativeSrc":"31502:6:21","nodeType":"YulTypedName","src":"31502:6:21","type":""},{"name":"value0","nativeSrc":"31510:6:21","nodeType":"YulTypedName","src":"31510:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"31521:4:21","nodeType":"YulTypedName","src":"31521:4:21","type":""}],"src":"31348:545:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Status_$7191(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Status_$7191(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$7191(value)\n    }\n\n    function convert_t_enum$_Status_$7191_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$7191(value)\n    }\n\n    function abi_encode_t_enum$_Status_$7191_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$7191_to_t_uint8(value))\n    }\n\n    // struct SuperBridgeL2.Transfer -> struct SuperBridgeL2.Transfer\n    function abi_encode_t_struct$_Transfer_$7203_memory_ptr_to_t_struct$_Transfer_$7203_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // originalAmount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // bridgedAmount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // timestamp\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // status\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_enum$_Status_$7191_to_t_uint8(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Transfer_$7203_memory_ptr__to_t_struct$_Transfer_$7203_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_struct$_Transfer_$7203_memory_ptr_to_t_struct$_Transfer_$7203_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_enum$_Status_$7191_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$7191_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_enum$_Status_$7191__to_t_address_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_enum$_Status_$7191_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes32t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32_t_address_t_uint256_t_address__to_t_bytes32_t_address_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos , value4, value3, value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value4,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_bytes32_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"482":[{"length":32,"start":10145},{"length":32,"start":10230},{"length":32,"start":10787}]},"linkReferences":{},"object":"6080604052600436106102515760003560e01c8063715018a611610139578063bf333f2c116100b6578063de9b94881161007a578063de9b9488146108d2578063e1a45218146108fd578063e74b981b14610928578063e78cea9214610951578063f2fde38b1461095b578063fa1ccffd1461098457610251565b8063bf333f2c146107db578063ca9e445314610806578063cd6dc6871461082f578063d5f5058214610858578063d8c171141461089557610251565b80638c879fb9116100fd5780638c879fb9146106f45780638c8c20031461071f5780638da5cb5b1461075c5780638ebfc79614610787578063ad3cb1cc146107b057610251565b8063715018a61461062157806372070b81146106385780637249fbb6146106635780637d57900a1461068c578063838fb7f1146106b757610251565b80633e718e83116101d2578063469048401161019657806346904840146105425780634f1ef2861461056d57806351858e271461058957806352d1902d146105a057806354fd4d50146105cb5780635c975abb146105f657610251565b80633e718e831461045e5780633f4218e0146104875780633f4ba83a146104c4578063400ba069146104db5780634623c91d1461051957610251565b806312679fed1161021957806312679fed1461034d5780631a17969214610378578063260958a5146103a35780632f7801f4146103e05780633c64f04b1461041d57610251565b806302e888991461025657806305acedf51461027f57806309705de8146102bc5780630c80447a146102f95780630d8e6e2c14610322575b600080fd5b34801561026257600080fd5b5061027d600480360381019061027891906135bc565b6109ad565b005b34801561028b57600080fd5b506102a660048036038101906102a19190613632565b610a10565b6040516102b39190613681565b60405180910390f35b3480156102c857600080fd5b506102e360048036038101906102de919061369c565b610a71565b6040516102f09190613681565b60405180910390f35b34801561030557600080fd5b50610320600480360381019061031b919061369c565b610a91565b005b34801561032e57600080fd5b50610337610b2f565b6040516103449190613759565b60405180910390f35b34801561035957600080fd5b50610362610bc1565b60405161036f919061378a565b60405180910390f35b34801561038457600080fd5b5061038d610bc7565b60405161039a919061378a565b60405180910390f35b3480156103af57600080fd5b506103ca60048036038101906103c591906137db565b610bcc565b6040516103d79190613905565b60405180910390f35b3480156103ec57600080fd5b506104076004803603810190610402919061369c565b610ca8565b604051610414919061378a565b60405180910390f35b34801561042957600080fd5b50610444600480360381019061043f91906137db565b610cc0565b60405161045595949392919061393e565b60405180910390f35b34801561046a57600080fd5b5061048560048036038101906104809190613632565b610d23565b005b34801561049357600080fd5b506104ae60048036038101906104a9919061369c565b610e39565b6040516104bb9190613681565b60405180910390f35b3480156104d057600080fd5b506104d9610e59565b005b3480156104e757600080fd5b5061050260048036038101906104fd9190613991565b610e6b565b6040516105109291906139d1565b60405180910390f35b34801561052557600080fd5b50610540600480360381019061053b91906135bc565b610eff565b005b34801561054e57600080fd5b5061055761109f565b60405161056491906139fa565b60405180910390f35b61058760048036038101906105829190613b4a565b6110c3565b005b34801561059557600080fd5b5061059e6110e2565b005b3480156105ac57600080fd5b506105b561116f565b6040516105c29190613bb5565b60405180910390f35b3480156105d757600080fd5b506105e06111a2565b6040516105ed9190613759565b60405180910390f35b34801561060257600080fd5b5061060b611230565b6040516106189190613681565b60405180910390f35b34801561062d57600080fd5b50610636611255565b005b34801561064457600080fd5b5061064d611269565b60405161065a919061378a565b60405180910390f35b34801561066f57600080fd5b5061068a600480360381019061068591906137db565b61126f565b005b34801561069857600080fd5b506106a16114f1565b6040516106ae919061378a565b60405180910390f35b3480156106c357600080fd5b506106de60048036038101906106d991906137db565b6114f7565b6040516106eb919061378a565b60405180910390f35b34801561070057600080fd5b506107096115e3565b604051610716919061378a565b60405180910390f35b34801561072b57600080fd5b50610746600480360381019061074191906137db565b6115e9565b6040516107539190613681565b60405180910390f35b34801561076857600080fd5b5061077161170b565b60405161077e91906139fa565b60405180910390f35b34801561079357600080fd5b506107ae60048036038101906107a991906135bc565b611743565b005b3480156107bc57600080fd5b506107c56117f4565b6040516107d29190613759565b60405180910390f35b3480156107e757600080fd5b506107f061182d565b6040516107fd919061378a565b60405180910390f35b34801561081257600080fd5b5061082d60048036038101906108289190613c86565b611833565b005b34801561083b57600080fd5b5061085660048036038101906108519190613632565b611e78565b005b34801561086457600080fd5b5061087f600480360381019061087a919061369c565b6121ed565b60405161088c9190613681565b60405180910390f35b3480156108a157600080fd5b506108bc60048036038101906108b791906137db565b61220d565b6040516108c9919061378a565b60405180910390f35b3480156108de57600080fd5b506108e7612225565b6040516108f4919061378a565b60405180910390f35b34801561090957600080fd5b5061091261222b565b60405161091f919061378a565b60405180910390f35b34801561093457600080fd5b5061094f600480360381019061094a919061369c565b612231565b005b6109596122dc565b005b34801561096757600080fd5b50610982600480360381019061097d919061369c565b612591565b005b34801561099057600080fd5b506109ab60048036038101906109a69190613d1b565b612617565b005b6109b56126a6565b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000808383604051602001610a26929190613db1565b60405160208183030381529060405280519060200120905060006007600083815260200190815260200160002054905060008114158015610a675750804210155b9250505092915050565b60086020528060005260406000206000915054906101000a900460ff1681565b610a996126a6565b60008142604051602001610aae929190613db1565b604051602081830303815290604052805190602001209050600060065442610ad69190613e0c565b9050806007600084815260200190815260200160002081905550817f79e2dca331f93c0d9119556c8a471734e6bc8470283391068f156e9a6d3cd3e68483604051610b22929190613e40565b60405180910390a2505050565b6060600b8054610b3e90613e98565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6a90613e98565b8015610bb75780601f10610b8c57610100808354040283529160200191610bb7565b820191906000526020600020905b815481529060010190602001808311610b9a57829003601f168201915b5050505050905090565b60055481565b600181565b610bd46134bb565b600360008381526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff166002811115610c8b57610c8a613826565b5b6002811115610c9d57610c9c613826565b5b815250509050919050565b60026020528060005260406000206000915090505481565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b610d2b6126a6565b60008282604051602001610d40929190613db1565b60405160208183030381529060405280519060200120905060006007600083815260200190815260200160002054905060008103610daa576040517fe1af1e2e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80421015610de4576040517f1bada80200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007600083815260200190815260200160002060009055817f1b011fae1a8fa8755c05a1200229cf94f1218002d660dae8eca1e796db11e21285604051610e2b91906139fa565b60405180910390a250505050565b60016020528060005260406000206000915054906101000a900460ff1681565b610e616126a6565b610e6961272d565b565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610ecc5760008491509150610ef8565b6127106101f485610edd9190613ec9565b610ee79190613f3a565b91508184610ef59190613f6b565b90505b9250929050565b610f076126a6565b808015610f5e5750600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b15610f805760056000815480929190610f7690613f9f565b9190505550610ff6565b80158015610fd75750600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b15610ff55760056000815480929190610fef90613fe7565b91905055505b5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f763b63b30e91c843bb39e4379603697003d3b7c1f192619cd782fa33bdc44396826040516110939190613681565b60405180910390a25050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6110cb61279f565b6110d482612885565b6110de8282612890565b5050565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611165576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61116d6129af565b565b6000611179612a21565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600b80546111af90613e98565b80601f01602080910402602001604051908101604052809291908181526020018280546111db90613e98565b80156112285780601f106111fd57610100808354040283529160200191611228565b820191906000526020600020905b81548152906001019060200180831161120b57829003601f168201915b505050505081565b60008061123b612aa8565b90508060000160009054906101000a900460ff1691505090565b61125d6126a6565b6112676000612ad0565b565b60095481565b611277612ba7565b6000600360008381526020019081526020016000209050600060028111156112a2576112a1613826565b5b8160040160009054906101000a900460ff1660028111156112c6576112c5613826565b5b146112fd576040517f3742d1f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611386576040517f3e87cffd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61070881600301546113989190613e0c565b42116113d0576040517f0b4d698100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028160040160006101000a81548160ff021916908360028111156113f8576113f7613826565b5b021790555060008160010154905060003373ffffffffffffffffffffffffffffffffffffffff168260405161142c90614041565b60006040518083038185875af1925050503d8060008114611469576040519150601f19603f3d011682016040523d82523d6000602084013e61146e565b606091505b50509050806114a9576040517ff0c49d4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b837ff552ca82e113ac3c539c3d617f29fcd19c172a0c75dad017555c9e109f7fe18333846040516114db929190613e40565b60405180910390a25050506114ee612bfe565b50565b61070881565b600080600360008481526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1660028111156115b1576115b0613826565b5b60028111156115c3576115c2613826565b5b81525050905061070881606001516115db9190613e0c565b915050919050565b60065481565b600080600360008481526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1660028111156116a3576116a2613826565b5b60028111156116b5576116b4613826565b5b815250509050600060028111156116cf576116ce613826565b5b816080015160028111156116e6576116e5613826565b5b148015611703575061070881606001516117009190613e0c565b42115b915050919050565b600080611716612c17565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b61174b6126a6565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f4d5771454588f51370a8a2e7e151354b6de0dc3159b14821b4ad76bc04c28bc7826040516117e89190613681565b60405180910390a25050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6101f481565b61183b612ba7565b611843612c3f565b60006003600087815260200190815260200160002090506000600281111561186e5761186d613826565b5b8160040160009054906101000a900460ff16600281111561189257611891613826565b5b146118c9576040517f475a253500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611953576040517f3b2a862c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828290508585905014611992576040517f815e1d6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018585905010156119d0576040517fe246dc6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000868260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836002015430604051602001611a119493929190614077565b6040516020818303038152906040528051906020012090506000611a3482612c80565b905060008585905067ffffffffffffffff811115611a5557611a54613a1f565b5b604051908082528060200260200182016040528015611a835781602001602082028036833780820191505090505b50905060005b88889050811015611d0c576000611b07848b8b85818110611aad57611aac6140c5565b5b9050602002810190611abf9190614103565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050612cb6565b9050878783818110611b1c57611b1b6140c5565b5b9050602002016020810190611b31919061369c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b95576040517f815e1d6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611c18576040517f54ac7bfc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82811015611caf578173ffffffffffffffffffffffffffffffffffffffff16848281518110611c4d57611c4c6140c5565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603611ca2576040517f8044bb3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080600101915050611c1b565b5080838381518110611cc457611cc36140c5565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050508080600101915050611a89565b5060018460040160006101000a81548160ff02191690836002811115611d3557611d34613826565b5b021790555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168560010154604051611d8590614041565b60006040518083038185875af1925050503d8060008114611dc2576040519150601f19603f3d011682016040523d82523d6000602084013e611dc7565b606091505b5050905080611e02576040517f096dc0e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b897f3a5e0271cd79026f0993aa13e6dd17d1f34284aa2340c1d2c33653b9a4433ee98660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168760020154604051611e5c929190613e40565b60405180910390a25050505050611e71612bfe565b5050505050565b6000611e82612ce2565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015611ed05750825b9050600060018367ffffffffffffffff16148015611f05575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611f13575080155b15611f4a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315611f9a5760018560000160086101000a81548160ff0219169083151502179055505b611fa333612cf6565b611fab612d0a565b611fb3612d1c565b611fbb612d26565b866000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600681905550620151806009819055506040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250600b90816120509190614312565b5060018060007317cabc8001a30800835dd8206ceb0c4ba90b591373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600460007373af5be3db46ce3b7c50fd833b9c60180f33944973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016005819055506001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555083156121e45760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516121db9190614433565b60405180910390a15b50505050505050565b60046020528060005260406000206000915054906101000a900460ff1681565b60076020528060005260406000206000915090505481565b600a5481565b61271081565b6122396126a6565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507faaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d381836040516122d092919061444e565b60405180910390a15050565b6122e4612ba7565b6122ec612c3f565b60003403612326576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080349050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166123a9576127106101f43461238e9190613ec9565b6123989190613f3a565b915081346123a69190613f6b565b90505b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906123fb90613f9f565b9190505590506000333442843060405160200161241c959493929190614477565b6040516020818303038152906040528051906020012090506040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020013481526020018481526020014281526020016000600281111561248157612480613826565b5b8152506003600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083600281111561252757612526613826565b5b02179055509050503373ffffffffffffffffffffffffffffffffffffffff167f719ab00511e884d1ea4921ee843132435dc006b0bb7f8b67fb693b621e45bb533485844260405161257b94939291906144d6565b60405180910390a25050505061258f612bfe565b565b6125996126a6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361260b5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161260291906139fa565b60405180910390fd5b61261481612ad0565b50565b61261f6126a6565b61012c81101561265b576040517ff8d10e8200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006006549050816006819055507f3e9cac94b7c7db9b86df56321e6f7e3e88a6c87fc15fd825df1492cf69e33551818360405161269a9291906139d1565b60405180910390a15050565b6126ae612d30565b73ffffffffffffffffffffffffffffffffffffffff166126cc61170b565b73ffffffffffffffffffffffffffffffffffffffff161461272b576126ef612d30565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161272291906139fa565b60405180910390fd5b565b612735612d38565b600061273f612aa8565b905060008160000160006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa612787612d30565b60405161279491906139fa565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061284c57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16612833612d78565b73ffffffffffffffffffffffffffffffffffffffff1614155b15612883576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61288d6126a6565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156128f857506040513d601f19601f820116820180604052508101906128f59190614530565b60015b61293957816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161293091906139fa565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146129a057806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016129979190613bb5565b60405180910390fd5b6129aa8383612dcf565b505050565b6129b7612c3f565b60006129c1612aa8565b905060018160000160006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612a09612d30565b604051612a1691906139fa565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614612aa6576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b6000612ada612c17565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6000612bb1612e42565b90506002816000015403612bf1576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002816000018190555050565b6000612c08612e42565b90506001816000018190555050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b612c47611230565b15612c7e576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080612cc68686612e6a565b925092509250612cd68282612ec6565b82935050505092915050565b600080612ced61302a565b90508091505090565b612cfe613055565b612d0781613095565b50565b612d12613055565b612d1a61311b565b565b612d24613055565b565b612d2e613055565b565b600033905090565b612d40611230565b612d76576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000612da67f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61313c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612dd882613146565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115612e3557612e2f8282613213565b50612e3e565b612e3d613297565b5b5050565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b60008060006041845103612eaf5760008060006020870151925060408701519150606087015160001a9050612ea1888285856132d4565b955095509550505050612ebf565b60006002855160001b9250925092505b9250925092565b60006003811115612eda57612ed9613826565b5b826003811115612eed57612eec613826565b5b03156130265760016003811115612f0757612f06613826565b5b826003811115612f1a57612f19613826565b5b03612f51576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115612f6557612f64613826565b5b826003811115612f7857612f77613826565b5b03612fbd578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401612fb4919061378a565b60405180910390fd5b600380811115612fd057612fcf613826565b5b826003811115612fe357612fe2613826565b5b0361302557806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161301c9190613bb5565b60405180910390fd5b5b5050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b61305d6133c8565b613093576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61309d613055565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361310f5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161310691906139fa565b60405180910390fd5b61311881612ad0565b50565b613123613055565b600061312d612e42565b90506001816000018190555050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b036131a257806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161319991906139fa565b60405180910390fd5b806131cf7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61313c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161323d9190614599565b600060405180830381855af49150503d8060008114613278576040519150601f19603f3d011682016040523d82523d6000602084013e61327d565b606091505b509150915061328d8583836133e8565b9250505092915050565b60003411156132d2576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156133145760006003859250925092506133be565b60006001888888886040516000815260200160405260405161333994939291906145cc565b6020604051602081039080840390855afa15801561335b573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036133af57600060016000801b935093509350506133be565b8060008060001b935093509350505b9450945094915050565b60006133d2612ce2565b60000160089054906101000a900460ff16905090565b6060826133fd576133f882613477565b61346f565b60008251148015613425575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561346757836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161345e91906139fa565b60405180910390fd5b819050613470565b5b9392505050565b60008151111561348957805160208201fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000600281111561350c5761350b613826565b5b81525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061355182613526565b9050919050565b61356181613546565b811461356c57600080fd5b50565b60008135905061357e81613558565b92915050565b60008115159050919050565b61359981613584565b81146135a457600080fd5b50565b6000813590506135b681613590565b92915050565b600080604083850312156135d3576135d261351c565b5b60006135e18582860161356f565b92505060206135f2858286016135a7565b9150509250929050565b6000819050919050565b61360f816135fc565b811461361a57600080fd5b50565b60008135905061362c81613606565b92915050565b600080604083850312156136495761364861351c565b5b60006136578582860161356f565b92505060206136688582860161361d565b9150509250929050565b61367b81613584565b82525050565b60006020820190506136966000830184613672565b92915050565b6000602082840312156136b2576136b161351c565b5b60006136c08482850161356f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156137035780820151818401526020810190506136e8565b60008484015250505050565b6000601f19601f8301169050919050565b600061372b826136c9565b61373581856136d4565b93506137458185602086016136e5565b61374e8161370f565b840191505092915050565b600060208201905081810360008301526137738184613720565b905092915050565b613784816135fc565b82525050565b600060208201905061379f600083018461377b565b92915050565b6000819050919050565b6137b8816137a5565b81146137c357600080fd5b50565b6000813590506137d5816137af565b92915050565b6000602082840312156137f1576137f061351c565b5b60006137ff848285016137c6565b91505092915050565b61381181613546565b82525050565b613820816135fc565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061386657613865613826565b5b50565b600081905061387782613855565b919050565b600061388782613869565b9050919050565b6138978161387c565b82525050565b60a0820160008201516138b36000850182613808565b5060208201516138c66020850182613817565b5060408201516138d96040850182613817565b5060608201516138ec6060850182613817565b5060808201516138ff608085018261388e565b50505050565b600060a08201905061391a600083018461389d565b92915050565b61392981613546565b82525050565b6139388161387c565b82525050565b600060a0820190506139536000830188613920565b613960602083018761377b565b61396d604083018661377b565b61397a606083018561377b565b613987608083018461392f565b9695505050505050565b600080604083850312156139a8576139a761351c565b5b60006139b68582860161361d565b92505060206139c78582860161356f565b9150509250929050565b60006040820190506139e6600083018561377b565b6139f3602083018461377b565b9392505050565b6000602082019050613a0f6000830184613920565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613a578261370f565b810181811067ffffffffffffffff82111715613a7657613a75613a1f565b5b80604052505050565b6000613a89613512565b9050613a958282613a4e565b919050565b600067ffffffffffffffff821115613ab557613ab4613a1f565b5b613abe8261370f565b9050602081019050919050565b82818337600083830152505050565b6000613aed613ae884613a9a565b613a7f565b905082815260208101848484011115613b0957613b08613a1a565b5b613b14848285613acb565b509392505050565b600082601f830112613b3157613b30613a15565b5b8135613b41848260208601613ada565b91505092915050565b60008060408385031215613b6157613b6061351c565b5b6000613b6f8582860161356f565b925050602083013567ffffffffffffffff811115613b9057613b8f613521565b5b613b9c85828601613b1c565b9150509250929050565b613baf816137a5565b82525050565b6000602082019050613bca6000830184613ba6565b92915050565b600080fd5b600080fd5b60008083601f840112613bf057613bef613a15565b5b8235905067ffffffffffffffff811115613c0d57613c0c613bd0565b5b602083019150836020820283011115613c2957613c28613bd5565b5b9250929050565b60008083601f840112613c4657613c45613a15565b5b8235905067ffffffffffffffff811115613c6357613c62613bd0565b5b602083019150836020820283011115613c7f57613c7e613bd5565b5b9250929050565b600080600080600060608688031215613ca257613ca161351c565b5b6000613cb0888289016137c6565b955050602086013567ffffffffffffffff811115613cd157613cd0613521565b5b613cdd88828901613bda565b9450945050604086013567ffffffffffffffff811115613d0057613cff613521565b5b613d0c88828901613c30565b92509250509295509295909350565b600060208284031215613d3157613d3061351c565b5b6000613d3f8482850161361d565b91505092915050565b60008160601b9050919050565b6000613d6082613d48565b9050919050565b6000613d7282613d55565b9050919050565b613d8a613d8582613546565b613d67565b82525050565b6000819050919050565b613dab613da6826135fc565b613d90565b82525050565b6000613dbd8285613d79565b601482019150613dcd8284613d9a565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613e17826135fc565b9150613e22836135fc565b9250828201905080821115613e3a57613e39613ddd565b5b92915050565b6000604082019050613e556000830185613920565b613e62602083018461377b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613eb057607f821691505b602082108103613ec357613ec2613e69565b5b50919050565b6000613ed4826135fc565b9150613edf836135fc565b9250828202613eed816135fc565b91508282048414831517613f0457613f03613ddd565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613f45826135fc565b9150613f50836135fc565b925082613f6057613f5f613f0b565b5b828204905092915050565b6000613f76826135fc565b9150613f81836135fc565b9250828203905081811115613f9957613f98613ddd565b5b92915050565b6000613faa826135fc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613fdc57613fdb613ddd565b5b600182019050919050565b6000613ff2826135fc565b91506000820361400557614004613ddd565b5b600182039050919050565b600081905092915050565b50565b600061402b600083614010565b91506140368261401b565b600082019050919050565b600061404c8261401e565b9150819050919050565b6000819050919050565b61407161406c826137a5565b614056565b82525050565b60006140838287614060565b6020820191506140938286613d79565b6014820191506140a38285613d9a565b6020820191506140b38284613d79565b60148201915081905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126141205761411f6140f4565b5b80840192508235915067ffffffffffffffff821115614142576141416140f9565b5b60208301925060018202360383131561415e5761415d6140fe565b5b509250929050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026141c87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261418b565b6141d2868361418b565b95508019841693508086168417925050509392505050565b6000819050919050565b600061420f61420a614205846135fc565b6141ea565b6135fc565b9050919050565b6000819050919050565b614229836141f4565b61423d61423582614216565b848454614198565b825550505050565b600090565b614252614245565b61425d818484614220565b505050565b5b818110156142815761427660008261424a565b600181019050614263565b5050565b601f8211156142c65761429781614166565b6142a08461417b565b810160208510156142af578190505b6142c36142bb8561417b565b830182614262565b50505b505050565b600082821c905092915050565b60006142e9600019846008026142cb565b1980831691505092915050565b600061430283836142d8565b9150826002028217905092915050565b61431b826136c9565b67ffffffffffffffff81111561433457614333613a1f565b5b61433e8254613e98565b614349828285614285565b600060209050601f83116001811461437c576000841561436a578287015190505b61437485826142f6565b8655506143dc565b601f19841661438a86614166565b60005b828110156143b25784890151825560018201915060208501945060208101905061438d565b868310156143cf57848901516143cb601f8916826142d8565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061441d614418614413846143e4565b6141ea565b6143ee565b9050919050565b61442d81614402565b82525050565b60006020820190506144486000830184614424565b92915050565b60006040820190506144636000830185613920565b6144706020830184613920565b9392505050565b60006144838288613d79565b6014820191506144938287613d9a565b6020820191506144a38286613d9a565b6020820191506144b38285613d9a565b6020820191506144c38284613d79565b6014820191508190509695505050505050565b60006080820190506144eb600083018761377b565b6144f8602083018661377b565b6145056040830185613ba6565b614512606083018461377b565b95945050505050565b60008151905061452a816137af565b92915050565b6000602082840312156145465761454561351c565b5b60006145548482850161451b565b91505092915050565b600081519050919050565b60006145738261455d565b61457d8185614010565b935061458d8185602086016136e5565b80840191505092915050565b60006145a58284614568565b915081905092915050565b600060ff82169050919050565b6145c6816145b0565b82525050565b60006080820190506145e16000830187613ba6565b6145ee60208301866145bd565b6145fb6040830185613ba6565b6146086060830184613ba6565b9594505050505056fea2646970667358221220f0a044926fc53c167d6694d4db8d4118a05778de901dc68ceb428f2fc035c20064736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x251 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xBF333F2C GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDE9B9488 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDE9B9488 EQ PUSH2 0x8D2 JUMPI DUP1 PUSH4 0xE1A45218 EQ PUSH2 0x8FD JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x928 JUMPI DUP1 PUSH4 0xE78CEA92 EQ PUSH2 0x951 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x95B JUMPI DUP1 PUSH4 0xFA1CCFFD EQ PUSH2 0x984 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0xBF333F2C EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xCA9E4453 EQ PUSH2 0x806 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x82F JUMPI DUP1 PUSH4 0xD5F50582 EQ PUSH2 0x858 JUMPI DUP1 PUSH4 0xD8C17114 EQ PUSH2 0x895 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x8C879FB9 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x8C879FB9 EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0x8C8C2003 EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0x8EBFC796 EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x7B0 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0x72070B81 EQ PUSH2 0x638 JUMPI DUP1 PUSH4 0x7249FBB6 EQ PUSH2 0x663 JUMPI DUP1 PUSH4 0x7D57900A EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0x838FB7F1 EQ PUSH2 0x6B7 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x3E718E83 GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x46904840 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0x51858E27 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x5F6 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x3E718E83 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x3F4218E0 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x400BA069 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x4623C91D EQ PUSH2 0x519 JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x12679FED GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x12679FED EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x1A179692 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x260958A5 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x2F7801F4 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x3C64F04B EQ PUSH2 0x41D JUMPI PUSH2 0x251 JUMP JUMPDEST DUP1 PUSH4 0x2E88899 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x5ACEDF5 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x9705DE8 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xC80447A EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x322 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x35BC JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x3632 JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x337 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x3759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38D PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x3905 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0xCA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0xCC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x393E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x485 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x3632 JUMP JUMPDEST PUSH2 0xD23 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D9 PUSH2 0xE59 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x502 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x3991 JUMP JUMPDEST PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP3 SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x35BC JUMP JUMPDEST PUSH2 0xEFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x557 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x587 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x582 SWAP2 SWAP1 PUSH2 0x3B4A JUMP JUMPDEST PUSH2 0x10C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH2 0x10E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B5 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x3BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E0 PUSH2 0x11A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x3759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60B PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x636 PUSH2 0x1255 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64D PUSH2 0x1269 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x685 SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x126F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A1 PUSH2 0x14F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x709 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x746 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x771 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A9 SWAP2 SWAP1 PUSH2 0x35BC JUMP JUMPDEST PUSH2 0x1743 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C5 PUSH2 0x17F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0x3759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F0 PUSH2 0x182D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7FD SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x3C86 JUMP JUMPDEST PUSH2 0x1833 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x856 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x3632 JUMP JUMPDEST PUSH2 0x1E78 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0x21ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B7 SWAP2 SWAP1 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x220D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C9 SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E7 PUSH2 0x2225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x912 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91F SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x934 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x94F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94A SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0x2231 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x959 PUSH2 0x22DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x967 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x982 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH2 0x2591 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x990 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x3D1B JUMP JUMPDEST PUSH2 0x2617 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B5 PUSH2 0x26A6 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA26 SWAP3 SWAP2 SWAP1 PUSH2 0x3DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO DUP1 ISZERO PUSH2 0xA67 JUMPI POP DUP1 TIMESTAMP LT ISZERO JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xA99 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x0 DUP2 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAAE SWAP3 SWAP2 SWAP1 PUSH2 0x3DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xAD6 SWAP2 SWAP1 PUSH2 0x3E0C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x79E2DCA331F93C0D9119556C8A471734E6BC8470283391068F156E9A6D3CD3E6 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB22 SWAP3 SWAP2 SWAP1 PUSH2 0x3E40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0xB3E SWAP1 PUSH2 0x3E98 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB6A SWAP1 PUSH2 0x3E98 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBB7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0xBD4 PUSH2 0x34BB JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC8B JUMPI PUSH2 0xC8A PUSH2 0x3826 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC9D JUMPI PUSH2 0xC9C PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xD2B PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD40 SWAP3 SWAP2 SWAP1 PUSH2 0x3DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1AF1E2E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 TIMESTAMP LT ISZERO PUSH2 0xDE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1BADA80200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE DUP2 PUSH32 0x1B011FAE1A8FA8755C05A1200229CF94F1218002D660DAE8ECA1E796DB11E212 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE2B SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xE61 PUSH2 0x26A6 JUMP JUMPDEST PUSH2 0xE69 PUSH2 0x272D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xECC JUMPI PUSH1 0x0 DUP5 SWAP2 POP SWAP2 POP PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x1F4 DUP6 PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0xEE7 SWAP2 SWAP1 PUSH2 0x3F3A JUMP JUMPDEST SWAP2 POP DUP2 DUP5 PUSH2 0xEF5 SWAP2 SWAP1 PUSH2 0x3F6B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF07 PUSH2 0x26A6 JUMP JUMPDEST DUP1 DUP1 ISZERO PUSH2 0xF5E JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xF80 JUMPI PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF76 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xFF6 JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0xFD7 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xFF5 JUMPI PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFEF SWAP1 PUSH2 0x3FE7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x763B63B30E91C843BB39E4379603697003D3B7C1F192619CD782FA33BDC44396 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1093 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x10CB PUSH2 0x279F JUMP JUMPDEST PUSH2 0x10D4 DUP3 PUSH2 0x2885 JUMP JUMPDEST PUSH2 0x10DE DUP3 DUP3 PUSH2 0x2890 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1165 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA8E4EB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116D PUSH2 0x29AF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1179 PUSH2 0x2A21 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x11AF SWAP1 PUSH2 0x3E98 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11DB SWAP1 PUSH2 0x3E98 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x120B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x123B PUSH2 0x2AA8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x125D PUSH2 0x26A6 JUMP JUMPDEST PUSH2 0x1267 PUSH1 0x0 PUSH2 0x2AD0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1277 PUSH2 0x2BA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12A2 JUMPI PUSH2 0x12A1 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12C6 JUMPI PUSH2 0x12C5 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x12FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3742D1F600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3E87CFFD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x708 DUP2 PUSH1 0x3 ADD SLOAD PUSH2 0x1398 SWAP2 SWAP1 PUSH2 0x3E0C JUMP JUMPDEST TIMESTAMP GT PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB4D698100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x142C SWAP1 PUSH2 0x4041 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1469 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x146E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x14A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF0C49D4400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH32 0xF552CA82E113AC3C539C3D617F29FCD19C172A0C75DAD017555C9E109F7FE183 CALLER DUP5 PUSH1 0x40 MLOAD PUSH2 0x14DB SWAP3 SWAP2 SWAP1 PUSH2 0x3E40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x14EE PUSH2 0x2BFE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x708 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15B1 JUMPI PUSH2 0x15B0 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15C3 JUMPI PUSH2 0x15C2 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x708 DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x3E0C JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16A3 JUMPI PUSH2 0x16A2 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16B5 JUMPI PUSH2 0x16B4 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16CF JUMPI PUSH2 0x16CE PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16E6 JUMPI PUSH2 0x16E5 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x1703 JUMPI POP PUSH2 0x708 DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x1700 SWAP2 SWAP1 PUSH2 0x3E0C JUMP JUMPDEST TIMESTAMP GT JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1716 PUSH2 0x2C17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x174B PUSH2 0x26A6 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4D5771454588F51370A8A2E7E151354B6DE0DC3159B14821B4AD76BC04C28BC7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x17E8 SWAP2 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH2 0x183B PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0x1843 PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1892 JUMPI PUSH2 0x1891 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x18C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x475A253500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1953 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3B2A862C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ PUSH2 0x1992 JUMPI PUSH1 0x40 MLOAD PUSH32 0x815E1D6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 DUP6 SWAP1 POP LT ISZERO PUSH2 0x19D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE246DC6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x2 ADD SLOAD ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A11 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4077 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1A34 DUP3 PUSH2 0x2C80 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP6 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A55 JUMPI PUSH2 0x1A54 PUSH2 0x3A1F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A83 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP9 DUP9 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1D0C JUMPI PUSH1 0x0 PUSH2 0x1B07 DUP5 DUP12 DUP12 DUP6 DUP2 DUP2 LT PUSH2 0x1AAD JUMPI PUSH2 0x1AAC PUSH2 0x40C5 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1ABF SWAP2 SWAP1 PUSH2 0x4103 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x2CB6 JUMP JUMPDEST SWAP1 POP DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x1B1C JUMPI PUSH2 0x1B1B PUSH2 0x40C5 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1B31 SWAP2 SWAP1 PUSH2 0x369C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x815E1D6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1C18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x54AC7BFC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1CAF JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C4D JUMPI PUSH2 0x1C4C PUSH2 0x40C5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8044BB3300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1C1B JUMP JUMPDEST POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CC4 JUMPI PUSH2 0x1CC3 PUSH2 0x40C5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1A89 JUMP JUMPDEST POP PUSH1 0x1 DUP5 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1D35 JUMPI PUSH2 0x1D34 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1D85 SWAP1 PUSH2 0x4041 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DC2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1E02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96DC0E100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP10 PUSH32 0x3A5E0271CD79026F0993AA13E6DD17D1F34284AA2340C1D2C33653B9A4433EE9 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1E5C SWAP3 SWAP2 SWAP1 PUSH2 0x3E40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP PUSH2 0x1E71 PUSH2 0x2BFE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E82 PUSH2 0x2CE2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1ED0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1F05 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1F13 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1F4A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1FA3 CALLER PUSH2 0x2CF6 JUMP JUMPDEST PUSH2 0x1FAB PUSH2 0x2D0A JUMP JUMPDEST PUSH2 0x1FB3 PUSH2 0x2D1C JUMP JUMPDEST PUSH2 0x1FBB PUSH2 0x2D26 JUMP JUMPDEST DUP7 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x15180 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xB SWAP1 DUP2 PUSH2 0x2050 SWAP2 SWAP1 PUSH2 0x4312 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0x0 PUSH20 0x17CABC8001A30800835DD8206CEB0C4BA90B5913 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH20 0x73AF5BE3DB46CE3B7C50FD833B9C60180F339449 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x21E4 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x21DB SWAP2 SWAP1 PUSH2 0x4433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x2239 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xAAEBCF1BFA00580E41D966056B48521FA9F202645C86D4DDF28113E617C1B1D3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x22D0 SWAP3 SWAP2 SWAP1 PUSH2 0x444E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x22E4 PUSH2 0x2BA7 JUMP JUMPDEST PUSH2 0x22EC PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x0 CALLVALUE SUB PUSH2 0x2326 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLVALUE SWAP1 POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x23A9 JUMPI PUSH2 0x2710 PUSH2 0x1F4 CALLVALUE PUSH2 0x238E SWAP2 SWAP1 PUSH2 0x3EC9 JUMP JUMPDEST PUSH2 0x2398 SWAP2 SWAP1 PUSH2 0x3F3A JUMP JUMPDEST SWAP2 POP DUP2 CALLVALUE PUSH2 0x23A6 SWAP2 SWAP1 PUSH2 0x3F6B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x23FB SWAP1 PUSH2 0x3F9F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 CALLER CALLVALUE TIMESTAMP DUP5 ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x241C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2481 JUMPI PUSH2 0x2480 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2527 JUMPI PUSH2 0x2526 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x719AB00511E884D1EA4921EE843132435DC006B0BB7F8B67FB693B621E45BB53 CALLVALUE DUP6 DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x257B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x258F PUSH2 0x2BFE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2599 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x260B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2602 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2614 DUP2 PUSH2 0x2AD0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x261F PUSH2 0x26A6 JUMP JUMPDEST PUSH2 0x12C DUP2 LT ISZERO PUSH2 0x265B JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8D10E8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0x3E9CAC94B7C7DB9B86DF56321E6F7E3E88A6C87FC15FD825DF1492CF69E33551 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x269A SWAP3 SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x26AE PUSH2 0x2D30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x26CC PUSH2 0x170B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x272B JUMPI PUSH2 0x26EF PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2722 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2735 PUSH2 0x2D38 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x273F PUSH2 0x2AA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2787 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2794 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x284C JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2833 PUSH2 0x2D78 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2883 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x288D PUSH2 0x26A6 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x28F8 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28F5 SWAP2 SWAP1 PUSH2 0x4530 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2939 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2930 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x29A0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2997 SWAP2 SWAP1 PUSH2 0x3BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29AA DUP4 DUP4 PUSH2 0x2DCF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x29B7 PUSH2 0x2C3F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C1 PUSH2 0x2AA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2A09 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A16 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ADA PUSH2 0x2C17 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB1 PUSH2 0x2E42 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x2BF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C08 PUSH2 0x2E42 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2C47 PUSH2 0x1230 JUMP JUMPDEST ISZERO PUSH2 0x2C7E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2CC6 DUP7 DUP7 PUSH2 0x2E6A JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2CD6 DUP3 DUP3 PUSH2 0x2EC6 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CED PUSH2 0x302A JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2CFE PUSH2 0x3055 JUMP JUMPDEST PUSH2 0x2D07 DUP2 PUSH2 0x3095 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D12 PUSH2 0x3055 JUMP JUMPDEST PUSH2 0x2D1A PUSH2 0x311B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2D24 PUSH2 0x3055 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2D2E PUSH2 0x3055 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2D40 PUSH2 0x1230 JUMP JUMPDEST PUSH2 0x2D76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DA6 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x313C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2DD8 DUP3 PUSH2 0x3146 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2E35 JUMPI PUSH2 0x2E2F DUP3 DUP3 PUSH2 0x3213 JUMP JUMPDEST POP PUSH2 0x2E3E JUMP JUMPDEST PUSH2 0x2E3D PUSH2 0x3297 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x2EAF JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x2EA1 DUP9 DUP3 DUP6 DUP6 PUSH2 0x32D4 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2EBF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2EDA JUMPI PUSH2 0x2ED9 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2EED JUMPI PUSH2 0x2EEC PUSH2 0x3826 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x3026 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F07 JUMPI PUSH2 0x2F06 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F1A JUMPI PUSH2 0x2F19 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2F51 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F65 JUMPI PUSH2 0x2F64 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F78 JUMPI PUSH2 0x2F77 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2FBD JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FB4 SWAP2 SWAP1 PUSH2 0x378A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2FD0 JUMPI PUSH2 0x2FCF PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2FE3 JUMPI PUSH2 0x2FE2 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x3025 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x301C SWAP2 SWAP1 PUSH2 0x3BB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x305D PUSH2 0x33C8 JUMP JUMPDEST PUSH2 0x3093 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x309D PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x310F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3106 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3118 DUP2 PUSH2 0x2AD0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3123 PUSH2 0x3055 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312D PUSH2 0x2E42 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x31A2 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3199 SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x31CF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x313C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x323D SWAP2 SWAP1 PUSH2 0x4599 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3278 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x327D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x328D DUP6 DUP4 DUP4 PUSH2 0x33E8 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x32D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x3314 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x33BE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3339 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x45CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x335B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x33AF JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x33BE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D2 PUSH2 0x2CE2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x33FD JUMPI PUSH2 0x33F8 DUP3 PUSH2 0x3477 JUMP JUMPDEST PUSH2 0x346F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x3425 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x3467 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345E SWAP2 SWAP1 PUSH2 0x39FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x3470 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x3489 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x350C JUMPI PUSH2 0x350B PUSH2 0x3826 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3551 DUP3 PUSH2 0x3526 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3561 DUP2 PUSH2 0x3546 JUMP JUMPDEST DUP2 EQ PUSH2 0x356C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x357E DUP2 PUSH2 0x3558 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3599 DUP2 PUSH2 0x3584 JUMP JUMPDEST DUP2 EQ PUSH2 0x35A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x35B6 DUP2 PUSH2 0x3590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x35D3 JUMPI PUSH2 0x35D2 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35E1 DUP6 DUP3 DUP7 ADD PUSH2 0x356F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x35F2 DUP6 DUP3 DUP7 ADD PUSH2 0x35A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x360F DUP2 PUSH2 0x35FC JUMP JUMPDEST DUP2 EQ PUSH2 0x361A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x362C DUP2 PUSH2 0x3606 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3649 JUMPI PUSH2 0x3648 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3657 DUP6 DUP3 DUP7 ADD PUSH2 0x356F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3668 DUP6 DUP3 DUP7 ADD PUSH2 0x361D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x367B DUP2 PUSH2 0x3584 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3696 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3672 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36B2 JUMPI PUSH2 0x36B1 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36C0 DUP5 DUP3 DUP6 ADD PUSH2 0x356F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3703 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36E8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372B DUP3 PUSH2 0x36C9 JUMP JUMPDEST PUSH2 0x3735 DUP2 DUP6 PUSH2 0x36D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3745 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36E5 JUMP JUMPDEST PUSH2 0x374E DUP2 PUSH2 0x370F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3773 DUP2 DUP5 PUSH2 0x3720 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3784 DUP2 PUSH2 0x35FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x379F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x377B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37B8 DUP2 PUSH2 0x37A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x37C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x37D5 DUP2 PUSH2 0x37AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37F1 JUMPI PUSH2 0x37F0 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37FF DUP5 DUP3 DUP6 ADD PUSH2 0x37C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3811 DUP2 PUSH2 0x3546 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3820 DUP2 PUSH2 0x35FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x3866 JUMPI PUSH2 0x3865 PUSH2 0x3826 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x3877 DUP3 PUSH2 0x3855 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3887 DUP3 PUSH2 0x3869 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3897 DUP2 PUSH2 0x387C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x38B3 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3808 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x38C6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x38D9 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x38EC PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x3817 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x38FF PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x388E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x391A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x389D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3929 DUP2 PUSH2 0x3546 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3938 DUP2 PUSH2 0x387C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3953 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3920 JUMP JUMPDEST PUSH2 0x3960 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x396D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x397A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x3987 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x392F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39A8 JUMPI PUSH2 0x39A7 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39B6 DUP6 DUP3 DUP7 ADD PUSH2 0x361D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x39C7 DUP6 DUP3 DUP7 ADD PUSH2 0x356F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x39E6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x39F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x377B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A0F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3920 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3A57 DUP3 PUSH2 0x370F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3A76 JUMPI PUSH2 0x3A75 PUSH2 0x3A1F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A89 PUSH2 0x3512 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A95 DUP3 DUP3 PUSH2 0x3A4E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3AB5 JUMPI PUSH2 0x3AB4 PUSH2 0x3A1F JUMP JUMPDEST JUMPDEST PUSH2 0x3ABE DUP3 PUSH2 0x370F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AED PUSH2 0x3AE8 DUP5 PUSH2 0x3A9A JUMP JUMPDEST PUSH2 0x3A7F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3B09 JUMPI PUSH2 0x3B08 PUSH2 0x3A1A JUMP JUMPDEST JUMPDEST PUSH2 0x3B14 DUP5 DUP3 DUP6 PUSH2 0x3ACB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3B31 JUMPI PUSH2 0x3B30 PUSH2 0x3A15 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3B41 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3ADA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B61 JUMPI PUSH2 0x3B60 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B6F DUP6 DUP3 DUP7 ADD PUSH2 0x356F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B90 JUMPI PUSH2 0x3B8F PUSH2 0x3521 JUMP JUMPDEST JUMPDEST PUSH2 0x3B9C DUP6 DUP3 DUP7 ADD PUSH2 0x3B1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BAF DUP2 PUSH2 0x37A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BCA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3BF0 JUMPI PUSH2 0x3BEF PUSH2 0x3A15 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C0D JUMPI PUSH2 0x3C0C PUSH2 0x3BD0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3C29 JUMPI PUSH2 0x3C28 PUSH2 0x3BD5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3C46 JUMPI PUSH2 0x3C45 PUSH2 0x3A15 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C63 JUMPI PUSH2 0x3C62 PUSH2 0x3BD0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x3C7F JUMPI PUSH2 0x3C7E PUSH2 0x3BD5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3CA2 JUMPI PUSH2 0x3CA1 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CB0 DUP9 DUP3 DUP10 ADD PUSH2 0x37C6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CD1 JUMPI PUSH2 0x3CD0 PUSH2 0x3521 JUMP JUMPDEST JUMPDEST PUSH2 0x3CDD DUP9 DUP3 DUP10 ADD PUSH2 0x3BDA JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D00 JUMPI PUSH2 0x3CFF PUSH2 0x3521 JUMP JUMPDEST JUMPDEST PUSH2 0x3D0C DUP9 DUP3 DUP10 ADD PUSH2 0x3C30 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D31 JUMPI PUSH2 0x3D30 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D3F DUP5 DUP3 DUP6 ADD PUSH2 0x361D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D60 DUP3 PUSH2 0x3D48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D72 DUP3 PUSH2 0x3D55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D8A PUSH2 0x3D85 DUP3 PUSH2 0x3546 JUMP JUMPDEST PUSH2 0x3D67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DAB PUSH2 0x3DA6 DUP3 PUSH2 0x35FC JUMP JUMPDEST PUSH2 0x3D90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DBD DUP3 DUP6 PUSH2 0x3D79 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x3DCD DUP3 DUP5 PUSH2 0x3D9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E17 DUP3 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP PUSH2 0x3E22 DUP4 PUSH2 0x35FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3E3A JUMPI PUSH2 0x3E39 PUSH2 0x3DDD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3920 JUMP JUMPDEST PUSH2 0x3E62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x377B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3EB0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3EC3 JUMPI PUSH2 0x3EC2 PUSH2 0x3E69 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3ED4 DUP3 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP PUSH2 0x3EDF DUP4 PUSH2 0x35FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3EED DUP2 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3F04 JUMPI PUSH2 0x3F03 PUSH2 0x3DDD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F45 DUP3 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP PUSH2 0x3F50 DUP4 PUSH2 0x35FC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3F60 JUMPI PUSH2 0x3F5F PUSH2 0x3F0B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F76 DUP3 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP PUSH2 0x3F81 DUP4 PUSH2 0x35FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3F99 JUMPI PUSH2 0x3F98 PUSH2 0x3DDD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FAA DUP3 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3FDC JUMPI PUSH2 0x3FDB PUSH2 0x3DDD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FF2 DUP3 PUSH2 0x35FC JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x4005 JUMPI PUSH2 0x4004 PUSH2 0x3DDD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x402B PUSH1 0x0 DUP4 PUSH2 0x4010 JUMP JUMPDEST SWAP2 POP PUSH2 0x4036 DUP3 PUSH2 0x401B JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x404C DUP3 PUSH2 0x401E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4071 PUSH2 0x406C DUP3 PUSH2 0x37A5 JUMP JUMPDEST PUSH2 0x4056 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4083 DUP3 DUP8 PUSH2 0x4060 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x4093 DUP3 DUP7 PUSH2 0x3D79 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x40A3 DUP3 DUP6 PUSH2 0x3D9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x40B3 DUP3 DUP5 PUSH2 0x3D79 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x4120 JUMPI PUSH2 0x411F PUSH2 0x40F4 JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4142 JUMPI PUSH2 0x4141 PUSH2 0x40F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x415E JUMPI PUSH2 0x415D PUSH2 0x40FE JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x41C8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x418B JUMP JUMPDEST PUSH2 0x41D2 DUP7 DUP4 PUSH2 0x418B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x420F PUSH2 0x420A PUSH2 0x4205 DUP5 PUSH2 0x35FC JUMP JUMPDEST PUSH2 0x41EA JUMP JUMPDEST PUSH2 0x35FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4229 DUP4 PUSH2 0x41F4 JUMP JUMPDEST PUSH2 0x423D PUSH2 0x4235 DUP3 PUSH2 0x4216 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4198 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4252 PUSH2 0x4245 JUMP JUMPDEST PUSH2 0x425D DUP2 DUP5 DUP5 PUSH2 0x4220 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4281 JUMPI PUSH2 0x4276 PUSH1 0x0 DUP3 PUSH2 0x424A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4263 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x42C6 JUMPI PUSH2 0x4297 DUP2 PUSH2 0x4166 JUMP JUMPDEST PUSH2 0x42A0 DUP5 PUSH2 0x417B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x42AF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x42C3 PUSH2 0x42BB DUP6 PUSH2 0x417B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4262 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42E9 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x42CB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4302 DUP4 DUP4 PUSH2 0x42D8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x431B DUP3 PUSH2 0x36C9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4334 JUMPI PUSH2 0x4333 PUSH2 0x3A1F JUMP JUMPDEST JUMPDEST PUSH2 0x433E DUP3 SLOAD PUSH2 0x3E98 JUMP JUMPDEST PUSH2 0x4349 DUP3 DUP3 DUP6 PUSH2 0x4285 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x437C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x436A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4374 DUP6 DUP3 PUSH2 0x42F6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x43DC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x438A DUP7 PUSH2 0x4166 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x43B2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x438D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x43CF JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x43CB PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x42D8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x441D PUSH2 0x4418 PUSH2 0x4413 DUP5 PUSH2 0x43E4 JUMP JUMPDEST PUSH2 0x41EA JUMP JUMPDEST PUSH2 0x43EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x442D DUP2 PUSH2 0x4402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4448 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4463 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3920 JUMP JUMPDEST PUSH2 0x4470 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3920 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4483 DUP3 DUP9 PUSH2 0x3D79 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4493 DUP3 DUP8 PUSH2 0x3D9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x44A3 DUP3 DUP7 PUSH2 0x3D9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x44B3 DUP3 DUP6 PUSH2 0x3D9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x44C3 DUP3 DUP5 PUSH2 0x3D79 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x44EB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x44F8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x377B JUMP JUMPDEST PUSH2 0x4505 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3BA6 JUMP JUMPDEST PUSH2 0x4512 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x377B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x452A DUP2 PUSH2 0x37AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4546 JUMPI PUSH2 0x4545 PUSH2 0x351C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4554 DUP5 DUP3 DUP6 ADD PUSH2 0x451B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4573 DUP3 PUSH2 0x455D JUMP JUMPDEST PUSH2 0x457D DUP2 DUP6 PUSH2 0x4010 JUMP JUMPDEST SWAP4 POP PUSH2 0x458D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36E5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45A5 DUP3 DUP5 PUSH2 0x4568 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45C6 DUP2 PUSH2 0x45B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x45E1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3BA6 JUMP JUMPDEST PUSH2 0x45EE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x45BD JUMP JUMPDEST PUSH2 0x45FB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3BA6 JUMP JUMPDEST PUSH2 0x4608 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3BA6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE LOG0 PREVRANDAO SWAP3 PUSH16 0xC53C167D6694D4DB8D4118A05778DE90 SAR 0xC6 DUP13 0xEB TIMESTAMP DUP16 0x2F 0xC0 CALLDATALOAD 0xC2 STOP PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"927:10806:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6734:136;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11211:326;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2087:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4658:391;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11545:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1899:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1387:42;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10354:128;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1505:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1795;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;5057:533;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1455:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7018:67;;;;;;;;;;;;;:::i;:::-;;10926:277;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6137:357;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1191:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6878:132:20;;;;;;;;;;;;;:::i;:::-;;3708:134:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2237:21:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2496:145:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;2144:37:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9692:607;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1329:51;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10737:181;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1960:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10490:239;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5970:159:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1225:37:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8124:1560;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3777:813;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1847:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1997:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2188:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1275:47;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6502:224;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7142:974;;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5598:316:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6734:136;2334:13:0;:11;:13::i;:::-;6856:6:20::1;6825:18;:28;6844:8;6825:28;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6734:136:::0;;:::o;11211:326::-;11304:4;11321:19;11370:14;11386:12;11353:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11343:57;;;;;;11321:79;;11411:19;11433:15;:28;11449:11;11433:28;;;;;;;;;;;;11411:50;;11494:1;11479:11;:16;;:50;;;;;11518:11;11499:15;:30;;11479:50;11472:57;;;;11211:326;;;;:::o;2087:50::-;;;;;;;;;;;;;;;;;;;;;;:::o;4658:391::-;2334:13:0;:11;:13::i;:::-;4740:19:20::1;4789:17;4808:15;4772:52;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4762:63;;;;;;4740:85;;4836:19;4876:15;;4858;:33;;;;:::i;:::-;4836:55;;4943:11;4912:15;:28;4928:11;4912:28;;;;;;;;;;;:42;;;;4997:11;4980:61;5010:17;5029:11;4980:61;;;;;;;:::i;:::-;;;;;;;;4729:320;;4658:391:::0;:::o;11545:93::-;11590:13;11623:7;11616:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11545:93;:::o;1899:25::-;;;;:::o;1387:42::-;1428:1;1387:42;:::o;10354:128::-;10418:15;;:::i;:::-;10453:9;:21;10463:10;10453:21;;;;;;;;;;;10446:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;10354:128;;;:::o;1505:45::-;;;;;;;;;;;;;;;;;:::o;1795:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5057:533::-;2334:13:0;:11;:13::i;:::-;5160:19:20::1;5209:17;5228:12;5192:49;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5182:60;;;;;;5160:82;;5253:19;5275:15;:28;5291:11;5275:28;;;;;;;;;;;;5253:50;;5343:1;5328:11;:16:::0;5324:50:::1;;5353:21;;;;;;;;;;;;;;5324:50;5407:11;5389:15;:29;5385:59;;;5427:17;;;;;;;;;;;;;;5385:59;5472:15;:28;5488:11;5472:28;;;;;;;;;;;5465:35;;;5551:11;5535:47;5564:17;5535:47;;;;;;:::i;:::-;;;;;;;;5149:441;;5057:533:::0;;:::o;1455:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;7018:67::-;2334:13:0;:11;:13::i;:::-;7067:10:20::1;:8;:10::i;:::-;7018:67::o:0;10926:277::-;11001:11;11014:15;11046:11;:17;11058:4;11046:17;;;;;;;;;;;;;;;;;;;;;;;;;11042:68;;;11088:1;11091:6;11080:18;;;;;;11042:68;1317:5;1259:3;11127:6;:16;;;;:::i;:::-;11126:36;;;;:::i;:::-;11120:42;;11192:3;11183:6;:12;;;;:::i;:::-;11173:22;;10926:277;;;;;;:::o;6137:357::-;2334:13:0;:11;:13::i;:::-;6226:7:20::1;:36;;;;;6238:13;:24;6252:9;6238:24;;;;;;;;;;;;;;;;;;;;;;;;;6237:25;6226:36;6222:168;;;6279:10;;:12;;;;;;;;;:::i;:::-;;;;;;6222:168;;;6314:7;6313:8;:36;;;;;6325:13;:24;6339:9;6325:24;;;;;;;;;;;;;;;;;;;;;;;;;6313:36;6309:81;;;6366:10;;:12;;;;;;;;;:::i;:::-;;;;;;6309:81;6222:168;6427:7;6400:13;:24;6414:9;6400:24;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;6467:9;6450:36;;;6478:7;6450:36;;;;;;:::i;:::-;;;;;;;;6137:357:::0;;:::o;1191:27::-;;;;;;;;;;;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;6878:132:20:-;6929:18;:30;6948:10;6929:30;;;;;;;;;;;;;;;;;;;;;;;;;6924:59;;6968:15;;;;;;;;;;;;;;6924:59;6994:8;:6;:8::i;:::-;6878:132::o;3708:134:2:-;3777:7;2926:20;:18;:20::i;:::-;811:66:8::1;3803:32:2;;3796:39;;3708:134:::0;:::o;2237:21:20:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2496:145:4:-;2543:4;2559:25;2587:21;:19;:21::i;:::-;2559:49;;2625:1;:9;;;;;;;;;;;;2618:16;;;2496:145;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2144:37:20:-;;;;:::o;9692:607::-;3395:21:5;:19;:21::i;:::-;9761:18:20::1;9782:9;:21;9792:10;9782:21;;;;;;;;;;;9761:42;;9830:14;9818:26;;;;;;;;:::i;:::-;;:1;:8;;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;9814:54;;9853:15;;;;;;;;;;;;;;9814:54;9893:10;9883:20;;:1;:6;;;;;;;;;;;;:20;;;9879:50;;9912:17;;;;;;;;;;;;;;9879:50;1370:10;9963:1;:11;;;:28;;;;:::i;:::-;9944:15;:47;9940:80;;10000:20;;;;;;;;;;;;;;9940:80;10052:15;10041:1;:8;;;:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;10078:14;10095:1;:16;;;10078:33;;10133:9;10148:10;:15;;10171:6;10148:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10132:50;;;10198:4;10193:32;;10211:14;;;;;;;;;;;;;;10193:32;10260:10;10251:40;10272:10;10284:6;10251:40;;;;;;;:::i;:::-;;;;;;;;9750:549;;;3437:20:5::0;:18;:20::i;:::-;9692:607:20;:::o;1329:51::-;1370:10;1329:51;:::o;10737:181::-;10803:7;10823:17;10843:9;:21;10853:10;10843:21;;;;;;;;;;;10823:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1370:10;10882:1;:11;;;:28;;;;:::i;:::-;10875:35;;;10737:181;;;:::o;1960:30::-;;;;:::o;10490:239::-;10552:4;10569:17;10589:9;:21;10599:10;10589:21;;;;;;;;;;;10569:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;10640:14;10628:26;;;;;;;;:::i;:::-;;:1;:8;;;:26;;;;;;;;:::i;:::-;;;:93;;;;;1370:10;10693:1;:11;;;:28;;;;:::i;:::-;10675:15;:46;10628:93;10621:100;;;10490:239;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;5970:159:20:-;2334:13:0;:11;:13::i;:::-;6069:6:20::1;6049:11;:17;6061:4;6049:17;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;6108:4;6091:30;;;6114:6;6091:30;;;;;;:::i;:::-;;;;;;;;5970:159:::0;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;1225:37:20:-;1259:3;1225:37;:::o;8124:1560::-;3395:21:5;:19;:21::i;:::-;1979:19:4::1;:17;:19::i;:::-;8300:18:20::2;8321:9;:21;8331:10;8321:21;;;;;;;;;;;8300:42;;8369:14;8357:26;;;;;;;;:::i;:::-;;:1;:8;;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;8353:57;;8392:18;;;;;;;;;;;;;;8353:57;8443:1;8425:20;;:1;:6;;;;;;;;;;;;:20;;::::0;8421:52:::2;;8454:19;;;;;;;;;;;;;;8421:52;8509:7;;:14;;8488:10;;:17;;:35;8484:63;;8532:15;;;;;;;;;;;;;;8484:63;1428:1;8562:10;;:17;;:34;8558:68;;;8605:21;;;;;;;;;;;;;;8558:68;8639:15;8698:10;8724:1;:6;;;;;;;;;;;;8746:1;:15;;;8784:4;8667:133;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8657:144;;;;;;8639:162;;8812:19;8834:48;8874:7;8834:39;:48::i;:::-;8812:70;;8895:21;8933:7;;:14;;8919:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8895:53;;8974:9;8969:455;8993:10;;:17;;8989:1;:21;8969:455;;;9032:17;9052:41;9066:11;9079:10;;9090:1;9079:13;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;9052:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:41::i;:::-;9032:61;;9125:7;;9133:1;9125:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;9112:23;;:9;:23;;;9108:51;;9144:15;;;;;;;;;;;;;;9108:51;9179:13;:24;9193:9;9179:24;;;;;;;;;;;;;;;;;;;;;;;;;9174:59;;9212:21;;;;;;;;;;;;;;9174:59;9267:9;9262:117;9286:1;9282;:5;9262:117;;;9328:9;9317:20;;:4;9322:1;9317:7;;;;;;;;:::i;:::-;;;;;;;;:20;;::::0;9313:50:::2;;9346:17;;;;;;;;;;;;;;9313:50;9289:3;;;;;;;9262:117;;;;9403:9;9393:4;9398:1;9393:7;;;;;;;;:::i;:::-;;;;;;;:19;;;;;;;;;::::0;::::2;9017:407;9012:3;;;;;;;8969:455;;;;9455:16;9444:1;:8;;;:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;9493:9;9508:12:::0;::::2;;;;;;;;;;:17;;9533:1;:16;;;9508:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9492:62;;;9570:4;9565:33;;9583:15;;;;;;;;;;;;;;9565:33;9640:10;9624:52;9652:1;:6;;;;;;;;;;;;9660:1;:15;;;9624:52;;;;;;;:::i;:::-;;;;;;;;8289:1395;;;;;3437:20:5::0;:18;:20::i;:::-;8124:1560:20;;;;;:::o;3777:813::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;3901:26:20::1;3916:10;3901:14;:26::i;:::-;3938:24;:22;:24::i;:::-;3973;:22;:24::i;:::-;4008:17;:15;:17::i;:::-;4061:13;4046:12;::::0;:28:::1;;;;;;;;;;;;;;;;;;4103:16;4085:15;:34;;;;4180:8;4155:22;:33;;;;4199:17;;;;;;;;;;;;;;;;::::0;:7:::1;:17;;;;;;:::i;:::-;;4338:4;4280:11:::0;:55:::1;4292:42;4280:55;;;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;4456:4;4396:13;:57;4410:42;4396:57;;;;;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;4484:1;4471:10;:14;;;;4578:4;4545:18;:30;4564:10;4545:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;3777:813:20;;:::o;1847:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;1997:50::-;;;;;;;;;;;;;;;;;:::o;2188:36::-;;;;:::o;1275:47::-;1317:5;1275:47;:::o;6502:224::-;2334:13:0;:11;:13::i;:::-;6580:20:20::1;6603:12:::0;::::1;;;;;;;;;;6580:35;;6641:13;6626:12;::::0;:28:::1;;;;;;;;;;;;;;;;;;6670:48;6690:12;6704:13;6670:48;;;;;;;:::i;:::-;;;;;;;;6569:157;6502:224:::0;:::o;7142:974::-;3395:21:5;:19;:21::i;:::-;1979:19:4::1;:17;:19::i;:::-;7232:1:20::2;7219:9;:14:::0;7215:42:::2;;7242:15;;;;;;;;;;;;;;7215:42;7278:11;7304:15:::0;7322:9:::2;7304:27;;7357:11;:23;7369:10;7357:23;;;;;;;;;;;;;;;;;;;;;;;;;7352:142;;1317:5;1259:3;7404:9;:19;;;;:::i;:::-;7403:39;;;;:::i;:::-;7397:45;;7479:3;7467:9;:15;;;;:::i;:::-;7457:25;;7352:142;7514:13;7530:10;:22;7541:10;7530:22;;;;;;;;;;;;;;;;:24;;;;;;;;;:::i;:::-;;;;;7514:40;;7565:18;7627:10;7653:9;7678:15;7709:5;7737:4;7596:157;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7586:168;;;;;;7565:189;;7799:207;;;;;;;;7829:10;7799:207;;;;;;7870:9;7799:207;;;;7909:7;7799:207;;;;7942:15;7799:207;;;;7980:14;7799:207;;;;;;;;:::i;:::-;;;;::::0;7775:9:::2;:21;7785:10;7775:21;;;;;;;;;;;:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8048:10;8032:76;;;8060:9;8071:7;8080:10;8092:15;8032:76;;;;;;;;;:::i;:::-;;;;;;;;7204:912;;;;3437:20:5::0;:18;:20::i;:::-;7142:974:20:o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;5598:316:20:-;2334:13:0;:11;:13::i;:::-;5691:3:20::1;5677:11;:17;5673:47;;;5703:17;;;;;;;;;;;;;;5673:47;5762:19;5784:15;;5762:37;;5828:11;5810:15;:29;;;;5865:41;5881:11;5894;5865:41;;;;;;;:::i;:::-;;;;;;;;5662:252;5598:316:::0;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3478:178:4:-;2226:16;:14;:16::i;:::-;3536:25:::1;3564:21;:19;:21::i;:::-;3536:49;;3607:5;3595:1;:9;;;:17;;;;;;;;;;;;;;;;;;3627:22;3636:12;:10;:12::i;:::-;3627:22;;;;;;:::i;:::-;;;;;;;;3526:130;3478:178::o:0;4578:312:2:-;4667:6;4650:23;;4658:4;4650:23;;;:120;;;;4764:6;4728:42;;:32;:30;:32::i;:::-;:42;;;;4650:120;4633:251;;;4844:29;;;;;;;;;;;;;;4633:251;4578:312::o;11646:84:20:-;2334:13:0;:11;:13::i;:::-;11646:84:20;:::o;6032:538:2:-;6149:17;6131:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6127:437;;6535:17;6493:60;;;;;;;;;;;:::i;:::-;;;;;;;;6127:437;811:66:8;6233:32:2;;6225:4;:40;6221:120;;6321:4;6292:34;;;;;;;;;;;:::i;:::-;;;;;;;;6221:120;6354:54;6384:17;6403:4;6354:29;:54::i;:::-;6184:235;6032:538;;:::o;3170:176:4:-;1979:19;:17;:19::i;:::-;3229:25:::1;3257:21;:19;:21::i;:::-;3229:49;;3300:4;3288:1;:9;;;:16;;;;;;;;;;;;;;;;;;3319:20;3326:12;:10;:12::i;:::-;3319:20;;;;;;:::i;:::-;;;;;;;;3219:127;3170:176::o:0;5007:213:2:-;5090:6;5073:23;;5081:4;5073:23;;;5069:145;;5174:29;;;;;;;;;;;;;;5069:145;5007:213::o;1147:162:4:-;1200:25;1270:23;1260:33;;1147:162;:::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;3470:384:5:-;3519:32;3554:28;:26;:28::i;:::-;3519:63;;1991:1;3670;:9;;;:20;3666:88;;3713:30;;;;;;;;;;;;;;3666:88;1991:1;3828;:9;;:19;;;;3509:345;3470:384::o;3860:283::-;3908:32;3943:28;:26;:28::i;:::-;3908:63;;1949:1;4113;:9;;:23;;;;3898:245;3860:283::o;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;2709:128:4:-;2774:8;:6;:8::i;:::-;2770:61;;;2805:15;;;;;;;;;;;;;;2770:61;2709:128::o;1247:433:16:-;1323:14;1401:34;1395:4;1388:48;1503:11;1497:4;1490:25;1595:4;1589;1579:21;1569:31;;1247:433;;;:::o;3714:255:15:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;3953:9;3946:16;;;;;3714:255;;;;:::o;9071:205:1:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;1847:127:0:-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;2684:111:5:-;6929:20:1;:18;:20::i;:::-;2754:34:5::1;:32;:34::i;:::-;2684:111::o:0;2970:67:2:-;6929:20:1;:18;:20::i;:::-;2970:67:2:o;2266:60:4:-;6929:20:1;:18;:20::i;:::-;2266:60:4:o;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;2909:126:4:-;2972:8;:6;:8::i;:::-;2967:62;;3003:15;;;;;;;;;;;;;;2967:62;2909:126::o;1441:138:8:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;2395:183:5:-;2455:32;2532:30;2522:40;;2395:183;:::o;2129:778:15:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;8819:122:1:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;1980:235:0:-;6929:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;2801:183:5:-;6929:20:1;:18;:20::i;:::-;2881:32:5::1;2916:28;:26;:28::i;:::-;2881:63;;1949:1;2954;:9;;:23;;;;2871:113;2801:183::o:0;1899:163:13:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:8:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:10:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:8:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;5203:1551:15:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;4437:582:10:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;5559:434::-;5710:1;5690:10;:17;:21;5686:301;;;5894:10;5888:17;5881:4;5869:10;5865:21;5858:48;5686:301;5957:19;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:90::-;875:7;918:5;911:13;904:21;893:32;;841:90;;;:::o;937:116::-;1007:21;1022:5;1007:21;:::i;:::-;1000:5;997:32;987:60;;1043:1;1040;1033:12;987:60;937:116;:::o;1059:133::-;1102:5;1140:6;1127:20;1118:29;;1156:30;1180:5;1156:30;:::i;:::-;1059:133;;;;:::o;1198:468::-;1263:6;1271;1320:2;1308:9;1299:7;1295:23;1291:32;1288:119;;;1326:79;;:::i;:::-;1288:119;1446:1;1471:53;1516:7;1507:6;1496:9;1492:22;1471:53;:::i;:::-;1461:63;;1417:117;1573:2;1599:50;1641:7;1632:6;1621:9;1617:22;1599:50;:::i;:::-;1589:60;;1544:115;1198:468;;;;;:::o;1672:77::-;1709:7;1738:5;1727:16;;1672:77;;;:::o;1755:122::-;1828:24;1846:5;1828:24;:::i;:::-;1821:5;1818:35;1808:63;;1867:1;1864;1857:12;1808:63;1755:122;:::o;1883:139::-;1929:5;1967:6;1954:20;1945:29;;1983:33;2010:5;1983:33;:::i;:::-;1883:139;;;;:::o;2028:474::-;2096:6;2104;2153:2;2141:9;2132:7;2128:23;2124:32;2121:119;;;2159:79;;:::i;:::-;2121:119;2279:1;2304:53;2349:7;2340:6;2329:9;2325:22;2304:53;:::i;:::-;2294:63;;2250:117;2406:2;2432:53;2477:7;2468:6;2457:9;2453:22;2432:53;:::i;:::-;2422:63;;2377:118;2028:474;;;;;:::o;2508:109::-;2589:21;2604:5;2589:21;:::i;:::-;2584:3;2577:34;2508:109;;:::o;2623:210::-;2710:4;2748:2;2737:9;2733:18;2725:26;;2761:65;2823:1;2812:9;2808:17;2799:6;2761:65;:::i;:::-;2623:210;;;;:::o;2839:329::-;2898:6;2947:2;2935:9;2926:7;2922:23;2918:32;2915:119;;;2953:79;;:::i;:::-;2915:119;3073:1;3098:53;3143:7;3134:6;3123:9;3119:22;3098:53;:::i;:::-;3088:63;;3044:117;2839:329;;;;:::o;3174:99::-;3226:6;3260:5;3254:12;3244:22;;3174:99;;;:::o;3279:169::-;3363:11;3397:6;3392:3;3385:19;3437:4;3432:3;3428:14;3413:29;;3279:169;;;;:::o;3454:246::-;3535:1;3545:113;3559:6;3556:1;3553:13;3545:113;;;3644:1;3639:3;3635:11;3629:18;3625:1;3620:3;3616:11;3609:39;3581:2;3578:1;3574:10;3569:15;;3545:113;;;3692:1;3683:6;3678:3;3674:16;3667:27;3516:184;3454:246;;;:::o;3706:102::-;3747:6;3798:2;3794:7;3789:2;3782:5;3778:14;3774:28;3764:38;;3706:102;;;:::o;3814:377::-;3902:3;3930:39;3963:5;3930:39;:::i;:::-;3985:71;4049:6;4044:3;3985:71;:::i;:::-;3978:78;;4065:65;4123:6;4118:3;4111:4;4104:5;4100:16;4065:65;:::i;:::-;4155:29;4177:6;4155:29;:::i;:::-;4150:3;4146:39;4139:46;;3906:285;3814:377;;;;:::o;4197:313::-;4310:4;4348:2;4337:9;4333:18;4325:26;;4397:9;4391:4;4387:20;4383:1;4372:9;4368:17;4361:47;4425:78;4498:4;4489:6;4425:78;:::i;:::-;4417:86;;4197:313;;;;:::o;4516:118::-;4603:24;4621:5;4603:24;:::i;:::-;4598:3;4591:37;4516:118;;:::o;4640:222::-;4733:4;4771:2;4760:9;4756:18;4748:26;;4784:71;4852:1;4841:9;4837:17;4828:6;4784:71;:::i;:::-;4640:222;;;;:::o;4868:77::-;4905:7;4934:5;4923:16;;4868:77;;;:::o;4951:122::-;5024:24;5042:5;5024:24;:::i;:::-;5017:5;5014:35;5004:63;;5063:1;5060;5053:12;5004:63;4951:122;:::o;5079:139::-;5125:5;5163:6;5150:20;5141:29;;5179:33;5206:5;5179:33;:::i;:::-;5079:139;;;;:::o;5224:329::-;5283:6;5332:2;5320:9;5311:7;5307:23;5303:32;5300:119;;;5338:79;;:::i;:::-;5300:119;5458:1;5483:53;5528:7;5519:6;5508:9;5504:22;5483:53;:::i;:::-;5473:63;;5429:117;5224:329;;;;:::o;5559:108::-;5636:24;5654:5;5636:24;:::i;:::-;5631:3;5624:37;5559:108;;:::o;5673:::-;5750:24;5768:5;5750:24;:::i;:::-;5745:3;5738:37;5673:108;;:::o;5787:180::-;5835:77;5832:1;5825:88;5932:4;5929:1;5922:15;5956:4;5953:1;5946:15;5973:116;6057:1;6050:5;6047:12;6037:46;;6063:18;;:::i;:::-;6037:46;5973:116;:::o;6095:133::-;6143:7;6172:5;6161:16;;6178:44;6216:5;6178:44;:::i;:::-;6095:133;;;:::o;6234:::-;6293:9;6326:35;6355:5;6326:35;:::i;:::-;6313:48;;6234:133;;;:::o;6373:139::-;6459:46;6499:5;6459:46;:::i;:::-;6454:3;6447:59;6373:139;;:::o;6588:1066::-;6737:4;6732:3;6728:14;6824:4;6817:5;6813:16;6807:23;6843:63;6900:4;6895:3;6891:14;6877:12;6843:63;:::i;:::-;6752:164;7008:4;7001:5;6997:16;6991:23;7027:63;7084:4;7079:3;7075:14;7061:12;7027:63;:::i;:::-;6926:174;7191:4;7184:5;7180:16;7174:23;7210:63;7267:4;7262:3;7258:14;7244:12;7210:63;:::i;:::-;7110:173;7370:4;7363:5;7359:16;7353:23;7389:63;7446:4;7441:3;7437:14;7423:12;7389:63;:::i;:::-;7293:169;7546:4;7539:5;7535:16;7529:23;7565:72;7631:4;7626:3;7622:14;7608:12;7565:72;:::i;:::-;7472:175;6706:948;6588:1066;;:::o;7660:327::-;7805:4;7843:3;7832:9;7828:19;7820:27;;7857:123;7977:1;7966:9;7962:17;7953:6;7857:123;:::i;:::-;7660:327;;;;:::o;7993:118::-;8080:24;8098:5;8080:24;:::i;:::-;8075:3;8068:37;7993:118;;:::o;8117:149::-;8213:46;8253:5;8213:46;:::i;:::-;8208:3;8201:59;8117:149;;:::o;8272:682::-;8486:4;8524:3;8513:9;8509:19;8501:27;;8538:71;8606:1;8595:9;8591:17;8582:6;8538:71;:::i;:::-;8619:72;8687:2;8676:9;8672:18;8663:6;8619:72;:::i;:::-;8701;8769:2;8758:9;8754:18;8745:6;8701:72;:::i;:::-;8783;8851:2;8840:9;8836:18;8827:6;8783:72;:::i;:::-;8865:82;8942:3;8931:9;8927:19;8918:6;8865:82;:::i;:::-;8272:682;;;;;;;;:::o;8960:474::-;9028:6;9036;9085:2;9073:9;9064:7;9060:23;9056:32;9053:119;;;9091:79;;:::i;:::-;9053:119;9211:1;9236:53;9281:7;9272:6;9261:9;9257:22;9236:53;:::i;:::-;9226:63;;9182:117;9338:2;9364:53;9409:7;9400:6;9389:9;9385:22;9364:53;:::i;:::-;9354:63;;9309:118;8960:474;;;;;:::o;9440:332::-;9561:4;9599:2;9588:9;9584:18;9576:26;;9612:71;9680:1;9669:9;9665:17;9656:6;9612:71;:::i;:::-;9693:72;9761:2;9750:9;9746:18;9737:6;9693:72;:::i;:::-;9440:332;;;;;:::o;9778:222::-;9871:4;9909:2;9898:9;9894:18;9886:26;;9922:71;9990:1;9979:9;9975:17;9966:6;9922:71;:::i;:::-;9778:222;;;;:::o;10006:117::-;10115:1;10112;10105:12;10129:117;10238:1;10235;10228:12;10252:180;10300:77;10297:1;10290:88;10397:4;10394:1;10387:15;10421:4;10418:1;10411:15;10438:281;10521:27;10543:4;10521:27;:::i;:::-;10513:6;10509:40;10651:6;10639:10;10636:22;10615:18;10603:10;10600:34;10597:62;10594:88;;;10662:18;;:::i;:::-;10594:88;10702:10;10698:2;10691:22;10481:238;10438:281;;:::o;10725:129::-;10759:6;10786:20;;:::i;:::-;10776:30;;10815:33;10843:4;10835:6;10815:33;:::i;:::-;10725:129;;;:::o;10860:307::-;10921:4;11011:18;11003:6;11000:30;10997:56;;;11033:18;;:::i;:::-;10997:56;11071:29;11093:6;11071:29;:::i;:::-;11063:37;;11155:4;11149;11145:15;11137:23;;10860:307;;;:::o;11173:146::-;11270:6;11265:3;11260;11247:30;11311:1;11302:6;11297:3;11293:16;11286:27;11173:146;;;:::o;11325:423::-;11402:5;11427:65;11443:48;11484:6;11443:48;:::i;:::-;11427:65;:::i;:::-;11418:74;;11515:6;11508:5;11501:21;11553:4;11546:5;11542:16;11591:3;11582:6;11577:3;11573:16;11570:25;11567:112;;;11598:79;;:::i;:::-;11567:112;11688:54;11735:6;11730:3;11725;11688:54;:::i;:::-;11408:340;11325:423;;;;;:::o;11767:338::-;11822:5;11871:3;11864:4;11856:6;11852:17;11848:27;11838:122;;11879:79;;:::i;:::-;11838:122;11996:6;11983:20;12021:78;12095:3;12087:6;12080:4;12072:6;12068:17;12021:78;:::i;:::-;12012:87;;11828:277;11767:338;;;;:::o;12111:652::-;12188:6;12196;12245:2;12233:9;12224:7;12220:23;12216:32;12213:119;;;12251:79;;:::i;:::-;12213:119;12371:1;12396:53;12441:7;12432:6;12421:9;12417:22;12396:53;:::i;:::-;12386:63;;12342:117;12526:2;12515:9;12511:18;12498:32;12557:18;12549:6;12546:30;12543:117;;;12579:79;;:::i;:::-;12543:117;12684:62;12738:7;12729:6;12718:9;12714:22;12684:62;:::i;:::-;12674:72;;12469:287;12111:652;;;;;:::o;12769:118::-;12856:24;12874:5;12856:24;:::i;:::-;12851:3;12844:37;12769:118;;:::o;12893:222::-;12986:4;13024:2;13013:9;13009:18;13001:26;;13037:71;13105:1;13094:9;13090:17;13081:6;13037:71;:::i;:::-;12893:222;;;;:::o;13121:117::-;13230:1;13227;13220:12;13244:117;13353:1;13350;13343:12;13382:579;13466:8;13476:6;13526:3;13519:4;13511:6;13507:17;13503:27;13493:122;;13534:79;;:::i;:::-;13493:122;13647:6;13634:20;13624:30;;13677:18;13669:6;13666:30;13663:117;;;13699:79;;:::i;:::-;13663:117;13813:4;13805:6;13801:17;13789:29;;13867:3;13859:4;13851:6;13847:17;13837:8;13833:32;13830:41;13827:128;;;13874:79;;:::i;:::-;13827:128;13382:579;;;;;:::o;13984:568::-;14057:8;14067:6;14117:3;14110:4;14102:6;14098:17;14094:27;14084:122;;14125:79;;:::i;:::-;14084:122;14238:6;14225:20;14215:30;;14268:18;14260:6;14257:30;14254:117;;;14290:79;;:::i;:::-;14254:117;14404:4;14396:6;14392:17;14380:29;;14458:3;14450:4;14442:6;14438:17;14428:8;14424:32;14421:41;14418:128;;;14465:79;;:::i;:::-;14418:128;13984:568;;;;;:::o;14558:1101::-;14700:6;14708;14716;14724;14732;14781:2;14769:9;14760:7;14756:23;14752:32;14749:119;;;14787:79;;:::i;:::-;14749:119;14907:1;14932:53;14977:7;14968:6;14957:9;14953:22;14932:53;:::i;:::-;14922:63;;14878:117;15062:2;15051:9;15047:18;15034:32;15093:18;15085:6;15082:30;15079:117;;;15115:79;;:::i;:::-;15079:117;15228:91;15311:7;15302:6;15291:9;15287:22;15228:91;:::i;:::-;15210:109;;;;15005:324;15396:2;15385:9;15381:18;15368:32;15427:18;15419:6;15416:30;15413:117;;;15449:79;;:::i;:::-;15413:117;15562:80;15634:7;15625:6;15614:9;15610:22;15562:80;:::i;:::-;15544:98;;;;15339:313;14558:1101;;;;;;;;:::o;15665:329::-;15724:6;15773:2;15761:9;15752:7;15748:23;15744:32;15741:119;;;15779:79;;:::i;:::-;15741:119;15899:1;15924:53;15969:7;15960:6;15949:9;15945:22;15924:53;:::i;:::-;15914:63;;15870:117;15665:329;;;;:::o;16000:94::-;16033:8;16081:5;16077:2;16073:14;16052:35;;16000:94;;;:::o;16100:::-;16139:7;16168:20;16182:5;16168:20;:::i;:::-;16157:31;;16100:94;;;:::o;16200:100::-;16239:7;16268:26;16288:5;16268:26;:::i;:::-;16257:37;;16200:100;;;:::o;16306:157::-;16411:45;16431:24;16449:5;16431:24;:::i;:::-;16411:45;:::i;:::-;16406:3;16399:58;16306:157;;:::o;16469:79::-;16508:7;16537:5;16526:16;;16469:79;;;:::o;16554:157::-;16659:45;16679:24;16697:5;16679:24;:::i;:::-;16659:45;:::i;:::-;16654:3;16647:58;16554:157;;:::o;16717:397::-;16857:3;16872:75;16943:3;16934:6;16872:75;:::i;:::-;16972:2;16967:3;16963:12;16956:19;;16985:75;17056:3;17047:6;16985:75;:::i;:::-;17085:2;17080:3;17076:12;17069:19;;17105:3;17098:10;;16717:397;;;;;:::o;17120:180::-;17168:77;17165:1;17158:88;17265:4;17262:1;17255:15;17289:4;17286:1;17279:15;17306:191;17346:3;17365:20;17383:1;17365:20;:::i;:::-;17360:25;;17399:20;17417:1;17399:20;:::i;:::-;17394:25;;17442:1;17439;17435:9;17428:16;;17463:3;17460:1;17457:10;17454:36;;;17470:18;;:::i;:::-;17454:36;17306:191;;;;:::o;17503:332::-;17624:4;17662:2;17651:9;17647:18;17639:26;;17675:71;17743:1;17732:9;17728:17;17719:6;17675:71;:::i;:::-;17756:72;17824:2;17813:9;17809:18;17800:6;17756:72;:::i;:::-;17503:332;;;;;:::o;17841:180::-;17889:77;17886:1;17879:88;17986:4;17983:1;17976:15;18010:4;18007:1;18000:15;18027:320;18071:6;18108:1;18102:4;18098:12;18088:22;;18155:1;18149:4;18145:12;18176:18;18166:81;;18232:4;18224:6;18220:17;18210:27;;18166:81;18294:2;18286:6;18283:14;18263:18;18260:38;18257:84;;18313:18;;:::i;:::-;18257:84;18078:269;18027:320;;;:::o;18353:410::-;18393:7;18416:20;18434:1;18416:20;:::i;:::-;18411:25;;18450:20;18468:1;18450:20;:::i;:::-;18445:25;;18505:1;18502;18498:9;18527:30;18545:11;18527:30;:::i;:::-;18516:41;;18706:1;18697:7;18693:15;18690:1;18687:22;18667:1;18660:9;18640:83;18617:139;;18736:18;;:::i;:::-;18617:139;18401:362;18353:410;;;;:::o;18769:180::-;18817:77;18814:1;18807:88;18914:4;18911:1;18904:15;18938:4;18935:1;18928:15;18955:185;18995:1;19012:20;19030:1;19012:20;:::i;:::-;19007:25;;19046:20;19064:1;19046:20;:::i;:::-;19041:25;;19085:1;19075:35;;19090:18;;:::i;:::-;19075:35;19132:1;19129;19125:9;19120:14;;18955:185;;;;:::o;19146:194::-;19186:4;19206:20;19224:1;19206:20;:::i;:::-;19201:25;;19240:20;19258:1;19240:20;:::i;:::-;19235:25;;19284:1;19281;19277:9;19269:17;;19308:1;19302:4;19299:11;19296:37;;;19313:18;;:::i;:::-;19296:37;19146:194;;;;:::o;19346:233::-;19385:3;19408:24;19426:5;19408:24;:::i;:::-;19399:33;;19454:66;19447:5;19444:77;19441:103;;19524:18;;:::i;:::-;19441:103;19571:1;19564:5;19560:13;19553:20;;19346:233;;;:::o;19585:171::-;19624:3;19647:24;19665:5;19647:24;:::i;:::-;19638:33;;19693:4;19686:5;19683:15;19680:41;;19701:18;;:::i;:::-;19680:41;19748:1;19741:5;19737:13;19730:20;;19585:171;;;:::o;19762:147::-;19863:11;19900:3;19885:18;;19762:147;;;;:::o;19915:114::-;;:::o;20035:398::-;20194:3;20215:83;20296:1;20291:3;20215:83;:::i;:::-;20208:90;;20307:93;20396:3;20307:93;:::i;:::-;20425:1;20420:3;20416:11;20409:18;;20035:398;;;:::o;20439:379::-;20623:3;20645:147;20788:3;20645:147;:::i;:::-;20638:154;;20809:3;20802:10;;20439:379;;;:::o;20824:79::-;20863:7;20892:5;20881:16;;20824:79;;;:::o;20909:157::-;21014:45;21034:24;21052:5;21034:24;:::i;:::-;21014:45;:::i;:::-;21009:3;21002:58;20909:157;;:::o;21072:679::-;21268:3;21283:75;21354:3;21345:6;21283:75;:::i;:::-;21383:2;21378:3;21374:12;21367:19;;21396:75;21467:3;21458:6;21396:75;:::i;:::-;21496:2;21491:3;21487:12;21480:19;;21509:75;21580:3;21571:6;21509:75;:::i;:::-;21609:2;21604:3;21600:12;21593:19;;21622:75;21693:3;21684:6;21622:75;:::i;:::-;21722:2;21717:3;21713:12;21706:19;;21742:3;21735:10;;21072:679;;;;;;;:::o;21757:180::-;21805:77;21802:1;21795:88;21902:4;21899:1;21892:15;21926:4;21923:1;21916:15;21943:117;22052:1;22049;22042:12;22066:117;22175:1;22172;22165:12;22189:117;22298:1;22295;22288:12;22312:724;22389:4;22395:6;22451:11;22438:25;22551:1;22545:4;22541:12;22530:8;22514:14;22510:29;22506:48;22486:18;22482:73;22472:168;;22559:79;;:::i;:::-;22472:168;22671:18;22661:8;22657:33;22649:41;;22723:4;22710:18;22700:28;;22751:18;22743:6;22740:30;22737:117;;;22773:79;;:::i;:::-;22737:117;22881:2;22875:4;22871:13;22863:21;;22938:4;22930:6;22926:17;22910:14;22906:38;22900:4;22896:49;22893:136;;;22948:79;;:::i;:::-;22893:136;22402:634;22312:724;;;;;:::o;23042:141::-;23091:4;23114:3;23106:11;;23137:3;23134:1;23127:14;23171:4;23168:1;23158:18;23150:26;;23042:141;;;:::o;23189:93::-;23226:6;23273:2;23268;23261:5;23257:14;23253:23;23243:33;;23189:93;;;:::o;23288:107::-;23332:8;23382:5;23376:4;23372:16;23351:37;;23288:107;;;;:::o;23401:393::-;23470:6;23520:1;23508:10;23504:18;23543:97;23573:66;23562:9;23543:97;:::i;:::-;23661:39;23691:8;23680:9;23661:39;:::i;:::-;23649:51;;23733:4;23729:9;23722:5;23718:21;23709:30;;23782:4;23772:8;23768:19;23761:5;23758:30;23748:40;;23477:317;;23401:393;;;;;:::o;23800:60::-;23828:3;23849:5;23842:12;;23800:60;;;:::o;23866:142::-;23916:9;23949:53;23967:34;23976:24;23994:5;23976:24;:::i;:::-;23967:34;:::i;:::-;23949:53;:::i;:::-;23936:66;;23866:142;;;:::o;24014:75::-;24057:3;24078:5;24071:12;;24014:75;;;:::o;24095:269::-;24205:39;24236:7;24205:39;:::i;:::-;24266:91;24315:41;24339:16;24315:41;:::i;:::-;24307:6;24300:4;24294:11;24266:91;:::i;:::-;24260:4;24253:105;24171:193;24095:269;;;:::o;24370:73::-;24415:3;24370:73;:::o;24449:189::-;24526:32;;:::i;:::-;24567:65;24625:6;24617;24611:4;24567:65;:::i;:::-;24502:136;24449:189;;:::o;24644:186::-;24704:120;24721:3;24714:5;24711:14;24704:120;;;24775:39;24812:1;24805:5;24775:39;:::i;:::-;24748:1;24741:5;24737:13;24728:22;;24704:120;;;24644:186;;:::o;24836:543::-;24937:2;24932:3;24929:11;24926:446;;;24971:38;25003:5;24971:38;:::i;:::-;25055:29;25073:10;25055:29;:::i;:::-;25045:8;25041:44;25238:2;25226:10;25223:18;25220:49;;;25259:8;25244:23;;25220:49;25282:80;25338:22;25356:3;25338:22;:::i;:::-;25328:8;25324:37;25311:11;25282:80;:::i;:::-;24941:431;;24926:446;24836:543;;;:::o;25385:117::-;25439:8;25489:5;25483:4;25479:16;25458:37;;25385:117;;;;:::o;25508:169::-;25552:6;25585:51;25633:1;25629:6;25621:5;25618:1;25614:13;25585:51;:::i;:::-;25581:56;25666:4;25660;25656:15;25646:25;;25559:118;25508:169;;;;:::o;25682:295::-;25758:4;25904:29;25929:3;25923:4;25904:29;:::i;:::-;25896:37;;25966:3;25963:1;25959:11;25953:4;25950:21;25942:29;;25682:295;;;;:::o;25982:1395::-;26099:37;26132:3;26099:37;:::i;:::-;26201:18;26193:6;26190:30;26187:56;;;26223:18;;:::i;:::-;26187:56;26267:38;26299:4;26293:11;26267:38;:::i;:::-;26352:67;26412:6;26404;26398:4;26352:67;:::i;:::-;26446:1;26470:4;26457:17;;26502:2;26494:6;26491:14;26519:1;26514:618;;;;27176:1;27193:6;27190:77;;;27242:9;27237:3;27233:19;27227:26;27218:35;;27190:77;27293:67;27353:6;27346:5;27293:67;:::i;:::-;27287:4;27280:81;27149:222;26484:887;;26514:618;26566:4;26562:9;26554:6;26550:22;26600:37;26632:4;26600:37;:::i;:::-;26659:1;26673:208;26687:7;26684:1;26681:14;26673:208;;;26766:9;26761:3;26757:19;26751:26;26743:6;26736:42;26817:1;26809:6;26805:14;26795:24;;26864:2;26853:9;26849:18;26836:31;;26710:4;26707:1;26703:12;26698:17;;26673:208;;;26909:6;26900:7;26897:19;26894:179;;;26967:9;26962:3;26958:19;26952:26;27010:48;27052:4;27044:6;27040:17;27029:9;27010:48;:::i;:::-;27002:6;26995:64;26917:156;26894:179;27119:1;27115;27107:6;27103:14;27099:22;27093:4;27086:36;26521:611;;;26484:887;;26074:1303;;;25982:1395;;:::o;27383:85::-;27428:7;27457:5;27446:16;;27383:85;;;:::o;27474:101::-;27510:7;27550:18;27543:5;27539:30;27528:41;;27474:101;;;:::o;27581:156::-;27638:9;27671:60;27688:42;27697:32;27723:5;27697:32;:::i;:::-;27688:42;:::i;:::-;27671:60;:::i;:::-;27658:73;;27581:156;;;:::o;27743:145::-;27837:44;27875:5;27837:44;:::i;:::-;27832:3;27825:57;27743:145;;:::o;27894:236::-;27994:4;28032:2;28021:9;28017:18;28009:26;;28045:78;28120:1;28109:9;28105:17;28096:6;28045:78;:::i;:::-;27894:236;;;;:::o;28136:332::-;28257:4;28295:2;28284:9;28280:18;28272:26;;28308:71;28376:1;28365:9;28361:17;28352:6;28308:71;:::i;:::-;28389:72;28457:2;28446:9;28442:18;28433:6;28389:72;:::i;:::-;28136:332;;;;;:::o;28474:820::-;28698:3;28713:75;28784:3;28775:6;28713:75;:::i;:::-;28813:2;28808:3;28804:12;28797:19;;28826:75;28897:3;28888:6;28826:75;:::i;:::-;28926:2;28921:3;28917:12;28910:19;;28939:75;29010:3;29001:6;28939:75;:::i;:::-;29039:2;29034:3;29030:12;29023:19;;29052:75;29123:3;29114:6;29052:75;:::i;:::-;29152:2;29147:3;29143:12;29136:19;;29165:75;29236:3;29227:6;29165:75;:::i;:::-;29265:2;29260:3;29256:12;29249:19;;29285:3;29278:10;;28474:820;;;;;;;;:::o;29300:553::-;29477:4;29515:3;29504:9;29500:19;29492:27;;29529:71;29597:1;29586:9;29582:17;29573:6;29529:71;:::i;:::-;29610:72;29678:2;29667:9;29663:18;29654:6;29610:72;:::i;:::-;29692;29760:2;29749:9;29745:18;29736:6;29692:72;:::i;:::-;29774;29842:2;29831:9;29827:18;29818:6;29774:72;:::i;:::-;29300:553;;;;;;;:::o;29859:143::-;29916:5;29947:6;29941:13;29932:22;;29963:33;29990:5;29963:33;:::i;:::-;29859:143;;;;:::o;30008:351::-;30078:6;30127:2;30115:9;30106:7;30102:23;30098:32;30095:119;;;30133:79;;:::i;:::-;30095:119;30253:1;30278:64;30334:7;30325:6;30314:9;30310:22;30278:64;:::i;:::-;30268:74;;30224:128;30008:351;;;;:::o;30365:98::-;30416:6;30450:5;30444:12;30434:22;;30365:98;;;:::o;30469:386::-;30573:3;30601:38;30633:5;30601:38;:::i;:::-;30655:88;30736:6;30731:3;30655:88;:::i;:::-;30648:95;;30752:65;30810:6;30805:3;30798:4;30791:5;30787:16;30752:65;:::i;:::-;30842:6;30837:3;30833:16;30826:23;;30577:278;30469:386;;;;:::o;30861:271::-;30991:3;31013:93;31102:3;31093:6;31013:93;:::i;:::-;31006:100;;31123:3;31116:10;;30861:271;;;;:::o;31138:86::-;31173:7;31213:4;31206:5;31202:16;31191:27;;31138:86;;;:::o;31230:112::-;31313:22;31329:5;31313:22;:::i;:::-;31308:3;31301:35;31230:112;;:::o;31348:545::-;31521:4;31559:3;31548:9;31544:19;31536:27;;31573:71;31641:1;31630:9;31626:17;31617:6;31573:71;:::i;:::-;31654:68;31718:2;31707:9;31703:18;31694:6;31654:68;:::i;:::-;31732:72;31800:2;31789:9;31785:18;31776:6;31732:72;:::i;:::-;31814;31882:2;31871:9;31867:18;31858:6;31814:72;:::i;:::-;31348:545;;;;;;;:::o"},"methodIdentifiers":{"BPS_DENOMINATOR()":"e1a45218","FEE_BPS()":"bf333f2c","MIN_SIGNATURES()":"1a179692","REFUND_TIMEOUT()":"7d57900a","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","bridge()":"e78cea92","calculateFee(uint256,address)":"400ba069","canRefund(bytes32)":"8c8c2003","complete(bytes32,bytes[],address[])":"ca9e4453","emergencyOperators(address)":"09705de8","emergencyPause()":"51858e27","emergencyWithdrawDelay()":"72070b81","emergencyWithdrawTime()":"de9b9488","executeUpgrade(address,uint256)":"3e718e83","feeRecipient()":"46904840","getRefundTime(bytes32)":"838fb7f1","getTransfer(bytes32)":"260958a5","getVersion()":"0d8e6e2c","initialize(address,uint256)":"cd6dc687","isFeeExempt(address)":"3f4218e0","isUpgradeReady(address,uint256)":"05acedf5","isValidSigner(address)":"d5f50582","numSigners()":"12679fed","owner()":"8da5cb5b","paused()":"5c975abb","pendingUpgrades(bytes32)":"d8c17114","proxiableUUID()":"52d1902d","refund(bytes32)":"7249fbb6","renounceOwnership()":"715018a6","scheduleUpgrade(address)":"0c80447a","setEmergencyOperator(address,bool)":"02e88899","setFeeExempt(address,bool)":"8ebfc796","setFeeRecipient(address)":"e74b981b","setValidator(address,bool)":"4623c91d","transferOwnership(address)":"f2fde38b","transfers(bytes32)":"3c64f04b","unpause()":"3f4ba83a","updateTimelock(uint256)":"fa1ccffd","upgradeTimelock()":"8c879fb9","upgradeToAndCall(address,bytes)":"4f1ef286","userNonces(address)":"2f7801f4","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyFinalized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DuplicateSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ForwardFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimelock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTransferId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorizedSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughSignatures\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotRefundable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotYourTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RefundFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RefundNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UpgradeNotReady\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UpgradeNotScheduled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"transferId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bridgedAmount\",\"type\":\"uint256\"}],\"name\":\"BridgeCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bridgedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"transferId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"FeeExemptUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"transferId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Refunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTimelock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimelock\",\"type\":\"uint256\"}],\"name\":\"TimelockUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"upgradeHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"UpgradeExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"upgradeHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executeTime\",\"type\":\"uint256\"}],\"name\":\"UpgradeScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"ValidatorUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BPS_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_SIGNATURES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFUND_TIMEOUT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bridged\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transferId\",\"type\":\"bytes32\"}],\"name\":\"canRefund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transferId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"},{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"}],\"name\":\"complete\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"emergencyOperators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"scheduleTime\",\"type\":\"uint256\"}],\"name\":\"executeUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transferId\",\"type\":\"bytes32\"}],\"name\":\"getRefundTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transferId\",\"type\":\"bytes32\"}],\"name\":\"getTransfer\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"originalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bridgedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum SuperBridgeL2.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct SuperBridgeL2.Transfer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_upgradeTimelock\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFeeExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"scheduleTime\",\"type\":\"uint256\"}],\"name\":\"isUpgradeReady\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numSigners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pendingUpgrades\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transferId\",\"type\":\"bytes32\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"scheduleUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setEmergencyOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"setFeeExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"setValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"transfers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"originalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bridgedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum SuperBridgeL2.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimelock\",\"type\":\"uint256\"}],\"name\":\"updateTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upgradeTimelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"SuperBridgeL2 - L2 to L1 Bridge with Timelock\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Handles native token bridging from L2 to L1 with validator signatures\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperBridgeL2.sol\":\"SuperBridgeL2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/SuperBridgeL2.sol\":{\"keccak256\":\"0xe69da973f18c9bfd24587ff5a53c9e0fc5f0a5abe91aa4b5ae679c9cda782f3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f830c579c488602ab3dfab0c73a09392ece2e742e26212005a1992641ea6ef10\",\"dweb:/ipfs/QmStuMvX35jyfGHuNghtAAe2BDz31vxwXGw1eqe8fFuuvb\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":7167,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"feeRecipient","offset":0,"slot":"0","type":"t_address"},{"astId":7183,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"isFeeExempt","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":7187,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"userNonces","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":7208,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"transfers","offset":0,"slot":"3","type":"t_mapping(t_bytes32,t_struct(Transfer)7203_storage)"},{"astId":7212,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"isValidSigner","offset":0,"slot":"4","type":"t_mapping(t_address,t_bool)"},{"astId":7214,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"numSigners","offset":0,"slot":"5","type":"t_uint256"},{"astId":7216,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"upgradeTimelock","offset":0,"slot":"6","type":"t_uint256"},{"astId":7220,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"pendingUpgrades","offset":0,"slot":"7","type":"t_mapping(t_bytes32,t_uint256)"},{"astId":7224,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"emergencyOperators","offset":0,"slot":"8","type":"t_mapping(t_address,t_bool)"},{"astId":7226,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"emergencyWithdrawDelay","offset":0,"slot":"9","type":"t_uint256"},{"astId":7228,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"emergencyWithdrawTime","offset":0,"slot":"10","type":"t_uint256"},{"astId":7230,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"version","offset":0,"slot":"11","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_enum(Status)7191":{"encoding":"inplace","label":"enum SuperBridgeL2.Status","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(Transfer)7203_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct SuperBridgeL2.Transfer)","numberOfBytes":"32","value":"t_struct(Transfer)7203_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Transfer)7203_storage":{"encoding":"inplace","label":"struct SuperBridgeL2.Transfer","members":[{"astId":7193,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"user","offset":0,"slot":"0","type":"t_address"},{"astId":7195,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"originalAmount","offset":0,"slot":"1","type":"t_uint256"},{"astId":7197,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"bridgedAmount","offset":0,"slot":"2","type":"t_uint256"},{"astId":7199,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"timestamp","offset":0,"slot":"3","type":"t_uint256"},{"astId":7202,"contract":"contracts/SuperBridgeL2.sol:SuperBridgeL2","label":"status","offset":0,"slot":"4","type":"t_enum(Status)7191"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}